<?php
/**
 * MatchV5ParticipantDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Riot API
 *
 * OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. ***
 *
 * OpenAPI spec version: b7cd9f901117fa03f7c4e5f9c0a954dac569f75a
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * MatchV5ParticipantDto Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MatchV5ParticipantDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'match-v5.ParticipantDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'all_in_pings' => 'int',
        'assist_me_pings' => 'int',
        'assists' => 'int',
        'baron_kills' => 'int',
        'bounty_level' => 'int',
        'champ_experience' => 'int',
        'champ_level' => 'int',
        'champion_id' => 'int',
        'champion_name' => 'string',
        'command_pings' => 'int',
        'champion_transform' => 'int',
        'consumables_purchased' => 'int',
        'challenges' => '\Swagger\Client\Model\MatchV5ChallengesDto',
        'damage_dealt_to_buildings' => 'int',
        'damage_dealt_to_objectives' => 'int',
        'damage_dealt_to_turrets' => 'int',
        'damage_self_mitigated' => 'int',
        'deaths' => 'int',
        'detector_wards_placed' => 'int',
        'double_kills' => 'int',
        'dragon_kills' => 'int',
        'eligible_for_progression' => 'bool',
        'enemy_missing_pings' => 'int',
        'enemy_vision_pings' => 'int',
        'first_blood_assist' => 'bool',
        'first_blood_kill' => 'bool',
        'first_tower_assist' => 'bool',
        'first_tower_kill' => 'bool',
        'game_ended_in_early_surrender' => 'bool',
        'game_ended_in_surrender' => 'bool',
        'hold_pings' => 'int',
        'get_back_pings' => 'int',
        'gold_earned' => 'int',
        'gold_spent' => 'int',
        'individual_position' => 'string',
        'inhibitor_kills' => 'int',
        'inhibitor_takedowns' => 'int',
        'inhibitors_lost' => 'int',
        'item0' => 'int',
        'item1' => 'int',
        'item2' => 'int',
        'item3' => 'int',
        'item4' => 'int',
        'item5' => 'int',
        'item6' => 'int',
        'items_purchased' => 'int',
        'killing_sprees' => 'int',
        'kills' => 'int',
        'lane' => 'string',
        'largest_critical_strike' => 'int',
        'largest_killing_spree' => 'int',
        'largest_multi_kill' => 'int',
        'longest_time_spent_living' => 'int',
        'magic_damage_dealt' => 'int',
        'magic_damage_dealt_to_champions' => 'int',
        'magic_damage_taken' => 'int',
        'missions' => '\Swagger\Client\Model\MatchV5MissionsDto',
        'neutral_minions_killed' => 'int',
        'need_vision_pings' => 'int',
        'nexus_kills' => 'int',
        'nexus_takedowns' => 'int',
        'nexus_lost' => 'int',
        'objectives_stolen' => 'int',
        'objectives_stolen_assists' => 'int',
        'on_my_way_pings' => 'int',
        'participant_id' => 'int',
        'player_score0' => 'int',
        'player_score1' => 'int',
        'player_score2' => 'int',
        'player_score3' => 'int',
        'player_score4' => 'int',
        'player_score5' => 'int',
        'player_score6' => 'int',
        'player_score7' => 'int',
        'player_score8' => 'int',
        'player_score9' => 'int',
        'player_score10' => 'int',
        'player_score11' => 'int',
        'penta_kills' => 'int',
        'perks' => '\Swagger\Client\Model\MatchV5PerksDto',
        'physical_damage_dealt' => 'int',
        'physical_damage_dealt_to_champions' => 'int',
        'physical_damage_taken' => 'int',
        'placement' => 'int',
        'player_augment1' => 'int',
        'player_augment2' => 'int',
        'player_augment3' => 'int',
        'player_augment4' => 'int',
        'player_subteam_id' => 'int',
        'push_pings' => 'int',
        'profile_icon' => 'int',
        'puuid' => 'string',
        'quadra_kills' => 'int',
        'riot_id_game_name' => 'string',
        'riot_id_name' => 'string',
        'riot_id_tagline' => 'string',
        'role' => 'string',
        'sight_wards_bought_in_game' => 'int',
        'spell1_casts' => 'int',
        'spell2_casts' => 'int',
        'spell3_casts' => 'int',
        'spell4_casts' => 'int',
        'subteam_placement' => 'int',
        'summoner1_casts' => 'int',
        'summoner1_id' => 'int',
        'summoner2_casts' => 'int',
        'summoner2_id' => 'int',
        'summoner_id' => 'string',
        'summoner_level' => 'int',
        'summoner_name' => 'string',
        'team_early_surrendered' => 'bool',
        'team_id' => 'int',
        'team_position' => 'string',
        'time_c_cing_others' => 'int',
        'time_played' => 'int',
        'total_ally_jungle_minions_killed' => 'int',
        'total_damage_dealt' => 'int',
        'total_damage_dealt_to_champions' => 'int',
        'total_damage_shielded_on_teammates' => 'int',
        'total_damage_taken' => 'int',
        'total_enemy_jungle_minions_killed' => 'int',
        'total_heal' => 'int',
        'total_heals_on_teammates' => 'int',
        'total_minions_killed' => 'int',
        'total_time_cc_dealt' => 'int',
        'total_time_spent_dead' => 'int',
        'total_units_healed' => 'int',
        'triple_kills' => 'int',
        'true_damage_dealt' => 'int',
        'true_damage_dealt_to_champions' => 'int',
        'true_damage_taken' => 'int',
        'turret_kills' => 'int',
        'turret_takedowns' => 'int',
        'turrets_lost' => 'int',
        'unreal_kills' => 'int',
        'vision_score' => 'int',
        'vision_cleared_pings' => 'int',
        'vision_wards_bought_in_game' => 'int',
        'wards_killed' => 'int',
        'wards_placed' => 'int',
        'win' => 'bool',
        'bait_pings' => 'int',
        'danger_pings' => 'int',
        'basic_pings' => 'int',
        'player_augment5' => 'int',
        'player_augment6' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'all_in_pings' => 'int32',
        'assist_me_pings' => 'int32',
        'assists' => 'int32',
        'baron_kills' => 'int32',
        'bounty_level' => 'int32',
        'champ_experience' => 'int32',
        'champ_level' => 'int32',
        'champion_id' => 'int32',
        'champion_name' => null,
        'command_pings' => 'int32',
        'champion_transform' => 'int32',
        'consumables_purchased' => 'int32',
        'challenges' => null,
        'damage_dealt_to_buildings' => 'int32',
        'damage_dealt_to_objectives' => 'int32',
        'damage_dealt_to_turrets' => 'int32',
        'damage_self_mitigated' => 'int32',
        'deaths' => 'int32',
        'detector_wards_placed' => 'int32',
        'double_kills' => 'int32',
        'dragon_kills' => 'int32',
        'eligible_for_progression' => null,
        'enemy_missing_pings' => 'int32',
        'enemy_vision_pings' => 'int32',
        'first_blood_assist' => null,
        'first_blood_kill' => null,
        'first_tower_assist' => null,
        'first_tower_kill' => null,
        'game_ended_in_early_surrender' => null,
        'game_ended_in_surrender' => null,
        'hold_pings' => 'int32',
        'get_back_pings' => 'int32',
        'gold_earned' => 'int32',
        'gold_spent' => 'int32',
        'individual_position' => null,
        'inhibitor_kills' => 'int32',
        'inhibitor_takedowns' => 'int32',
        'inhibitors_lost' => 'int32',
        'item0' => 'int32',
        'item1' => 'int32',
        'item2' => 'int32',
        'item3' => 'int32',
        'item4' => 'int32',
        'item5' => 'int32',
        'item6' => 'int32',
        'items_purchased' => 'int32',
        'killing_sprees' => 'int32',
        'kills' => 'int32',
        'lane' => null,
        'largest_critical_strike' => 'int32',
        'largest_killing_spree' => 'int32',
        'largest_multi_kill' => 'int32',
        'longest_time_spent_living' => 'int32',
        'magic_damage_dealt' => 'int32',
        'magic_damage_dealt_to_champions' => 'int32',
        'magic_damage_taken' => 'int32',
        'missions' => null,
        'neutral_minions_killed' => 'int32',
        'need_vision_pings' => 'int32',
        'nexus_kills' => 'int32',
        'nexus_takedowns' => 'int32',
        'nexus_lost' => 'int32',
        'objectives_stolen' => 'int32',
        'objectives_stolen_assists' => 'int32',
        'on_my_way_pings' => 'int32',
        'participant_id' => 'int32',
        'player_score0' => 'int32',
        'player_score1' => 'int32',
        'player_score2' => 'int32',
        'player_score3' => 'int32',
        'player_score4' => 'int32',
        'player_score5' => 'int32',
        'player_score6' => 'int32',
        'player_score7' => 'int32',
        'player_score8' => 'int32',
        'player_score9' => 'int32',
        'player_score10' => 'int32',
        'player_score11' => 'int32',
        'penta_kills' => 'int32',
        'perks' => null,
        'physical_damage_dealt' => 'int32',
        'physical_damage_dealt_to_champions' => 'int32',
        'physical_damage_taken' => 'int32',
        'placement' => 'int32',
        'player_augment1' => 'int32',
        'player_augment2' => 'int32',
        'player_augment3' => 'int32',
        'player_augment4' => 'int32',
        'player_subteam_id' => 'int32',
        'push_pings' => 'int32',
        'profile_icon' => 'int32',
        'puuid' => null,
        'quadra_kills' => 'int32',
        'riot_id_game_name' => null,
        'riot_id_name' => null,
        'riot_id_tagline' => null,
        'role' => null,
        'sight_wards_bought_in_game' => 'int32',
        'spell1_casts' => 'int32',
        'spell2_casts' => 'int32',
        'spell3_casts' => 'int32',
        'spell4_casts' => 'int32',
        'subteam_placement' => 'int32',
        'summoner1_casts' => 'int32',
        'summoner1_id' => 'int32',
        'summoner2_casts' => 'int32',
        'summoner2_id' => 'int32',
        'summoner_id' => null,
        'summoner_level' => 'int32',
        'summoner_name' => null,
        'team_early_surrendered' => null,
        'team_id' => 'int32',
        'team_position' => null,
        'time_c_cing_others' => 'int32',
        'time_played' => 'int32',
        'total_ally_jungle_minions_killed' => 'int32',
        'total_damage_dealt' => 'int32',
        'total_damage_dealt_to_champions' => 'int32',
        'total_damage_shielded_on_teammates' => 'int32',
        'total_damage_taken' => 'int32',
        'total_enemy_jungle_minions_killed' => 'int32',
        'total_heal' => 'int32',
        'total_heals_on_teammates' => 'int32',
        'total_minions_killed' => 'int32',
        'total_time_cc_dealt' => 'int32',
        'total_time_spent_dead' => 'int32',
        'total_units_healed' => 'int32',
        'triple_kills' => 'int32',
        'true_damage_dealt' => 'int32',
        'true_damage_dealt_to_champions' => 'int32',
        'true_damage_taken' => 'int32',
        'turret_kills' => 'int32',
        'turret_takedowns' => 'int32',
        'turrets_lost' => 'int32',
        'unreal_kills' => 'int32',
        'vision_score' => 'int32',
        'vision_cleared_pings' => 'int32',
        'vision_wards_bought_in_game' => 'int32',
        'wards_killed' => 'int32',
        'wards_placed' => 'int32',
        'win' => null,
        'bait_pings' => 'int32',
        'danger_pings' => 'int32',
        'basic_pings' => 'int32',
        'player_augment5' => 'int32',
        'player_augment6' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'all_in_pings' => 'allInPings',
        'assist_me_pings' => 'assistMePings',
        'assists' => 'assists',
        'baron_kills' => 'baronKills',
        'bounty_level' => 'bountyLevel',
        'champ_experience' => 'champExperience',
        'champ_level' => 'champLevel',
        'champion_id' => 'championId',
        'champion_name' => 'championName',
        'command_pings' => 'commandPings',
        'champion_transform' => 'championTransform',
        'consumables_purchased' => 'consumablesPurchased',
        'challenges' => 'challenges',
        'damage_dealt_to_buildings' => 'damageDealtToBuildings',
        'damage_dealt_to_objectives' => 'damageDealtToObjectives',
        'damage_dealt_to_turrets' => 'damageDealtToTurrets',
        'damage_self_mitigated' => 'damageSelfMitigated',
        'deaths' => 'deaths',
        'detector_wards_placed' => 'detectorWardsPlaced',
        'double_kills' => 'doubleKills',
        'dragon_kills' => 'dragonKills',
        'eligible_for_progression' => 'eligibleForProgression',
        'enemy_missing_pings' => 'enemyMissingPings',
        'enemy_vision_pings' => 'enemyVisionPings',
        'first_blood_assist' => 'firstBloodAssist',
        'first_blood_kill' => 'firstBloodKill',
        'first_tower_assist' => 'firstTowerAssist',
        'first_tower_kill' => 'firstTowerKill',
        'game_ended_in_early_surrender' => 'gameEndedInEarlySurrender',
        'game_ended_in_surrender' => 'gameEndedInSurrender',
        'hold_pings' => 'holdPings',
        'get_back_pings' => 'getBackPings',
        'gold_earned' => 'goldEarned',
        'gold_spent' => 'goldSpent',
        'individual_position' => 'individualPosition',
        'inhibitor_kills' => 'inhibitorKills',
        'inhibitor_takedowns' => 'inhibitorTakedowns',
        'inhibitors_lost' => 'inhibitorsLost',
        'item0' => 'item0',
        'item1' => 'item1',
        'item2' => 'item2',
        'item3' => 'item3',
        'item4' => 'item4',
        'item5' => 'item5',
        'item6' => 'item6',
        'items_purchased' => 'itemsPurchased',
        'killing_sprees' => 'killingSprees',
        'kills' => 'kills',
        'lane' => 'lane',
        'largest_critical_strike' => 'largestCriticalStrike',
        'largest_killing_spree' => 'largestKillingSpree',
        'largest_multi_kill' => 'largestMultiKill',
        'longest_time_spent_living' => 'longestTimeSpentLiving',
        'magic_damage_dealt' => 'magicDamageDealt',
        'magic_damage_dealt_to_champions' => 'magicDamageDealtToChampions',
        'magic_damage_taken' => 'magicDamageTaken',
        'missions' => 'missions',
        'neutral_minions_killed' => 'neutralMinionsKilled',
        'need_vision_pings' => 'needVisionPings',
        'nexus_kills' => 'nexusKills',
        'nexus_takedowns' => 'nexusTakedowns',
        'nexus_lost' => 'nexusLost',
        'objectives_stolen' => 'objectivesStolen',
        'objectives_stolen_assists' => 'objectivesStolenAssists',
        'on_my_way_pings' => 'onMyWayPings',
        'participant_id' => 'participantId',
        'player_score0' => 'playerScore0',
        'player_score1' => 'playerScore1',
        'player_score2' => 'playerScore2',
        'player_score3' => 'playerScore3',
        'player_score4' => 'playerScore4',
        'player_score5' => 'playerScore5',
        'player_score6' => 'playerScore6',
        'player_score7' => 'playerScore7',
        'player_score8' => 'playerScore8',
        'player_score9' => 'playerScore9',
        'player_score10' => 'playerScore10',
        'player_score11' => 'playerScore11',
        'penta_kills' => 'pentaKills',
        'perks' => 'perks',
        'physical_damage_dealt' => 'physicalDamageDealt',
        'physical_damage_dealt_to_champions' => 'physicalDamageDealtToChampions',
        'physical_damage_taken' => 'physicalDamageTaken',
        'placement' => 'placement',
        'player_augment1' => 'playerAugment1',
        'player_augment2' => 'playerAugment2',
        'player_augment3' => 'playerAugment3',
        'player_augment4' => 'playerAugment4',
        'player_subteam_id' => 'playerSubteamId',
        'push_pings' => 'pushPings',
        'profile_icon' => 'profileIcon',
        'puuid' => 'puuid',
        'quadra_kills' => 'quadraKills',
        'riot_id_game_name' => 'riotIdGameName',
        'riot_id_name' => 'riotIdName',
        'riot_id_tagline' => 'riotIdTagline',
        'role' => 'role',
        'sight_wards_bought_in_game' => 'sightWardsBoughtInGame',
        'spell1_casts' => 'spell1Casts',
        'spell2_casts' => 'spell2Casts',
        'spell3_casts' => 'spell3Casts',
        'spell4_casts' => 'spell4Casts',
        'subteam_placement' => 'subteamPlacement',
        'summoner1_casts' => 'summoner1Casts',
        'summoner1_id' => 'summoner1Id',
        'summoner2_casts' => 'summoner2Casts',
        'summoner2_id' => 'summoner2Id',
        'summoner_id' => 'summonerId',
        'summoner_level' => 'summonerLevel',
        'summoner_name' => 'summonerName',
        'team_early_surrendered' => 'teamEarlySurrendered',
        'team_id' => 'teamId',
        'team_position' => 'teamPosition',
        'time_c_cing_others' => 'timeCCingOthers',
        'time_played' => 'timePlayed',
        'total_ally_jungle_minions_killed' => 'totalAllyJungleMinionsKilled',
        'total_damage_dealt' => 'totalDamageDealt',
        'total_damage_dealt_to_champions' => 'totalDamageDealtToChampions',
        'total_damage_shielded_on_teammates' => 'totalDamageShieldedOnTeammates',
        'total_damage_taken' => 'totalDamageTaken',
        'total_enemy_jungle_minions_killed' => 'totalEnemyJungleMinionsKilled',
        'total_heal' => 'totalHeal',
        'total_heals_on_teammates' => 'totalHealsOnTeammates',
        'total_minions_killed' => 'totalMinionsKilled',
        'total_time_cc_dealt' => 'totalTimeCCDealt',
        'total_time_spent_dead' => 'totalTimeSpentDead',
        'total_units_healed' => 'totalUnitsHealed',
        'triple_kills' => 'tripleKills',
        'true_damage_dealt' => 'trueDamageDealt',
        'true_damage_dealt_to_champions' => 'trueDamageDealtToChampions',
        'true_damage_taken' => 'trueDamageTaken',
        'turret_kills' => 'turretKills',
        'turret_takedowns' => 'turretTakedowns',
        'turrets_lost' => 'turretsLost',
        'unreal_kills' => 'unrealKills',
        'vision_score' => 'visionScore',
        'vision_cleared_pings' => 'visionClearedPings',
        'vision_wards_bought_in_game' => 'visionWardsBoughtInGame',
        'wards_killed' => 'wardsKilled',
        'wards_placed' => 'wardsPlaced',
        'win' => 'win',
        'bait_pings' => 'baitPings',
        'danger_pings' => 'dangerPings',
        'basic_pings' => 'basicPings',
        'player_augment5' => 'playerAugment5',
        'player_augment6' => 'playerAugment6'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'all_in_pings' => 'setAllInPings',
        'assist_me_pings' => 'setAssistMePings',
        'assists' => 'setAssists',
        'baron_kills' => 'setBaronKills',
        'bounty_level' => 'setBountyLevel',
        'champ_experience' => 'setChampExperience',
        'champ_level' => 'setChampLevel',
        'champion_id' => 'setChampionId',
        'champion_name' => 'setChampionName',
        'command_pings' => 'setCommandPings',
        'champion_transform' => 'setChampionTransform',
        'consumables_purchased' => 'setConsumablesPurchased',
        'challenges' => 'setChallenges',
        'damage_dealt_to_buildings' => 'setDamageDealtToBuildings',
        'damage_dealt_to_objectives' => 'setDamageDealtToObjectives',
        'damage_dealt_to_turrets' => 'setDamageDealtToTurrets',
        'damage_self_mitigated' => 'setDamageSelfMitigated',
        'deaths' => 'setDeaths',
        'detector_wards_placed' => 'setDetectorWardsPlaced',
        'double_kills' => 'setDoubleKills',
        'dragon_kills' => 'setDragonKills',
        'eligible_for_progression' => 'setEligibleForProgression',
        'enemy_missing_pings' => 'setEnemyMissingPings',
        'enemy_vision_pings' => 'setEnemyVisionPings',
        'first_blood_assist' => 'setFirstBloodAssist',
        'first_blood_kill' => 'setFirstBloodKill',
        'first_tower_assist' => 'setFirstTowerAssist',
        'first_tower_kill' => 'setFirstTowerKill',
        'game_ended_in_early_surrender' => 'setGameEndedInEarlySurrender',
        'game_ended_in_surrender' => 'setGameEndedInSurrender',
        'hold_pings' => 'setHoldPings',
        'get_back_pings' => 'setGetBackPings',
        'gold_earned' => 'setGoldEarned',
        'gold_spent' => 'setGoldSpent',
        'individual_position' => 'setIndividualPosition',
        'inhibitor_kills' => 'setInhibitorKills',
        'inhibitor_takedowns' => 'setInhibitorTakedowns',
        'inhibitors_lost' => 'setInhibitorsLost',
        'item0' => 'setItem0',
        'item1' => 'setItem1',
        'item2' => 'setItem2',
        'item3' => 'setItem3',
        'item4' => 'setItem4',
        'item5' => 'setItem5',
        'item6' => 'setItem6',
        'items_purchased' => 'setItemsPurchased',
        'killing_sprees' => 'setKillingSprees',
        'kills' => 'setKills',
        'lane' => 'setLane',
        'largest_critical_strike' => 'setLargestCriticalStrike',
        'largest_killing_spree' => 'setLargestKillingSpree',
        'largest_multi_kill' => 'setLargestMultiKill',
        'longest_time_spent_living' => 'setLongestTimeSpentLiving',
        'magic_damage_dealt' => 'setMagicDamageDealt',
        'magic_damage_dealt_to_champions' => 'setMagicDamageDealtToChampions',
        'magic_damage_taken' => 'setMagicDamageTaken',
        'missions' => 'setMissions',
        'neutral_minions_killed' => 'setNeutralMinionsKilled',
        'need_vision_pings' => 'setNeedVisionPings',
        'nexus_kills' => 'setNexusKills',
        'nexus_takedowns' => 'setNexusTakedowns',
        'nexus_lost' => 'setNexusLost',
        'objectives_stolen' => 'setObjectivesStolen',
        'objectives_stolen_assists' => 'setObjectivesStolenAssists',
        'on_my_way_pings' => 'setOnMyWayPings',
        'participant_id' => 'setParticipantId',
        'player_score0' => 'setPlayerScore0',
        'player_score1' => 'setPlayerScore1',
        'player_score2' => 'setPlayerScore2',
        'player_score3' => 'setPlayerScore3',
        'player_score4' => 'setPlayerScore4',
        'player_score5' => 'setPlayerScore5',
        'player_score6' => 'setPlayerScore6',
        'player_score7' => 'setPlayerScore7',
        'player_score8' => 'setPlayerScore8',
        'player_score9' => 'setPlayerScore9',
        'player_score10' => 'setPlayerScore10',
        'player_score11' => 'setPlayerScore11',
        'penta_kills' => 'setPentaKills',
        'perks' => 'setPerks',
        'physical_damage_dealt' => 'setPhysicalDamageDealt',
        'physical_damage_dealt_to_champions' => 'setPhysicalDamageDealtToChampions',
        'physical_damage_taken' => 'setPhysicalDamageTaken',
        'placement' => 'setPlacement',
        'player_augment1' => 'setPlayerAugment1',
        'player_augment2' => 'setPlayerAugment2',
        'player_augment3' => 'setPlayerAugment3',
        'player_augment4' => 'setPlayerAugment4',
        'player_subteam_id' => 'setPlayerSubteamId',
        'push_pings' => 'setPushPings',
        'profile_icon' => 'setProfileIcon',
        'puuid' => 'setPuuid',
        'quadra_kills' => 'setQuadraKills',
        'riot_id_game_name' => 'setRiotIdGameName',
        'riot_id_name' => 'setRiotIdName',
        'riot_id_tagline' => 'setRiotIdTagline',
        'role' => 'setRole',
        'sight_wards_bought_in_game' => 'setSightWardsBoughtInGame',
        'spell1_casts' => 'setSpell1Casts',
        'spell2_casts' => 'setSpell2Casts',
        'spell3_casts' => 'setSpell3Casts',
        'spell4_casts' => 'setSpell4Casts',
        'subteam_placement' => 'setSubteamPlacement',
        'summoner1_casts' => 'setSummoner1Casts',
        'summoner1_id' => 'setSummoner1Id',
        'summoner2_casts' => 'setSummoner2Casts',
        'summoner2_id' => 'setSummoner2Id',
        'summoner_id' => 'setSummonerId',
        'summoner_level' => 'setSummonerLevel',
        'summoner_name' => 'setSummonerName',
        'team_early_surrendered' => 'setTeamEarlySurrendered',
        'team_id' => 'setTeamId',
        'team_position' => 'setTeamPosition',
        'time_c_cing_others' => 'setTimeCCingOthers',
        'time_played' => 'setTimePlayed',
        'total_ally_jungle_minions_killed' => 'setTotalAllyJungleMinionsKilled',
        'total_damage_dealt' => 'setTotalDamageDealt',
        'total_damage_dealt_to_champions' => 'setTotalDamageDealtToChampions',
        'total_damage_shielded_on_teammates' => 'setTotalDamageShieldedOnTeammates',
        'total_damage_taken' => 'setTotalDamageTaken',
        'total_enemy_jungle_minions_killed' => 'setTotalEnemyJungleMinionsKilled',
        'total_heal' => 'setTotalHeal',
        'total_heals_on_teammates' => 'setTotalHealsOnTeammates',
        'total_minions_killed' => 'setTotalMinionsKilled',
        'total_time_cc_dealt' => 'setTotalTimeCcDealt',
        'total_time_spent_dead' => 'setTotalTimeSpentDead',
        'total_units_healed' => 'setTotalUnitsHealed',
        'triple_kills' => 'setTripleKills',
        'true_damage_dealt' => 'setTrueDamageDealt',
        'true_damage_dealt_to_champions' => 'setTrueDamageDealtToChampions',
        'true_damage_taken' => 'setTrueDamageTaken',
        'turret_kills' => 'setTurretKills',
        'turret_takedowns' => 'setTurretTakedowns',
        'turrets_lost' => 'setTurretsLost',
        'unreal_kills' => 'setUnrealKills',
        'vision_score' => 'setVisionScore',
        'vision_cleared_pings' => 'setVisionClearedPings',
        'vision_wards_bought_in_game' => 'setVisionWardsBoughtInGame',
        'wards_killed' => 'setWardsKilled',
        'wards_placed' => 'setWardsPlaced',
        'win' => 'setWin',
        'bait_pings' => 'setBaitPings',
        'danger_pings' => 'setDangerPings',
        'basic_pings' => 'setBasicPings',
        'player_augment5' => 'setPlayerAugment5',
        'player_augment6' => 'setPlayerAugment6'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'all_in_pings' => 'getAllInPings',
        'assist_me_pings' => 'getAssistMePings',
        'assists' => 'getAssists',
        'baron_kills' => 'getBaronKills',
        'bounty_level' => 'getBountyLevel',
        'champ_experience' => 'getChampExperience',
        'champ_level' => 'getChampLevel',
        'champion_id' => 'getChampionId',
        'champion_name' => 'getChampionName',
        'command_pings' => 'getCommandPings',
        'champion_transform' => 'getChampionTransform',
        'consumables_purchased' => 'getConsumablesPurchased',
        'challenges' => 'getChallenges',
        'damage_dealt_to_buildings' => 'getDamageDealtToBuildings',
        'damage_dealt_to_objectives' => 'getDamageDealtToObjectives',
        'damage_dealt_to_turrets' => 'getDamageDealtToTurrets',
        'damage_self_mitigated' => 'getDamageSelfMitigated',
        'deaths' => 'getDeaths',
        'detector_wards_placed' => 'getDetectorWardsPlaced',
        'double_kills' => 'getDoubleKills',
        'dragon_kills' => 'getDragonKills',
        'eligible_for_progression' => 'getEligibleForProgression',
        'enemy_missing_pings' => 'getEnemyMissingPings',
        'enemy_vision_pings' => 'getEnemyVisionPings',
        'first_blood_assist' => 'getFirstBloodAssist',
        'first_blood_kill' => 'getFirstBloodKill',
        'first_tower_assist' => 'getFirstTowerAssist',
        'first_tower_kill' => 'getFirstTowerKill',
        'game_ended_in_early_surrender' => 'getGameEndedInEarlySurrender',
        'game_ended_in_surrender' => 'getGameEndedInSurrender',
        'hold_pings' => 'getHoldPings',
        'get_back_pings' => 'getGetBackPings',
        'gold_earned' => 'getGoldEarned',
        'gold_spent' => 'getGoldSpent',
        'individual_position' => 'getIndividualPosition',
        'inhibitor_kills' => 'getInhibitorKills',
        'inhibitor_takedowns' => 'getInhibitorTakedowns',
        'inhibitors_lost' => 'getInhibitorsLost',
        'item0' => 'getItem0',
        'item1' => 'getItem1',
        'item2' => 'getItem2',
        'item3' => 'getItem3',
        'item4' => 'getItem4',
        'item5' => 'getItem5',
        'item6' => 'getItem6',
        'items_purchased' => 'getItemsPurchased',
        'killing_sprees' => 'getKillingSprees',
        'kills' => 'getKills',
        'lane' => 'getLane',
        'largest_critical_strike' => 'getLargestCriticalStrike',
        'largest_killing_spree' => 'getLargestKillingSpree',
        'largest_multi_kill' => 'getLargestMultiKill',
        'longest_time_spent_living' => 'getLongestTimeSpentLiving',
        'magic_damage_dealt' => 'getMagicDamageDealt',
        'magic_damage_dealt_to_champions' => 'getMagicDamageDealtToChampions',
        'magic_damage_taken' => 'getMagicDamageTaken',
        'missions' => 'getMissions',
        'neutral_minions_killed' => 'getNeutralMinionsKilled',
        'need_vision_pings' => 'getNeedVisionPings',
        'nexus_kills' => 'getNexusKills',
        'nexus_takedowns' => 'getNexusTakedowns',
        'nexus_lost' => 'getNexusLost',
        'objectives_stolen' => 'getObjectivesStolen',
        'objectives_stolen_assists' => 'getObjectivesStolenAssists',
        'on_my_way_pings' => 'getOnMyWayPings',
        'participant_id' => 'getParticipantId',
        'player_score0' => 'getPlayerScore0',
        'player_score1' => 'getPlayerScore1',
        'player_score2' => 'getPlayerScore2',
        'player_score3' => 'getPlayerScore3',
        'player_score4' => 'getPlayerScore4',
        'player_score5' => 'getPlayerScore5',
        'player_score6' => 'getPlayerScore6',
        'player_score7' => 'getPlayerScore7',
        'player_score8' => 'getPlayerScore8',
        'player_score9' => 'getPlayerScore9',
        'player_score10' => 'getPlayerScore10',
        'player_score11' => 'getPlayerScore11',
        'penta_kills' => 'getPentaKills',
        'perks' => 'getPerks',
        'physical_damage_dealt' => 'getPhysicalDamageDealt',
        'physical_damage_dealt_to_champions' => 'getPhysicalDamageDealtToChampions',
        'physical_damage_taken' => 'getPhysicalDamageTaken',
        'placement' => 'getPlacement',
        'player_augment1' => 'getPlayerAugment1',
        'player_augment2' => 'getPlayerAugment2',
        'player_augment3' => 'getPlayerAugment3',
        'player_augment4' => 'getPlayerAugment4',
        'player_subteam_id' => 'getPlayerSubteamId',
        'push_pings' => 'getPushPings',
        'profile_icon' => 'getProfileIcon',
        'puuid' => 'getPuuid',
        'quadra_kills' => 'getQuadraKills',
        'riot_id_game_name' => 'getRiotIdGameName',
        'riot_id_name' => 'getRiotIdName',
        'riot_id_tagline' => 'getRiotIdTagline',
        'role' => 'getRole',
        'sight_wards_bought_in_game' => 'getSightWardsBoughtInGame',
        'spell1_casts' => 'getSpell1Casts',
        'spell2_casts' => 'getSpell2Casts',
        'spell3_casts' => 'getSpell3Casts',
        'spell4_casts' => 'getSpell4Casts',
        'subteam_placement' => 'getSubteamPlacement',
        'summoner1_casts' => 'getSummoner1Casts',
        'summoner1_id' => 'getSummoner1Id',
        'summoner2_casts' => 'getSummoner2Casts',
        'summoner2_id' => 'getSummoner2Id',
        'summoner_id' => 'getSummonerId',
        'summoner_level' => 'getSummonerLevel',
        'summoner_name' => 'getSummonerName',
        'team_early_surrendered' => 'getTeamEarlySurrendered',
        'team_id' => 'getTeamId',
        'team_position' => 'getTeamPosition',
        'time_c_cing_others' => 'getTimeCCingOthers',
        'time_played' => 'getTimePlayed',
        'total_ally_jungle_minions_killed' => 'getTotalAllyJungleMinionsKilled',
        'total_damage_dealt' => 'getTotalDamageDealt',
        'total_damage_dealt_to_champions' => 'getTotalDamageDealtToChampions',
        'total_damage_shielded_on_teammates' => 'getTotalDamageShieldedOnTeammates',
        'total_damage_taken' => 'getTotalDamageTaken',
        'total_enemy_jungle_minions_killed' => 'getTotalEnemyJungleMinionsKilled',
        'total_heal' => 'getTotalHeal',
        'total_heals_on_teammates' => 'getTotalHealsOnTeammates',
        'total_minions_killed' => 'getTotalMinionsKilled',
        'total_time_cc_dealt' => 'getTotalTimeCcDealt',
        'total_time_spent_dead' => 'getTotalTimeSpentDead',
        'total_units_healed' => 'getTotalUnitsHealed',
        'triple_kills' => 'getTripleKills',
        'true_damage_dealt' => 'getTrueDamageDealt',
        'true_damage_dealt_to_champions' => 'getTrueDamageDealtToChampions',
        'true_damage_taken' => 'getTrueDamageTaken',
        'turret_kills' => 'getTurretKills',
        'turret_takedowns' => 'getTurretTakedowns',
        'turrets_lost' => 'getTurretsLost',
        'unreal_kills' => 'getUnrealKills',
        'vision_score' => 'getVisionScore',
        'vision_cleared_pings' => 'getVisionClearedPings',
        'vision_wards_bought_in_game' => 'getVisionWardsBoughtInGame',
        'wards_killed' => 'getWardsKilled',
        'wards_placed' => 'getWardsPlaced',
        'win' => 'getWin',
        'bait_pings' => 'getBaitPings',
        'danger_pings' => 'getDangerPings',
        'basic_pings' => 'getBasicPings',
        'player_augment5' => 'getPlayerAugment5',
        'player_augment6' => 'getPlayerAugment6'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['all_in_pings'] = isset($data['all_in_pings']) ? $data['all_in_pings'] : null;
        $this->container['assist_me_pings'] = isset($data['assist_me_pings']) ? $data['assist_me_pings'] : null;
        $this->container['assists'] = isset($data['assists']) ? $data['assists'] : null;
        $this->container['baron_kills'] = isset($data['baron_kills']) ? $data['baron_kills'] : null;
        $this->container['bounty_level'] = isset($data['bounty_level']) ? $data['bounty_level'] : null;
        $this->container['champ_experience'] = isset($data['champ_experience']) ? $data['champ_experience'] : null;
        $this->container['champ_level'] = isset($data['champ_level']) ? $data['champ_level'] : null;
        $this->container['champion_id'] = isset($data['champion_id']) ? $data['champion_id'] : null;
        $this->container['champion_name'] = isset($data['champion_name']) ? $data['champion_name'] : null;
        $this->container['command_pings'] = isset($data['command_pings']) ? $data['command_pings'] : null;
        $this->container['champion_transform'] = isset($data['champion_transform']) ? $data['champion_transform'] : null;
        $this->container['consumables_purchased'] = isset($data['consumables_purchased']) ? $data['consumables_purchased'] : null;
        $this->container['challenges'] = isset($data['challenges']) ? $data['challenges'] : null;
        $this->container['damage_dealt_to_buildings'] = isset($data['damage_dealt_to_buildings']) ? $data['damage_dealt_to_buildings'] : null;
        $this->container['damage_dealt_to_objectives'] = isset($data['damage_dealt_to_objectives']) ? $data['damage_dealt_to_objectives'] : null;
        $this->container['damage_dealt_to_turrets'] = isset($data['damage_dealt_to_turrets']) ? $data['damage_dealt_to_turrets'] : null;
        $this->container['damage_self_mitigated'] = isset($data['damage_self_mitigated']) ? $data['damage_self_mitigated'] : null;
        $this->container['deaths'] = isset($data['deaths']) ? $data['deaths'] : null;
        $this->container['detector_wards_placed'] = isset($data['detector_wards_placed']) ? $data['detector_wards_placed'] : null;
        $this->container['double_kills'] = isset($data['double_kills']) ? $data['double_kills'] : null;
        $this->container['dragon_kills'] = isset($data['dragon_kills']) ? $data['dragon_kills'] : null;
        $this->container['eligible_for_progression'] = isset($data['eligible_for_progression']) ? $data['eligible_for_progression'] : null;
        $this->container['enemy_missing_pings'] = isset($data['enemy_missing_pings']) ? $data['enemy_missing_pings'] : null;
        $this->container['enemy_vision_pings'] = isset($data['enemy_vision_pings']) ? $data['enemy_vision_pings'] : null;
        $this->container['first_blood_assist'] = isset($data['first_blood_assist']) ? $data['first_blood_assist'] : null;
        $this->container['first_blood_kill'] = isset($data['first_blood_kill']) ? $data['first_blood_kill'] : null;
        $this->container['first_tower_assist'] = isset($data['first_tower_assist']) ? $data['first_tower_assist'] : null;
        $this->container['first_tower_kill'] = isset($data['first_tower_kill']) ? $data['first_tower_kill'] : null;
        $this->container['game_ended_in_early_surrender'] = isset($data['game_ended_in_early_surrender']) ? $data['game_ended_in_early_surrender'] : null;
        $this->container['game_ended_in_surrender'] = isset($data['game_ended_in_surrender']) ? $data['game_ended_in_surrender'] : null;
        $this->container['hold_pings'] = isset($data['hold_pings']) ? $data['hold_pings'] : null;
        $this->container['get_back_pings'] = isset($data['get_back_pings']) ? $data['get_back_pings'] : null;
        $this->container['gold_earned'] = isset($data['gold_earned']) ? $data['gold_earned'] : null;
        $this->container['gold_spent'] = isset($data['gold_spent']) ? $data['gold_spent'] : null;
        $this->container['individual_position'] = isset($data['individual_position']) ? $data['individual_position'] : null;
        $this->container['inhibitor_kills'] = isset($data['inhibitor_kills']) ? $data['inhibitor_kills'] : null;
        $this->container['inhibitor_takedowns'] = isset($data['inhibitor_takedowns']) ? $data['inhibitor_takedowns'] : null;
        $this->container['inhibitors_lost'] = isset($data['inhibitors_lost']) ? $data['inhibitors_lost'] : null;
        $this->container['item0'] = isset($data['item0']) ? $data['item0'] : null;
        $this->container['item1'] = isset($data['item1']) ? $data['item1'] : null;
        $this->container['item2'] = isset($data['item2']) ? $data['item2'] : null;
        $this->container['item3'] = isset($data['item3']) ? $data['item3'] : null;
        $this->container['item4'] = isset($data['item4']) ? $data['item4'] : null;
        $this->container['item5'] = isset($data['item5']) ? $data['item5'] : null;
        $this->container['item6'] = isset($data['item6']) ? $data['item6'] : null;
        $this->container['items_purchased'] = isset($data['items_purchased']) ? $data['items_purchased'] : null;
        $this->container['killing_sprees'] = isset($data['killing_sprees']) ? $data['killing_sprees'] : null;
        $this->container['kills'] = isset($data['kills']) ? $data['kills'] : null;
        $this->container['lane'] = isset($data['lane']) ? $data['lane'] : null;
        $this->container['largest_critical_strike'] = isset($data['largest_critical_strike']) ? $data['largest_critical_strike'] : null;
        $this->container['largest_killing_spree'] = isset($data['largest_killing_spree']) ? $data['largest_killing_spree'] : null;
        $this->container['largest_multi_kill'] = isset($data['largest_multi_kill']) ? $data['largest_multi_kill'] : null;
        $this->container['longest_time_spent_living'] = isset($data['longest_time_spent_living']) ? $data['longest_time_spent_living'] : null;
        $this->container['magic_damage_dealt'] = isset($data['magic_damage_dealt']) ? $data['magic_damage_dealt'] : null;
        $this->container['magic_damage_dealt_to_champions'] = isset($data['magic_damage_dealt_to_champions']) ? $data['magic_damage_dealt_to_champions'] : null;
        $this->container['magic_damage_taken'] = isset($data['magic_damage_taken']) ? $data['magic_damage_taken'] : null;
        $this->container['missions'] = isset($data['missions']) ? $data['missions'] : null;
        $this->container['neutral_minions_killed'] = isset($data['neutral_minions_killed']) ? $data['neutral_minions_killed'] : null;
        $this->container['need_vision_pings'] = isset($data['need_vision_pings']) ? $data['need_vision_pings'] : null;
        $this->container['nexus_kills'] = isset($data['nexus_kills']) ? $data['nexus_kills'] : null;
        $this->container['nexus_takedowns'] = isset($data['nexus_takedowns']) ? $data['nexus_takedowns'] : null;
        $this->container['nexus_lost'] = isset($data['nexus_lost']) ? $data['nexus_lost'] : null;
        $this->container['objectives_stolen'] = isset($data['objectives_stolen']) ? $data['objectives_stolen'] : null;
        $this->container['objectives_stolen_assists'] = isset($data['objectives_stolen_assists']) ? $data['objectives_stolen_assists'] : null;
        $this->container['on_my_way_pings'] = isset($data['on_my_way_pings']) ? $data['on_my_way_pings'] : null;
        $this->container['participant_id'] = isset($data['participant_id']) ? $data['participant_id'] : null;
        $this->container['player_score0'] = isset($data['player_score0']) ? $data['player_score0'] : null;
        $this->container['player_score1'] = isset($data['player_score1']) ? $data['player_score1'] : null;
        $this->container['player_score2'] = isset($data['player_score2']) ? $data['player_score2'] : null;
        $this->container['player_score3'] = isset($data['player_score3']) ? $data['player_score3'] : null;
        $this->container['player_score4'] = isset($data['player_score4']) ? $data['player_score4'] : null;
        $this->container['player_score5'] = isset($data['player_score5']) ? $data['player_score5'] : null;
        $this->container['player_score6'] = isset($data['player_score6']) ? $data['player_score6'] : null;
        $this->container['player_score7'] = isset($data['player_score7']) ? $data['player_score7'] : null;
        $this->container['player_score8'] = isset($data['player_score8']) ? $data['player_score8'] : null;
        $this->container['player_score9'] = isset($data['player_score9']) ? $data['player_score9'] : null;
        $this->container['player_score10'] = isset($data['player_score10']) ? $data['player_score10'] : null;
        $this->container['player_score11'] = isset($data['player_score11']) ? $data['player_score11'] : null;
        $this->container['penta_kills'] = isset($data['penta_kills']) ? $data['penta_kills'] : null;
        $this->container['perks'] = isset($data['perks']) ? $data['perks'] : null;
        $this->container['physical_damage_dealt'] = isset($data['physical_damage_dealt']) ? $data['physical_damage_dealt'] : null;
        $this->container['physical_damage_dealt_to_champions'] = isset($data['physical_damage_dealt_to_champions']) ? $data['physical_damage_dealt_to_champions'] : null;
        $this->container['physical_damage_taken'] = isset($data['physical_damage_taken']) ? $data['physical_damage_taken'] : null;
        $this->container['placement'] = isset($data['placement']) ? $data['placement'] : null;
        $this->container['player_augment1'] = isset($data['player_augment1']) ? $data['player_augment1'] : null;
        $this->container['player_augment2'] = isset($data['player_augment2']) ? $data['player_augment2'] : null;
        $this->container['player_augment3'] = isset($data['player_augment3']) ? $data['player_augment3'] : null;
        $this->container['player_augment4'] = isset($data['player_augment4']) ? $data['player_augment4'] : null;
        $this->container['player_subteam_id'] = isset($data['player_subteam_id']) ? $data['player_subteam_id'] : null;
        $this->container['push_pings'] = isset($data['push_pings']) ? $data['push_pings'] : null;
        $this->container['profile_icon'] = isset($data['profile_icon']) ? $data['profile_icon'] : null;
        $this->container['puuid'] = isset($data['puuid']) ? $data['puuid'] : null;
        $this->container['quadra_kills'] = isset($data['quadra_kills']) ? $data['quadra_kills'] : null;
        $this->container['riot_id_game_name'] = isset($data['riot_id_game_name']) ? $data['riot_id_game_name'] : null;
        $this->container['riot_id_name'] = isset($data['riot_id_name']) ? $data['riot_id_name'] : null;
        $this->container['riot_id_tagline'] = isset($data['riot_id_tagline']) ? $data['riot_id_tagline'] : null;
        $this->container['role'] = isset($data['role']) ? $data['role'] : null;
        $this->container['sight_wards_bought_in_game'] = isset($data['sight_wards_bought_in_game']) ? $data['sight_wards_bought_in_game'] : null;
        $this->container['spell1_casts'] = isset($data['spell1_casts']) ? $data['spell1_casts'] : null;
        $this->container['spell2_casts'] = isset($data['spell2_casts']) ? $data['spell2_casts'] : null;
        $this->container['spell3_casts'] = isset($data['spell3_casts']) ? $data['spell3_casts'] : null;
        $this->container['spell4_casts'] = isset($data['spell4_casts']) ? $data['spell4_casts'] : null;
        $this->container['subteam_placement'] = isset($data['subteam_placement']) ? $data['subteam_placement'] : null;
        $this->container['summoner1_casts'] = isset($data['summoner1_casts']) ? $data['summoner1_casts'] : null;
        $this->container['summoner1_id'] = isset($data['summoner1_id']) ? $data['summoner1_id'] : null;
        $this->container['summoner2_casts'] = isset($data['summoner2_casts']) ? $data['summoner2_casts'] : null;
        $this->container['summoner2_id'] = isset($data['summoner2_id']) ? $data['summoner2_id'] : null;
        $this->container['summoner_id'] = isset($data['summoner_id']) ? $data['summoner_id'] : null;
        $this->container['summoner_level'] = isset($data['summoner_level']) ? $data['summoner_level'] : null;
        $this->container['summoner_name'] = isset($data['summoner_name']) ? $data['summoner_name'] : null;
        $this->container['team_early_surrendered'] = isset($data['team_early_surrendered']) ? $data['team_early_surrendered'] : null;
        $this->container['team_id'] = isset($data['team_id']) ? $data['team_id'] : null;
        $this->container['team_position'] = isset($data['team_position']) ? $data['team_position'] : null;
        $this->container['time_c_cing_others'] = isset($data['time_c_cing_others']) ? $data['time_c_cing_others'] : null;
        $this->container['time_played'] = isset($data['time_played']) ? $data['time_played'] : null;
        $this->container['total_ally_jungle_minions_killed'] = isset($data['total_ally_jungle_minions_killed']) ? $data['total_ally_jungle_minions_killed'] : null;
        $this->container['total_damage_dealt'] = isset($data['total_damage_dealt']) ? $data['total_damage_dealt'] : null;
        $this->container['total_damage_dealt_to_champions'] = isset($data['total_damage_dealt_to_champions']) ? $data['total_damage_dealt_to_champions'] : null;
        $this->container['total_damage_shielded_on_teammates'] = isset($data['total_damage_shielded_on_teammates']) ? $data['total_damage_shielded_on_teammates'] : null;
        $this->container['total_damage_taken'] = isset($data['total_damage_taken']) ? $data['total_damage_taken'] : null;
        $this->container['total_enemy_jungle_minions_killed'] = isset($data['total_enemy_jungle_minions_killed']) ? $data['total_enemy_jungle_minions_killed'] : null;
        $this->container['total_heal'] = isset($data['total_heal']) ? $data['total_heal'] : null;
        $this->container['total_heals_on_teammates'] = isset($data['total_heals_on_teammates']) ? $data['total_heals_on_teammates'] : null;
        $this->container['total_minions_killed'] = isset($data['total_minions_killed']) ? $data['total_minions_killed'] : null;
        $this->container['total_time_cc_dealt'] = isset($data['total_time_cc_dealt']) ? $data['total_time_cc_dealt'] : null;
        $this->container['total_time_spent_dead'] = isset($data['total_time_spent_dead']) ? $data['total_time_spent_dead'] : null;
        $this->container['total_units_healed'] = isset($data['total_units_healed']) ? $data['total_units_healed'] : null;
        $this->container['triple_kills'] = isset($data['triple_kills']) ? $data['triple_kills'] : null;
        $this->container['true_damage_dealt'] = isset($data['true_damage_dealt']) ? $data['true_damage_dealt'] : null;
        $this->container['true_damage_dealt_to_champions'] = isset($data['true_damage_dealt_to_champions']) ? $data['true_damage_dealt_to_champions'] : null;
        $this->container['true_damage_taken'] = isset($data['true_damage_taken']) ? $data['true_damage_taken'] : null;
        $this->container['turret_kills'] = isset($data['turret_kills']) ? $data['turret_kills'] : null;
        $this->container['turret_takedowns'] = isset($data['turret_takedowns']) ? $data['turret_takedowns'] : null;
        $this->container['turrets_lost'] = isset($data['turrets_lost']) ? $data['turrets_lost'] : null;
        $this->container['unreal_kills'] = isset($data['unreal_kills']) ? $data['unreal_kills'] : null;
        $this->container['vision_score'] = isset($data['vision_score']) ? $data['vision_score'] : null;
        $this->container['vision_cleared_pings'] = isset($data['vision_cleared_pings']) ? $data['vision_cleared_pings'] : null;
        $this->container['vision_wards_bought_in_game'] = isset($data['vision_wards_bought_in_game']) ? $data['vision_wards_bought_in_game'] : null;
        $this->container['wards_killed'] = isset($data['wards_killed']) ? $data['wards_killed'] : null;
        $this->container['wards_placed'] = isset($data['wards_placed']) ? $data['wards_placed'] : null;
        $this->container['win'] = isset($data['win']) ? $data['win'] : null;
        $this->container['bait_pings'] = isset($data['bait_pings']) ? $data['bait_pings'] : null;
        $this->container['danger_pings'] = isset($data['danger_pings']) ? $data['danger_pings'] : null;
        $this->container['basic_pings'] = isset($data['basic_pings']) ? $data['basic_pings'] : null;
        $this->container['player_augment5'] = isset($data['player_augment5']) ? $data['player_augment5'] : null;
        $this->container['player_augment6'] = isset($data['player_augment6']) ? $data['player_augment6'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['assists'] === null) {
            $invalidProperties[] = "'assists' can't be null";
        }
        if ($this->container['baron_kills'] === null) {
            $invalidProperties[] = "'baron_kills' can't be null";
        }
        if ($this->container['bounty_level'] === null) {
            $invalidProperties[] = "'bounty_level' can't be null";
        }
        if ($this->container['champ_experience'] === null) {
            $invalidProperties[] = "'champ_experience' can't be null";
        }
        if ($this->container['champ_level'] === null) {
            $invalidProperties[] = "'champ_level' can't be null";
        }
        if ($this->container['champion_id'] === null) {
            $invalidProperties[] = "'champion_id' can't be null";
        }
        if ($this->container['champion_name'] === null) {
            $invalidProperties[] = "'champion_name' can't be null";
        }
        if ($this->container['champion_transform'] === null) {
            $invalidProperties[] = "'champion_transform' can't be null";
        }
        if ($this->container['consumables_purchased'] === null) {
            $invalidProperties[] = "'consumables_purchased' can't be null";
        }
        if ($this->container['damage_dealt_to_objectives'] === null) {
            $invalidProperties[] = "'damage_dealt_to_objectives' can't be null";
        }
        if ($this->container['damage_dealt_to_turrets'] === null) {
            $invalidProperties[] = "'damage_dealt_to_turrets' can't be null";
        }
        if ($this->container['damage_self_mitigated'] === null) {
            $invalidProperties[] = "'damage_self_mitigated' can't be null";
        }
        if ($this->container['deaths'] === null) {
            $invalidProperties[] = "'deaths' can't be null";
        }
        if ($this->container['detector_wards_placed'] === null) {
            $invalidProperties[] = "'detector_wards_placed' can't be null";
        }
        if ($this->container['double_kills'] === null) {
            $invalidProperties[] = "'double_kills' can't be null";
        }
        if ($this->container['dragon_kills'] === null) {
            $invalidProperties[] = "'dragon_kills' can't be null";
        }
        if ($this->container['first_blood_assist'] === null) {
            $invalidProperties[] = "'first_blood_assist' can't be null";
        }
        if ($this->container['first_blood_kill'] === null) {
            $invalidProperties[] = "'first_blood_kill' can't be null";
        }
        if ($this->container['first_tower_assist'] === null) {
            $invalidProperties[] = "'first_tower_assist' can't be null";
        }
        if ($this->container['first_tower_kill'] === null) {
            $invalidProperties[] = "'first_tower_kill' can't be null";
        }
        if ($this->container['game_ended_in_early_surrender'] === null) {
            $invalidProperties[] = "'game_ended_in_early_surrender' can't be null";
        }
        if ($this->container['game_ended_in_surrender'] === null) {
            $invalidProperties[] = "'game_ended_in_surrender' can't be null";
        }
        if ($this->container['gold_earned'] === null) {
            $invalidProperties[] = "'gold_earned' can't be null";
        }
        if ($this->container['gold_spent'] === null) {
            $invalidProperties[] = "'gold_spent' can't be null";
        }
        if ($this->container['individual_position'] === null) {
            $invalidProperties[] = "'individual_position' can't be null";
        }
        if ($this->container['inhibitor_kills'] === null) {
            $invalidProperties[] = "'inhibitor_kills' can't be null";
        }
        if ($this->container['item0'] === null) {
            $invalidProperties[] = "'item0' can't be null";
        }
        if ($this->container['item1'] === null) {
            $invalidProperties[] = "'item1' can't be null";
        }
        if ($this->container['item2'] === null) {
            $invalidProperties[] = "'item2' can't be null";
        }
        if ($this->container['item3'] === null) {
            $invalidProperties[] = "'item3' can't be null";
        }
        if ($this->container['item4'] === null) {
            $invalidProperties[] = "'item4' can't be null";
        }
        if ($this->container['item5'] === null) {
            $invalidProperties[] = "'item5' can't be null";
        }
        if ($this->container['item6'] === null) {
            $invalidProperties[] = "'item6' can't be null";
        }
        if ($this->container['items_purchased'] === null) {
            $invalidProperties[] = "'items_purchased' can't be null";
        }
        if ($this->container['killing_sprees'] === null) {
            $invalidProperties[] = "'killing_sprees' can't be null";
        }
        if ($this->container['kills'] === null) {
            $invalidProperties[] = "'kills' can't be null";
        }
        if ($this->container['lane'] === null) {
            $invalidProperties[] = "'lane' can't be null";
        }
        if ($this->container['largest_critical_strike'] === null) {
            $invalidProperties[] = "'largest_critical_strike' can't be null";
        }
        if ($this->container['largest_killing_spree'] === null) {
            $invalidProperties[] = "'largest_killing_spree' can't be null";
        }
        if ($this->container['largest_multi_kill'] === null) {
            $invalidProperties[] = "'largest_multi_kill' can't be null";
        }
        if ($this->container['longest_time_spent_living'] === null) {
            $invalidProperties[] = "'longest_time_spent_living' can't be null";
        }
        if ($this->container['magic_damage_dealt'] === null) {
            $invalidProperties[] = "'magic_damage_dealt' can't be null";
        }
        if ($this->container['magic_damage_dealt_to_champions'] === null) {
            $invalidProperties[] = "'magic_damage_dealt_to_champions' can't be null";
        }
        if ($this->container['magic_damage_taken'] === null) {
            $invalidProperties[] = "'magic_damage_taken' can't be null";
        }
        if ($this->container['neutral_minions_killed'] === null) {
            $invalidProperties[] = "'neutral_minions_killed' can't be null";
        }
        if ($this->container['nexus_kills'] === null) {
            $invalidProperties[] = "'nexus_kills' can't be null";
        }
        if ($this->container['objectives_stolen'] === null) {
            $invalidProperties[] = "'objectives_stolen' can't be null";
        }
        if ($this->container['objectives_stolen_assists'] === null) {
            $invalidProperties[] = "'objectives_stolen_assists' can't be null";
        }
        if ($this->container['participant_id'] === null) {
            $invalidProperties[] = "'participant_id' can't be null";
        }
        if ($this->container['penta_kills'] === null) {
            $invalidProperties[] = "'penta_kills' can't be null";
        }
        if ($this->container['perks'] === null) {
            $invalidProperties[] = "'perks' can't be null";
        }
        if ($this->container['physical_damage_dealt'] === null) {
            $invalidProperties[] = "'physical_damage_dealt' can't be null";
        }
        if ($this->container['physical_damage_dealt_to_champions'] === null) {
            $invalidProperties[] = "'physical_damage_dealt_to_champions' can't be null";
        }
        if ($this->container['physical_damage_taken'] === null) {
            $invalidProperties[] = "'physical_damage_taken' can't be null";
        }
        if ($this->container['profile_icon'] === null) {
            $invalidProperties[] = "'profile_icon' can't be null";
        }
        if ($this->container['puuid'] === null) {
            $invalidProperties[] = "'puuid' can't be null";
        }
        if ($this->container['quadra_kills'] === null) {
            $invalidProperties[] = "'quadra_kills' can't be null";
        }
        if ($this->container['riot_id_tagline'] === null) {
            $invalidProperties[] = "'riot_id_tagline' can't be null";
        }
        if ($this->container['role'] === null) {
            $invalidProperties[] = "'role' can't be null";
        }
        if ($this->container['sight_wards_bought_in_game'] === null) {
            $invalidProperties[] = "'sight_wards_bought_in_game' can't be null";
        }
        if ($this->container['spell1_casts'] === null) {
            $invalidProperties[] = "'spell1_casts' can't be null";
        }
        if ($this->container['spell2_casts'] === null) {
            $invalidProperties[] = "'spell2_casts' can't be null";
        }
        if ($this->container['spell3_casts'] === null) {
            $invalidProperties[] = "'spell3_casts' can't be null";
        }
        if ($this->container['spell4_casts'] === null) {
            $invalidProperties[] = "'spell4_casts' can't be null";
        }
        if ($this->container['summoner1_casts'] === null) {
            $invalidProperties[] = "'summoner1_casts' can't be null";
        }
        if ($this->container['summoner1_id'] === null) {
            $invalidProperties[] = "'summoner1_id' can't be null";
        }
        if ($this->container['summoner2_casts'] === null) {
            $invalidProperties[] = "'summoner2_casts' can't be null";
        }
        if ($this->container['summoner2_id'] === null) {
            $invalidProperties[] = "'summoner2_id' can't be null";
        }
        if ($this->container['summoner_id'] === null) {
            $invalidProperties[] = "'summoner_id' can't be null";
        }
        if ($this->container['summoner_level'] === null) {
            $invalidProperties[] = "'summoner_level' can't be null";
        }
        if ($this->container['summoner_name'] === null) {
            $invalidProperties[] = "'summoner_name' can't be null";
        }
        if ($this->container['team_early_surrendered'] === null) {
            $invalidProperties[] = "'team_early_surrendered' can't be null";
        }
        if ($this->container['team_id'] === null) {
            $invalidProperties[] = "'team_id' can't be null";
        }
        if ($this->container['team_position'] === null) {
            $invalidProperties[] = "'team_position' can't be null";
        }
        if ($this->container['time_c_cing_others'] === null) {
            $invalidProperties[] = "'time_c_cing_others' can't be null";
        }
        if ($this->container['time_played'] === null) {
            $invalidProperties[] = "'time_played' can't be null";
        }
        if ($this->container['total_damage_dealt'] === null) {
            $invalidProperties[] = "'total_damage_dealt' can't be null";
        }
        if ($this->container['total_damage_dealt_to_champions'] === null) {
            $invalidProperties[] = "'total_damage_dealt_to_champions' can't be null";
        }
        if ($this->container['total_damage_shielded_on_teammates'] === null) {
            $invalidProperties[] = "'total_damage_shielded_on_teammates' can't be null";
        }
        if ($this->container['total_damage_taken'] === null) {
            $invalidProperties[] = "'total_damage_taken' can't be null";
        }
        if ($this->container['total_heal'] === null) {
            $invalidProperties[] = "'total_heal' can't be null";
        }
        if ($this->container['total_heals_on_teammates'] === null) {
            $invalidProperties[] = "'total_heals_on_teammates' can't be null";
        }
        if ($this->container['total_minions_killed'] === null) {
            $invalidProperties[] = "'total_minions_killed' can't be null";
        }
        if ($this->container['total_time_cc_dealt'] === null) {
            $invalidProperties[] = "'total_time_cc_dealt' can't be null";
        }
        if ($this->container['total_time_spent_dead'] === null) {
            $invalidProperties[] = "'total_time_spent_dead' can't be null";
        }
        if ($this->container['total_units_healed'] === null) {
            $invalidProperties[] = "'total_units_healed' can't be null";
        }
        if ($this->container['triple_kills'] === null) {
            $invalidProperties[] = "'triple_kills' can't be null";
        }
        if ($this->container['true_damage_dealt'] === null) {
            $invalidProperties[] = "'true_damage_dealt' can't be null";
        }
        if ($this->container['true_damage_dealt_to_champions'] === null) {
            $invalidProperties[] = "'true_damage_dealt_to_champions' can't be null";
        }
        if ($this->container['true_damage_taken'] === null) {
            $invalidProperties[] = "'true_damage_taken' can't be null";
        }
        if ($this->container['turret_kills'] === null) {
            $invalidProperties[] = "'turret_kills' can't be null";
        }
        if ($this->container['unreal_kills'] === null) {
            $invalidProperties[] = "'unreal_kills' can't be null";
        }
        if ($this->container['vision_score'] === null) {
            $invalidProperties[] = "'vision_score' can't be null";
        }
        if ($this->container['vision_wards_bought_in_game'] === null) {
            $invalidProperties[] = "'vision_wards_bought_in_game' can't be null";
        }
        if ($this->container['wards_killed'] === null) {
            $invalidProperties[] = "'wards_killed' can't be null";
        }
        if ($this->container['wards_placed'] === null) {
            $invalidProperties[] = "'wards_placed' can't be null";
        }
        if ($this->container['win'] === null) {
            $invalidProperties[] = "'win' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets all_in_pings
     *
     * @return int
     */
    public function getAllInPings()
    {
        return $this->container['all_in_pings'];
    }

    /**
     * Sets all_in_pings
     *
     * @param int $all_in_pings Yellow crossed swords
     *
     * @return $this
     */
    public function setAllInPings($all_in_pings)
    {
        $this->container['all_in_pings'] = $all_in_pings;

        return $this;
    }

    /**
     * Gets assist_me_pings
     *
     * @return int
     */
    public function getAssistMePings()
    {
        return $this->container['assist_me_pings'];
    }

    /**
     * Sets assist_me_pings
     *
     * @param int $assist_me_pings Green flag
     *
     * @return $this
     */
    public function setAssistMePings($assist_me_pings)
    {
        $this->container['assist_me_pings'] = $assist_me_pings;

        return $this;
    }

    /**
     * Gets assists
     *
     * @return int
     */
    public function getAssists()
    {
        return $this->container['assists'];
    }

    /**
     * Sets assists
     *
     * @param int $assists assists
     *
     * @return $this
     */
    public function setAssists($assists)
    {
        $this->container['assists'] = $assists;

        return $this;
    }

    /**
     * Gets baron_kills
     *
     * @return int
     */
    public function getBaronKills()
    {
        return $this->container['baron_kills'];
    }

    /**
     * Sets baron_kills
     *
     * @param int $baron_kills baron_kills
     *
     * @return $this
     */
    public function setBaronKills($baron_kills)
    {
        $this->container['baron_kills'] = $baron_kills;

        return $this;
    }

    /**
     * Gets bounty_level
     *
     * @return int
     */
    public function getBountyLevel()
    {
        return $this->container['bounty_level'];
    }

    /**
     * Sets bounty_level
     *
     * @param int $bounty_level bounty_level
     *
     * @return $this
     */
    public function setBountyLevel($bounty_level)
    {
        $this->container['bounty_level'] = $bounty_level;

        return $this;
    }

    /**
     * Gets champ_experience
     *
     * @return int
     */
    public function getChampExperience()
    {
        return $this->container['champ_experience'];
    }

    /**
     * Sets champ_experience
     *
     * @param int $champ_experience champ_experience
     *
     * @return $this
     */
    public function setChampExperience($champ_experience)
    {
        $this->container['champ_experience'] = $champ_experience;

        return $this;
    }

    /**
     * Gets champ_level
     *
     * @return int
     */
    public function getChampLevel()
    {
        return $this->container['champ_level'];
    }

    /**
     * Sets champ_level
     *
     * @param int $champ_level champ_level
     *
     * @return $this
     */
    public function setChampLevel($champ_level)
    {
        $this->container['champ_level'] = $champ_level;

        return $this;
    }

    /**
     * Gets champion_id
     *
     * @return int
     */
    public function getChampionId()
    {
        return $this->container['champion_id'];
    }

    /**
     * Sets champion_id
     *
     * @param int $champion_id Prior to patch 11.4, on Feb 18th, 2021, this field returned invalid championIds. We recommend determining the champion based on the championName field for matches played prior to patch 11.4.
     *
     * @return $this
     */
    public function setChampionId($champion_id)
    {
        $this->container['champion_id'] = $champion_id;

        return $this;
    }

    /**
     * Gets champion_name
     *
     * @return string
     */
    public function getChampionName()
    {
        return $this->container['champion_name'];
    }

    /**
     * Sets champion_name
     *
     * @param string $champion_name champion_name
     *
     * @return $this
     */
    public function setChampionName($champion_name)
    {
        $this->container['champion_name'] = $champion_name;

        return $this;
    }

    /**
     * Gets command_pings
     *
     * @return int
     */
    public function getCommandPings()
    {
        return $this->container['command_pings'];
    }

    /**
     * Sets command_pings
     *
     * @param int $command_pings Blue generic ping (ALT+click)
     *
     * @return $this
     */
    public function setCommandPings($command_pings)
    {
        $this->container['command_pings'] = $command_pings;

        return $this;
    }

    /**
     * Gets champion_transform
     *
     * @return int
     */
    public function getChampionTransform()
    {
        return $this->container['champion_transform'];
    }

    /**
     * Sets champion_transform
     *
     * @param int $champion_transform This field is currently only utilized for Kayn's transformations. (Legal values: 0 - None, 1 - Slayer, 2 - Assassin)
     *
     * @return $this
     */
    public function setChampionTransform($champion_transform)
    {
        $this->container['champion_transform'] = $champion_transform;

        return $this;
    }

    /**
     * Gets consumables_purchased
     *
     * @return int
     */
    public function getConsumablesPurchased()
    {
        return $this->container['consumables_purchased'];
    }

    /**
     * Sets consumables_purchased
     *
     * @param int $consumables_purchased consumables_purchased
     *
     * @return $this
     */
    public function setConsumablesPurchased($consumables_purchased)
    {
        $this->container['consumables_purchased'] = $consumables_purchased;

        return $this;
    }

    /**
     * Gets challenges
     *
     * @return \Swagger\Client\Model\MatchV5ChallengesDto
     */
    public function getChallenges()
    {
        return $this->container['challenges'];
    }

    /**
     * Sets challenges
     *
     * @param \Swagger\Client\Model\MatchV5ChallengesDto $challenges challenges
     *
     * @return $this
     */
    public function setChallenges($challenges)
    {
        $this->container['challenges'] = $challenges;

        return $this;
    }

    /**
     * Gets damage_dealt_to_buildings
     *
     * @return int
     */
    public function getDamageDealtToBuildings()
    {
        return $this->container['damage_dealt_to_buildings'];
    }

    /**
     * Sets damage_dealt_to_buildings
     *
     * @param int $damage_dealt_to_buildings damage_dealt_to_buildings
     *
     * @return $this
     */
    public function setDamageDealtToBuildings($damage_dealt_to_buildings)
    {
        $this->container['damage_dealt_to_buildings'] = $damage_dealt_to_buildings;

        return $this;
    }

    /**
     * Gets damage_dealt_to_objectives
     *
     * @return int
     */
    public function getDamageDealtToObjectives()
    {
        return $this->container['damage_dealt_to_objectives'];
    }

    /**
     * Sets damage_dealt_to_objectives
     *
     * @param int $damage_dealt_to_objectives damage_dealt_to_objectives
     *
     * @return $this
     */
    public function setDamageDealtToObjectives($damage_dealt_to_objectives)
    {
        $this->container['damage_dealt_to_objectives'] = $damage_dealt_to_objectives;

        return $this;
    }

    /**
     * Gets damage_dealt_to_turrets
     *
     * @return int
     */
    public function getDamageDealtToTurrets()
    {
        return $this->container['damage_dealt_to_turrets'];
    }

    /**
     * Sets damage_dealt_to_turrets
     *
     * @param int $damage_dealt_to_turrets damage_dealt_to_turrets
     *
     * @return $this
     */
    public function setDamageDealtToTurrets($damage_dealt_to_turrets)
    {
        $this->container['damage_dealt_to_turrets'] = $damage_dealt_to_turrets;

        return $this;
    }

    /**
     * Gets damage_self_mitigated
     *
     * @return int
     */
    public function getDamageSelfMitigated()
    {
        return $this->container['damage_self_mitigated'];
    }

    /**
     * Sets damage_self_mitigated
     *
     * @param int $damage_self_mitigated damage_self_mitigated
     *
     * @return $this
     */
    public function setDamageSelfMitigated($damage_self_mitigated)
    {
        $this->container['damage_self_mitigated'] = $damage_self_mitigated;

        return $this;
    }

    /**
     * Gets deaths
     *
     * @return int
     */
    public function getDeaths()
    {
        return $this->container['deaths'];
    }

    /**
     * Sets deaths
     *
     * @param int $deaths deaths
     *
     * @return $this
     */
    public function setDeaths($deaths)
    {
        $this->container['deaths'] = $deaths;

        return $this;
    }

    /**
     * Gets detector_wards_placed
     *
     * @return int
     */
    public function getDetectorWardsPlaced()
    {
        return $this->container['detector_wards_placed'];
    }

    /**
     * Sets detector_wards_placed
     *
     * @param int $detector_wards_placed detector_wards_placed
     *
     * @return $this
     */
    public function setDetectorWardsPlaced($detector_wards_placed)
    {
        $this->container['detector_wards_placed'] = $detector_wards_placed;

        return $this;
    }

    /**
     * Gets double_kills
     *
     * @return int
     */
    public function getDoubleKills()
    {
        return $this->container['double_kills'];
    }

    /**
     * Sets double_kills
     *
     * @param int $double_kills double_kills
     *
     * @return $this
     */
    public function setDoubleKills($double_kills)
    {
        $this->container['double_kills'] = $double_kills;

        return $this;
    }

    /**
     * Gets dragon_kills
     *
     * @return int
     */
    public function getDragonKills()
    {
        return $this->container['dragon_kills'];
    }

    /**
     * Sets dragon_kills
     *
     * @param int $dragon_kills dragon_kills
     *
     * @return $this
     */
    public function setDragonKills($dragon_kills)
    {
        $this->container['dragon_kills'] = $dragon_kills;

        return $this;
    }

    /**
     * Gets eligible_for_progression
     *
     * @return bool
     */
    public function getEligibleForProgression()
    {
        return $this->container['eligible_for_progression'];
    }

    /**
     * Sets eligible_for_progression
     *
     * @param bool $eligible_for_progression eligible_for_progression
     *
     * @return $this
     */
    public function setEligibleForProgression($eligible_for_progression)
    {
        $this->container['eligible_for_progression'] = $eligible_for_progression;

        return $this;
    }

    /**
     * Gets enemy_missing_pings
     *
     * @return int
     */
    public function getEnemyMissingPings()
    {
        return $this->container['enemy_missing_pings'];
    }

    /**
     * Sets enemy_missing_pings
     *
     * @param int $enemy_missing_pings Yellow questionmark
     *
     * @return $this
     */
    public function setEnemyMissingPings($enemy_missing_pings)
    {
        $this->container['enemy_missing_pings'] = $enemy_missing_pings;

        return $this;
    }

    /**
     * Gets enemy_vision_pings
     *
     * @return int
     */
    public function getEnemyVisionPings()
    {
        return $this->container['enemy_vision_pings'];
    }

    /**
     * Sets enemy_vision_pings
     *
     * @param int $enemy_vision_pings Red eyeball
     *
     * @return $this
     */
    public function setEnemyVisionPings($enemy_vision_pings)
    {
        $this->container['enemy_vision_pings'] = $enemy_vision_pings;

        return $this;
    }

    /**
     * Gets first_blood_assist
     *
     * @return bool
     */
    public function getFirstBloodAssist()
    {
        return $this->container['first_blood_assist'];
    }

    /**
     * Sets first_blood_assist
     *
     * @param bool $first_blood_assist first_blood_assist
     *
     * @return $this
     */
    public function setFirstBloodAssist($first_blood_assist)
    {
        $this->container['first_blood_assist'] = $first_blood_assist;

        return $this;
    }

    /**
     * Gets first_blood_kill
     *
     * @return bool
     */
    public function getFirstBloodKill()
    {
        return $this->container['first_blood_kill'];
    }

    /**
     * Sets first_blood_kill
     *
     * @param bool $first_blood_kill first_blood_kill
     *
     * @return $this
     */
    public function setFirstBloodKill($first_blood_kill)
    {
        $this->container['first_blood_kill'] = $first_blood_kill;

        return $this;
    }

    /**
     * Gets first_tower_assist
     *
     * @return bool
     */
    public function getFirstTowerAssist()
    {
        return $this->container['first_tower_assist'];
    }

    /**
     * Sets first_tower_assist
     *
     * @param bool $first_tower_assist first_tower_assist
     *
     * @return $this
     */
    public function setFirstTowerAssist($first_tower_assist)
    {
        $this->container['first_tower_assist'] = $first_tower_assist;

        return $this;
    }

    /**
     * Gets first_tower_kill
     *
     * @return bool
     */
    public function getFirstTowerKill()
    {
        return $this->container['first_tower_kill'];
    }

    /**
     * Sets first_tower_kill
     *
     * @param bool $first_tower_kill first_tower_kill
     *
     * @return $this
     */
    public function setFirstTowerKill($first_tower_kill)
    {
        $this->container['first_tower_kill'] = $first_tower_kill;

        return $this;
    }

    /**
     * Gets game_ended_in_early_surrender
     *
     * @return bool
     */
    public function getGameEndedInEarlySurrender()
    {
        return $this->container['game_ended_in_early_surrender'];
    }

    /**
     * Sets game_ended_in_early_surrender
     *
     * @param bool $game_ended_in_early_surrender This is an offshoot of the OneStone challenge. The code checks if a spell with the same instance ID does the final point of damage to at least 2 Champions. It doesn't matter if they're enemies, but you cannot hurt your friends.
     *
     * @return $this
     */
    public function setGameEndedInEarlySurrender($game_ended_in_early_surrender)
    {
        $this->container['game_ended_in_early_surrender'] = $game_ended_in_early_surrender;

        return $this;
    }

    /**
     * Gets game_ended_in_surrender
     *
     * @return bool
     */
    public function getGameEndedInSurrender()
    {
        return $this->container['game_ended_in_surrender'];
    }

    /**
     * Sets game_ended_in_surrender
     *
     * @param bool $game_ended_in_surrender game_ended_in_surrender
     *
     * @return $this
     */
    public function setGameEndedInSurrender($game_ended_in_surrender)
    {
        $this->container['game_ended_in_surrender'] = $game_ended_in_surrender;

        return $this;
    }

    /**
     * Gets hold_pings
     *
     * @return int
     */
    public function getHoldPings()
    {
        return $this->container['hold_pings'];
    }

    /**
     * Sets hold_pings
     *
     * @param int $hold_pings hold_pings
     *
     * @return $this
     */
    public function setHoldPings($hold_pings)
    {
        $this->container['hold_pings'] = $hold_pings;

        return $this;
    }

    /**
     * Gets get_back_pings
     *
     * @return int
     */
    public function getGetBackPings()
    {
        return $this->container['get_back_pings'];
    }

    /**
     * Sets get_back_pings
     *
     * @param int $get_back_pings Yellow circle with horizontal line
     *
     * @return $this
     */
    public function setGetBackPings($get_back_pings)
    {
        $this->container['get_back_pings'] = $get_back_pings;

        return $this;
    }

    /**
     * Gets gold_earned
     *
     * @return int
     */
    public function getGoldEarned()
    {
        return $this->container['gold_earned'];
    }

    /**
     * Sets gold_earned
     *
     * @param int $gold_earned gold_earned
     *
     * @return $this
     */
    public function setGoldEarned($gold_earned)
    {
        $this->container['gold_earned'] = $gold_earned;

        return $this;
    }

    /**
     * Gets gold_spent
     *
     * @return int
     */
    public function getGoldSpent()
    {
        return $this->container['gold_spent'];
    }

    /**
     * Sets gold_spent
     *
     * @param int $gold_spent gold_spent
     *
     * @return $this
     */
    public function setGoldSpent($gold_spent)
    {
        $this->container['gold_spent'] = $gold_spent;

        return $this;
    }

    /**
     * Gets individual_position
     *
     * @return string
     */
    public function getIndividualPosition()
    {
        return $this->container['individual_position'];
    }

    /**
     * Sets individual_position
     *
     * @param string $individual_position Both individualPosition and teamPosition are computed by the game server and are different versions of the most likely position played by a player. The individualPosition is the best guess for which position the player actually played in isolation of anything else. The teamPosition is the best guess for which position the player actually played if we add the constraint that each team must have one top player, one jungle, one middle, etc. Generally the recommendation is to use the teamPosition field over the individualPosition field.
     *
     * @return $this
     */
    public function setIndividualPosition($individual_position)
    {
        $this->container['individual_position'] = $individual_position;

        return $this;
    }

    /**
     * Gets inhibitor_kills
     *
     * @return int
     */
    public function getInhibitorKills()
    {
        return $this->container['inhibitor_kills'];
    }

    /**
     * Sets inhibitor_kills
     *
     * @param int $inhibitor_kills inhibitor_kills
     *
     * @return $this
     */
    public function setInhibitorKills($inhibitor_kills)
    {
        $this->container['inhibitor_kills'] = $inhibitor_kills;

        return $this;
    }

    /**
     * Gets inhibitor_takedowns
     *
     * @return int
     */
    public function getInhibitorTakedowns()
    {
        return $this->container['inhibitor_takedowns'];
    }

    /**
     * Sets inhibitor_takedowns
     *
     * @param int $inhibitor_takedowns inhibitor_takedowns
     *
     * @return $this
     */
    public function setInhibitorTakedowns($inhibitor_takedowns)
    {
        $this->container['inhibitor_takedowns'] = $inhibitor_takedowns;

        return $this;
    }

    /**
     * Gets inhibitors_lost
     *
     * @return int
     */
    public function getInhibitorsLost()
    {
        return $this->container['inhibitors_lost'];
    }

    /**
     * Sets inhibitors_lost
     *
     * @param int $inhibitors_lost inhibitors_lost
     *
     * @return $this
     */
    public function setInhibitorsLost($inhibitors_lost)
    {
        $this->container['inhibitors_lost'] = $inhibitors_lost;

        return $this;
    }

    /**
     * Gets item0
     *
     * @return int
     */
    public function getItem0()
    {
        return $this->container['item0'];
    }

    /**
     * Sets item0
     *
     * @param int $item0 item0
     *
     * @return $this
     */
    public function setItem0($item0)
    {
        $this->container['item0'] = $item0;

        return $this;
    }

    /**
     * Gets item1
     *
     * @return int
     */
    public function getItem1()
    {
        return $this->container['item1'];
    }

    /**
     * Sets item1
     *
     * @param int $item1 item1
     *
     * @return $this
     */
    public function setItem1($item1)
    {
        $this->container['item1'] = $item1;

        return $this;
    }

    /**
     * Gets item2
     *
     * @return int
     */
    public function getItem2()
    {
        return $this->container['item2'];
    }

    /**
     * Sets item2
     *
     * @param int $item2 item2
     *
     * @return $this
     */
    public function setItem2($item2)
    {
        $this->container['item2'] = $item2;

        return $this;
    }

    /**
     * Gets item3
     *
     * @return int
     */
    public function getItem3()
    {
        return $this->container['item3'];
    }

    /**
     * Sets item3
     *
     * @param int $item3 item3
     *
     * @return $this
     */
    public function setItem3($item3)
    {
        $this->container['item3'] = $item3;

        return $this;
    }

    /**
     * Gets item4
     *
     * @return int
     */
    public function getItem4()
    {
        return $this->container['item4'];
    }

    /**
     * Sets item4
     *
     * @param int $item4 item4
     *
     * @return $this
     */
    public function setItem4($item4)
    {
        $this->container['item4'] = $item4;

        return $this;
    }

    /**
     * Gets item5
     *
     * @return int
     */
    public function getItem5()
    {
        return $this->container['item5'];
    }

    /**
     * Sets item5
     *
     * @param int $item5 item5
     *
     * @return $this
     */
    public function setItem5($item5)
    {
        $this->container['item5'] = $item5;

        return $this;
    }

    /**
     * Gets item6
     *
     * @return int
     */
    public function getItem6()
    {
        return $this->container['item6'];
    }

    /**
     * Sets item6
     *
     * @param int $item6 item6
     *
     * @return $this
     */
    public function setItem6($item6)
    {
        $this->container['item6'] = $item6;

        return $this;
    }

    /**
     * Gets items_purchased
     *
     * @return int
     */
    public function getItemsPurchased()
    {
        return $this->container['items_purchased'];
    }

    /**
     * Sets items_purchased
     *
     * @param int $items_purchased items_purchased
     *
     * @return $this
     */
    public function setItemsPurchased($items_purchased)
    {
        $this->container['items_purchased'] = $items_purchased;

        return $this;
    }

    /**
     * Gets killing_sprees
     *
     * @return int
     */
    public function getKillingSprees()
    {
        return $this->container['killing_sprees'];
    }

    /**
     * Sets killing_sprees
     *
     * @param int $killing_sprees killing_sprees
     *
     * @return $this
     */
    public function setKillingSprees($killing_sprees)
    {
        $this->container['killing_sprees'] = $killing_sprees;

        return $this;
    }

    /**
     * Gets kills
     *
     * @return int
     */
    public function getKills()
    {
        return $this->container['kills'];
    }

    /**
     * Sets kills
     *
     * @param int $kills kills
     *
     * @return $this
     */
    public function setKills($kills)
    {
        $this->container['kills'] = $kills;

        return $this;
    }

    /**
     * Gets lane
     *
     * @return string
     */
    public function getLane()
    {
        return $this->container['lane'];
    }

    /**
     * Sets lane
     *
     * @param string $lane lane
     *
     * @return $this
     */
    public function setLane($lane)
    {
        $this->container['lane'] = $lane;

        return $this;
    }

    /**
     * Gets largest_critical_strike
     *
     * @return int
     */
    public function getLargestCriticalStrike()
    {
        return $this->container['largest_critical_strike'];
    }

    /**
     * Sets largest_critical_strike
     *
     * @param int $largest_critical_strike largest_critical_strike
     *
     * @return $this
     */
    public function setLargestCriticalStrike($largest_critical_strike)
    {
        $this->container['largest_critical_strike'] = $largest_critical_strike;

        return $this;
    }

    /**
     * Gets largest_killing_spree
     *
     * @return int
     */
    public function getLargestKillingSpree()
    {
        return $this->container['largest_killing_spree'];
    }

    /**
     * Sets largest_killing_spree
     *
     * @param int $largest_killing_spree largest_killing_spree
     *
     * @return $this
     */
    public function setLargestKillingSpree($largest_killing_spree)
    {
        $this->container['largest_killing_spree'] = $largest_killing_spree;

        return $this;
    }

    /**
     * Gets largest_multi_kill
     *
     * @return int
     */
    public function getLargestMultiKill()
    {
        return $this->container['largest_multi_kill'];
    }

    /**
     * Sets largest_multi_kill
     *
     * @param int $largest_multi_kill largest_multi_kill
     *
     * @return $this
     */
    public function setLargestMultiKill($largest_multi_kill)
    {
        $this->container['largest_multi_kill'] = $largest_multi_kill;

        return $this;
    }

    /**
     * Gets longest_time_spent_living
     *
     * @return int
     */
    public function getLongestTimeSpentLiving()
    {
        return $this->container['longest_time_spent_living'];
    }

    /**
     * Sets longest_time_spent_living
     *
     * @param int $longest_time_spent_living longest_time_spent_living
     *
     * @return $this
     */
    public function setLongestTimeSpentLiving($longest_time_spent_living)
    {
        $this->container['longest_time_spent_living'] = $longest_time_spent_living;

        return $this;
    }

    /**
     * Gets magic_damage_dealt
     *
     * @return int
     */
    public function getMagicDamageDealt()
    {
        return $this->container['magic_damage_dealt'];
    }

    /**
     * Sets magic_damage_dealt
     *
     * @param int $magic_damage_dealt magic_damage_dealt
     *
     * @return $this
     */
    public function setMagicDamageDealt($magic_damage_dealt)
    {
        $this->container['magic_damage_dealt'] = $magic_damage_dealt;

        return $this;
    }

    /**
     * Gets magic_damage_dealt_to_champions
     *
     * @return int
     */
    public function getMagicDamageDealtToChampions()
    {
        return $this->container['magic_damage_dealt_to_champions'];
    }

    /**
     * Sets magic_damage_dealt_to_champions
     *
     * @param int $magic_damage_dealt_to_champions magic_damage_dealt_to_champions
     *
     * @return $this
     */
    public function setMagicDamageDealtToChampions($magic_damage_dealt_to_champions)
    {
        $this->container['magic_damage_dealt_to_champions'] = $magic_damage_dealt_to_champions;

        return $this;
    }

    /**
     * Gets magic_damage_taken
     *
     * @return int
     */
    public function getMagicDamageTaken()
    {
        return $this->container['magic_damage_taken'];
    }

    /**
     * Sets magic_damage_taken
     *
     * @param int $magic_damage_taken magic_damage_taken
     *
     * @return $this
     */
    public function setMagicDamageTaken($magic_damage_taken)
    {
        $this->container['magic_damage_taken'] = $magic_damage_taken;

        return $this;
    }

    /**
     * Gets missions
     *
     * @return \Swagger\Client\Model\MatchV5MissionsDto
     */
    public function getMissions()
    {
        return $this->container['missions'];
    }

    /**
     * Sets missions
     *
     * @param \Swagger\Client\Model\MatchV5MissionsDto $missions missions
     *
     * @return $this
     */
    public function setMissions($missions)
    {
        $this->container['missions'] = $missions;

        return $this;
    }

    /**
     * Gets neutral_minions_killed
     *
     * @return int
     */
    public function getNeutralMinionsKilled()
    {
        return $this->container['neutral_minions_killed'];
    }

    /**
     * Sets neutral_minions_killed
     *
     * @param int $neutral_minions_killed neutralMinionsKilled = mNeutralMinionsKilled, which is incremented on kills of kPet and kJungleMonster
     *
     * @return $this
     */
    public function setNeutralMinionsKilled($neutral_minions_killed)
    {
        $this->container['neutral_minions_killed'] = $neutral_minions_killed;

        return $this;
    }

    /**
     * Gets need_vision_pings
     *
     * @return int
     */
    public function getNeedVisionPings()
    {
        return $this->container['need_vision_pings'];
    }

    /**
     * Sets need_vision_pings
     *
     * @param int $need_vision_pings Green ward
     *
     * @return $this
     */
    public function setNeedVisionPings($need_vision_pings)
    {
        $this->container['need_vision_pings'] = $need_vision_pings;

        return $this;
    }

    /**
     * Gets nexus_kills
     *
     * @return int
     */
    public function getNexusKills()
    {
        return $this->container['nexus_kills'];
    }

    /**
     * Sets nexus_kills
     *
     * @param int $nexus_kills nexus_kills
     *
     * @return $this
     */
    public function setNexusKills($nexus_kills)
    {
        $this->container['nexus_kills'] = $nexus_kills;

        return $this;
    }

    /**
     * Gets nexus_takedowns
     *
     * @return int
     */
    public function getNexusTakedowns()
    {
        return $this->container['nexus_takedowns'];
    }

    /**
     * Sets nexus_takedowns
     *
     * @param int $nexus_takedowns nexus_takedowns
     *
     * @return $this
     */
    public function setNexusTakedowns($nexus_takedowns)
    {
        $this->container['nexus_takedowns'] = $nexus_takedowns;

        return $this;
    }

    /**
     * Gets nexus_lost
     *
     * @return int
     */
    public function getNexusLost()
    {
        return $this->container['nexus_lost'];
    }

    /**
     * Sets nexus_lost
     *
     * @param int $nexus_lost nexus_lost
     *
     * @return $this
     */
    public function setNexusLost($nexus_lost)
    {
        $this->container['nexus_lost'] = $nexus_lost;

        return $this;
    }

    /**
     * Gets objectives_stolen
     *
     * @return int
     */
    public function getObjectivesStolen()
    {
        return $this->container['objectives_stolen'];
    }

    /**
     * Sets objectives_stolen
     *
     * @param int $objectives_stolen objectives_stolen
     *
     * @return $this
     */
    public function setObjectivesStolen($objectives_stolen)
    {
        $this->container['objectives_stolen'] = $objectives_stolen;

        return $this;
    }

    /**
     * Gets objectives_stolen_assists
     *
     * @return int
     */
    public function getObjectivesStolenAssists()
    {
        return $this->container['objectives_stolen_assists'];
    }

    /**
     * Sets objectives_stolen_assists
     *
     * @param int $objectives_stolen_assists objectives_stolen_assists
     *
     * @return $this
     */
    public function setObjectivesStolenAssists($objectives_stolen_assists)
    {
        $this->container['objectives_stolen_assists'] = $objectives_stolen_assists;

        return $this;
    }

    /**
     * Gets on_my_way_pings
     *
     * @return int
     */
    public function getOnMyWayPings()
    {
        return $this->container['on_my_way_pings'];
    }

    /**
     * Sets on_my_way_pings
     *
     * @param int $on_my_way_pings Blue arrow pointing at ground
     *
     * @return $this
     */
    public function setOnMyWayPings($on_my_way_pings)
    {
        $this->container['on_my_way_pings'] = $on_my_way_pings;

        return $this;
    }

    /**
     * Gets participant_id
     *
     * @return int
     */
    public function getParticipantId()
    {
        return $this->container['participant_id'];
    }

    /**
     * Sets participant_id
     *
     * @param int $participant_id participant_id
     *
     * @return $this
     */
    public function setParticipantId($participant_id)
    {
        $this->container['participant_id'] = $participant_id;

        return $this;
    }

    /**
     * Gets player_score0
     *
     * @return int
     */
    public function getPlayerScore0()
    {
        return $this->container['player_score0'];
    }

    /**
     * Sets player_score0
     *
     * @param int $player_score0 player_score0
     *
     * @return $this
     */
    public function setPlayerScore0($player_score0)
    {
        $this->container['player_score0'] = $player_score0;

        return $this;
    }

    /**
     * Gets player_score1
     *
     * @return int
     */
    public function getPlayerScore1()
    {
        return $this->container['player_score1'];
    }

    /**
     * Sets player_score1
     *
     * @param int $player_score1 player_score1
     *
     * @return $this
     */
    public function setPlayerScore1($player_score1)
    {
        $this->container['player_score1'] = $player_score1;

        return $this;
    }

    /**
     * Gets player_score2
     *
     * @return int
     */
    public function getPlayerScore2()
    {
        return $this->container['player_score2'];
    }

    /**
     * Sets player_score2
     *
     * @param int $player_score2 player_score2
     *
     * @return $this
     */
    public function setPlayerScore2($player_score2)
    {
        $this->container['player_score2'] = $player_score2;

        return $this;
    }

    /**
     * Gets player_score3
     *
     * @return int
     */
    public function getPlayerScore3()
    {
        return $this->container['player_score3'];
    }

    /**
     * Sets player_score3
     *
     * @param int $player_score3 player_score3
     *
     * @return $this
     */
    public function setPlayerScore3($player_score3)
    {
        $this->container['player_score3'] = $player_score3;

        return $this;
    }

    /**
     * Gets player_score4
     *
     * @return int
     */
    public function getPlayerScore4()
    {
        return $this->container['player_score4'];
    }

    /**
     * Sets player_score4
     *
     * @param int $player_score4 player_score4
     *
     * @return $this
     */
    public function setPlayerScore4($player_score4)
    {
        $this->container['player_score4'] = $player_score4;

        return $this;
    }

    /**
     * Gets player_score5
     *
     * @return int
     */
    public function getPlayerScore5()
    {
        return $this->container['player_score5'];
    }

    /**
     * Sets player_score5
     *
     * @param int $player_score5 player_score5
     *
     * @return $this
     */
    public function setPlayerScore5($player_score5)
    {
        $this->container['player_score5'] = $player_score5;

        return $this;
    }

    /**
     * Gets player_score6
     *
     * @return int
     */
    public function getPlayerScore6()
    {
        return $this->container['player_score6'];
    }

    /**
     * Sets player_score6
     *
     * @param int $player_score6 player_score6
     *
     * @return $this
     */
    public function setPlayerScore6($player_score6)
    {
        $this->container['player_score6'] = $player_score6;

        return $this;
    }

    /**
     * Gets player_score7
     *
     * @return int
     */
    public function getPlayerScore7()
    {
        return $this->container['player_score7'];
    }

    /**
     * Sets player_score7
     *
     * @param int $player_score7 player_score7
     *
     * @return $this
     */
    public function setPlayerScore7($player_score7)
    {
        $this->container['player_score7'] = $player_score7;

        return $this;
    }

    /**
     * Gets player_score8
     *
     * @return int
     */
    public function getPlayerScore8()
    {
        return $this->container['player_score8'];
    }

    /**
     * Sets player_score8
     *
     * @param int $player_score8 player_score8
     *
     * @return $this
     */
    public function setPlayerScore8($player_score8)
    {
        $this->container['player_score8'] = $player_score8;

        return $this;
    }

    /**
     * Gets player_score9
     *
     * @return int
     */
    public function getPlayerScore9()
    {
        return $this->container['player_score9'];
    }

    /**
     * Sets player_score9
     *
     * @param int $player_score9 player_score9
     *
     * @return $this
     */
    public function setPlayerScore9($player_score9)
    {
        $this->container['player_score9'] = $player_score9;

        return $this;
    }

    /**
     * Gets player_score10
     *
     * @return int
     */
    public function getPlayerScore10()
    {
        return $this->container['player_score10'];
    }

    /**
     * Sets player_score10
     *
     * @param int $player_score10 player_score10
     *
     * @return $this
     */
    public function setPlayerScore10($player_score10)
    {
        $this->container['player_score10'] = $player_score10;

        return $this;
    }

    /**
     * Gets player_score11
     *
     * @return int
     */
    public function getPlayerScore11()
    {
        return $this->container['player_score11'];
    }

    /**
     * Sets player_score11
     *
     * @param int $player_score11 player_score11
     *
     * @return $this
     */
    public function setPlayerScore11($player_score11)
    {
        $this->container['player_score11'] = $player_score11;

        return $this;
    }

    /**
     * Gets penta_kills
     *
     * @return int
     */
    public function getPentaKills()
    {
        return $this->container['penta_kills'];
    }

    /**
     * Sets penta_kills
     *
     * @param int $penta_kills penta_kills
     *
     * @return $this
     */
    public function setPentaKills($penta_kills)
    {
        $this->container['penta_kills'] = $penta_kills;

        return $this;
    }

    /**
     * Gets perks
     *
     * @return \Swagger\Client\Model\MatchV5PerksDto
     */
    public function getPerks()
    {
        return $this->container['perks'];
    }

    /**
     * Sets perks
     *
     * @param \Swagger\Client\Model\MatchV5PerksDto $perks perks
     *
     * @return $this
     */
    public function setPerks($perks)
    {
        $this->container['perks'] = $perks;

        return $this;
    }

    /**
     * Gets physical_damage_dealt
     *
     * @return int
     */
    public function getPhysicalDamageDealt()
    {
        return $this->container['physical_damage_dealt'];
    }

    /**
     * Sets physical_damage_dealt
     *
     * @param int $physical_damage_dealt physical_damage_dealt
     *
     * @return $this
     */
    public function setPhysicalDamageDealt($physical_damage_dealt)
    {
        $this->container['physical_damage_dealt'] = $physical_damage_dealt;

        return $this;
    }

    /**
     * Gets physical_damage_dealt_to_champions
     *
     * @return int
     */
    public function getPhysicalDamageDealtToChampions()
    {
        return $this->container['physical_damage_dealt_to_champions'];
    }

    /**
     * Sets physical_damage_dealt_to_champions
     *
     * @param int $physical_damage_dealt_to_champions physical_damage_dealt_to_champions
     *
     * @return $this
     */
    public function setPhysicalDamageDealtToChampions($physical_damage_dealt_to_champions)
    {
        $this->container['physical_damage_dealt_to_champions'] = $physical_damage_dealt_to_champions;

        return $this;
    }

    /**
     * Gets physical_damage_taken
     *
     * @return int
     */
    public function getPhysicalDamageTaken()
    {
        return $this->container['physical_damage_taken'];
    }

    /**
     * Sets physical_damage_taken
     *
     * @param int $physical_damage_taken physical_damage_taken
     *
     * @return $this
     */
    public function setPhysicalDamageTaken($physical_damage_taken)
    {
        $this->container['physical_damage_taken'] = $physical_damage_taken;

        return $this;
    }

    /**
     * Gets placement
     *
     * @return int
     */
    public function getPlacement()
    {
        return $this->container['placement'];
    }

    /**
     * Sets placement
     *
     * @param int $placement placement
     *
     * @return $this
     */
    public function setPlacement($placement)
    {
        $this->container['placement'] = $placement;

        return $this;
    }

    /**
     * Gets player_augment1
     *
     * @return int
     */
    public function getPlayerAugment1()
    {
        return $this->container['player_augment1'];
    }

    /**
     * Sets player_augment1
     *
     * @param int $player_augment1 player_augment1
     *
     * @return $this
     */
    public function setPlayerAugment1($player_augment1)
    {
        $this->container['player_augment1'] = $player_augment1;

        return $this;
    }

    /**
     * Gets player_augment2
     *
     * @return int
     */
    public function getPlayerAugment2()
    {
        return $this->container['player_augment2'];
    }

    /**
     * Sets player_augment2
     *
     * @param int $player_augment2 player_augment2
     *
     * @return $this
     */
    public function setPlayerAugment2($player_augment2)
    {
        $this->container['player_augment2'] = $player_augment2;

        return $this;
    }

    /**
     * Gets player_augment3
     *
     * @return int
     */
    public function getPlayerAugment3()
    {
        return $this->container['player_augment3'];
    }

    /**
     * Sets player_augment3
     *
     * @param int $player_augment3 player_augment3
     *
     * @return $this
     */
    public function setPlayerAugment3($player_augment3)
    {
        $this->container['player_augment3'] = $player_augment3;

        return $this;
    }

    /**
     * Gets player_augment4
     *
     * @return int
     */
    public function getPlayerAugment4()
    {
        return $this->container['player_augment4'];
    }

    /**
     * Sets player_augment4
     *
     * @param int $player_augment4 player_augment4
     *
     * @return $this
     */
    public function setPlayerAugment4($player_augment4)
    {
        $this->container['player_augment4'] = $player_augment4;

        return $this;
    }

    /**
     * Gets player_subteam_id
     *
     * @return int
     */
    public function getPlayerSubteamId()
    {
        return $this->container['player_subteam_id'];
    }

    /**
     * Sets player_subteam_id
     *
     * @param int $player_subteam_id player_subteam_id
     *
     * @return $this
     */
    public function setPlayerSubteamId($player_subteam_id)
    {
        $this->container['player_subteam_id'] = $player_subteam_id;

        return $this;
    }

    /**
     * Gets push_pings
     *
     * @return int
     */
    public function getPushPings()
    {
        return $this->container['push_pings'];
    }

    /**
     * Sets push_pings
     *
     * @param int $push_pings Green minion
     *
     * @return $this
     */
    public function setPushPings($push_pings)
    {
        $this->container['push_pings'] = $push_pings;

        return $this;
    }

    /**
     * Gets profile_icon
     *
     * @return int
     */
    public function getProfileIcon()
    {
        return $this->container['profile_icon'];
    }

    /**
     * Sets profile_icon
     *
     * @param int $profile_icon profile_icon
     *
     * @return $this
     */
    public function setProfileIcon($profile_icon)
    {
        $this->container['profile_icon'] = $profile_icon;

        return $this;
    }

    /**
     * Gets puuid
     *
     * @return string
     */
    public function getPuuid()
    {
        return $this->container['puuid'];
    }

    /**
     * Sets puuid
     *
     * @param string $puuid puuid
     *
     * @return $this
     */
    public function setPuuid($puuid)
    {
        $this->container['puuid'] = $puuid;

        return $this;
    }

    /**
     * Gets quadra_kills
     *
     * @return int
     */
    public function getQuadraKills()
    {
        return $this->container['quadra_kills'];
    }

    /**
     * Sets quadra_kills
     *
     * @param int $quadra_kills quadra_kills
     *
     * @return $this
     */
    public function setQuadraKills($quadra_kills)
    {
        $this->container['quadra_kills'] = $quadra_kills;

        return $this;
    }

    /**
     * Gets riot_id_game_name
     *
     * @return string
     */
    public function getRiotIdGameName()
    {
        return $this->container['riot_id_game_name'];
    }

    /**
     * Sets riot_id_game_name
     *
     * @param string $riot_id_game_name riot_id_game_name
     *
     * @return $this
     */
    public function setRiotIdGameName($riot_id_game_name)
    {
        $this->container['riot_id_game_name'] = $riot_id_game_name;

        return $this;
    }

    /**
     * Gets riot_id_name
     *
     * @return string
     */
    public function getRiotIdName()
    {
        return $this->container['riot_id_name'];
    }

    /**
     * Sets riot_id_name
     *
     * @param string $riot_id_name riot_id_name
     *
     * @return $this
     */
    public function setRiotIdName($riot_id_name)
    {
        $this->container['riot_id_name'] = $riot_id_name;

        return $this;
    }

    /**
     * Gets riot_id_tagline
     *
     * @return string
     */
    public function getRiotIdTagline()
    {
        return $this->container['riot_id_tagline'];
    }

    /**
     * Sets riot_id_tagline
     *
     * @param string $riot_id_tagline riot_id_tagline
     *
     * @return $this
     */
    public function setRiotIdTagline($riot_id_tagline)
    {
        $this->container['riot_id_tagline'] = $riot_id_tagline;

        return $this;
    }

    /**
     * Gets role
     *
     * @return string
     */
    public function getRole()
    {
        return $this->container['role'];
    }

    /**
     * Sets role
     *
     * @param string $role role
     *
     * @return $this
     */
    public function setRole($role)
    {
        $this->container['role'] = $role;

        return $this;
    }

    /**
     * Gets sight_wards_bought_in_game
     *
     * @return int
     */
    public function getSightWardsBoughtInGame()
    {
        return $this->container['sight_wards_bought_in_game'];
    }

    /**
     * Sets sight_wards_bought_in_game
     *
     * @param int $sight_wards_bought_in_game sight_wards_bought_in_game
     *
     * @return $this
     */
    public function setSightWardsBoughtInGame($sight_wards_bought_in_game)
    {
        $this->container['sight_wards_bought_in_game'] = $sight_wards_bought_in_game;

        return $this;
    }

    /**
     * Gets spell1_casts
     *
     * @return int
     */
    public function getSpell1Casts()
    {
        return $this->container['spell1_casts'];
    }

    /**
     * Sets spell1_casts
     *
     * @param int $spell1_casts spell1_casts
     *
     * @return $this
     */
    public function setSpell1Casts($spell1_casts)
    {
        $this->container['spell1_casts'] = $spell1_casts;

        return $this;
    }

    /**
     * Gets spell2_casts
     *
     * @return int
     */
    public function getSpell2Casts()
    {
        return $this->container['spell2_casts'];
    }

    /**
     * Sets spell2_casts
     *
     * @param int $spell2_casts spell2_casts
     *
     * @return $this
     */
    public function setSpell2Casts($spell2_casts)
    {
        $this->container['spell2_casts'] = $spell2_casts;

        return $this;
    }

    /**
     * Gets spell3_casts
     *
     * @return int
     */
    public function getSpell3Casts()
    {
        return $this->container['spell3_casts'];
    }

    /**
     * Sets spell3_casts
     *
     * @param int $spell3_casts spell3_casts
     *
     * @return $this
     */
    public function setSpell3Casts($spell3_casts)
    {
        $this->container['spell3_casts'] = $spell3_casts;

        return $this;
    }

    /**
     * Gets spell4_casts
     *
     * @return int
     */
    public function getSpell4Casts()
    {
        return $this->container['spell4_casts'];
    }

    /**
     * Sets spell4_casts
     *
     * @param int $spell4_casts spell4_casts
     *
     * @return $this
     */
    public function setSpell4Casts($spell4_casts)
    {
        $this->container['spell4_casts'] = $spell4_casts;

        return $this;
    }

    /**
     * Gets subteam_placement
     *
     * @return int
     */
    public function getSubteamPlacement()
    {
        return $this->container['subteam_placement'];
    }

    /**
     * Sets subteam_placement
     *
     * @param int $subteam_placement subteam_placement
     *
     * @return $this
     */
    public function setSubteamPlacement($subteam_placement)
    {
        $this->container['subteam_placement'] = $subteam_placement;

        return $this;
    }

    /**
     * Gets summoner1_casts
     *
     * @return int
     */
    public function getSummoner1Casts()
    {
        return $this->container['summoner1_casts'];
    }

    /**
     * Sets summoner1_casts
     *
     * @param int $summoner1_casts summoner1_casts
     *
     * @return $this
     */
    public function setSummoner1Casts($summoner1_casts)
    {
        $this->container['summoner1_casts'] = $summoner1_casts;

        return $this;
    }

    /**
     * Gets summoner1_id
     *
     * @return int
     */
    public function getSummoner1Id()
    {
        return $this->container['summoner1_id'];
    }

    /**
     * Sets summoner1_id
     *
     * @param int $summoner1_id summoner1_id
     *
     * @return $this
     */
    public function setSummoner1Id($summoner1_id)
    {
        $this->container['summoner1_id'] = $summoner1_id;

        return $this;
    }

    /**
     * Gets summoner2_casts
     *
     * @return int
     */
    public function getSummoner2Casts()
    {
        return $this->container['summoner2_casts'];
    }

    /**
     * Sets summoner2_casts
     *
     * @param int $summoner2_casts summoner2_casts
     *
     * @return $this
     */
    public function setSummoner2Casts($summoner2_casts)
    {
        $this->container['summoner2_casts'] = $summoner2_casts;

        return $this;
    }

    /**
     * Gets summoner2_id
     *
     * @return int
     */
    public function getSummoner2Id()
    {
        return $this->container['summoner2_id'];
    }

    /**
     * Sets summoner2_id
     *
     * @param int $summoner2_id summoner2_id
     *
     * @return $this
     */
    public function setSummoner2Id($summoner2_id)
    {
        $this->container['summoner2_id'] = $summoner2_id;

        return $this;
    }

    /**
     * Gets summoner_id
     *
     * @return string
     */
    public function getSummonerId()
    {
        return $this->container['summoner_id'];
    }

    /**
     * Sets summoner_id
     *
     * @param string $summoner_id summoner_id
     *
     * @return $this
     */
    public function setSummonerId($summoner_id)
    {
        $this->container['summoner_id'] = $summoner_id;

        return $this;
    }

    /**
     * Gets summoner_level
     *
     * @return int
     */
    public function getSummonerLevel()
    {
        return $this->container['summoner_level'];
    }

    /**
     * Sets summoner_level
     *
     * @param int $summoner_level summoner_level
     *
     * @return $this
     */
    public function setSummonerLevel($summoner_level)
    {
        $this->container['summoner_level'] = $summoner_level;

        return $this;
    }

    /**
     * Gets summoner_name
     *
     * @return string
     */
    public function getSummonerName()
    {
        return $this->container['summoner_name'];
    }

    /**
     * Sets summoner_name
     *
     * @param string $summoner_name summoner_name
     *
     * @return $this
     */
    public function setSummonerName($summoner_name)
    {
        $this->container['summoner_name'] = $summoner_name;

        return $this;
    }

    /**
     * Gets team_early_surrendered
     *
     * @return bool
     */
    public function getTeamEarlySurrendered()
    {
        return $this->container['team_early_surrendered'];
    }

    /**
     * Sets team_early_surrendered
     *
     * @param bool $team_early_surrendered team_early_surrendered
     *
     * @return $this
     */
    public function setTeamEarlySurrendered($team_early_surrendered)
    {
        $this->container['team_early_surrendered'] = $team_early_surrendered;

        return $this;
    }

    /**
     * Gets team_id
     *
     * @return int
     */
    public function getTeamId()
    {
        return $this->container['team_id'];
    }

    /**
     * Sets team_id
     *
     * @param int $team_id team_id
     *
     * @return $this
     */
    public function setTeamId($team_id)
    {
        $this->container['team_id'] = $team_id;

        return $this;
    }

    /**
     * Gets team_position
     *
     * @return string
     */
    public function getTeamPosition()
    {
        return $this->container['team_position'];
    }

    /**
     * Sets team_position
     *
     * @param string $team_position Both individualPosition and teamPosition are computed by the game server and are different versions of the most likely position played by a player. The individualPosition is the best guess for which position the player actually played in isolation of anything else. The teamPosition is the best guess for which position the player actually played if we add the constraint that each team must have one top player, one jungle, one middle, etc. Generally the recommendation is to use the teamPosition field over the individualPosition field.
     *
     * @return $this
     */
    public function setTeamPosition($team_position)
    {
        $this->container['team_position'] = $team_position;

        return $this;
    }

    /**
     * Gets time_c_cing_others
     *
     * @return int
     */
    public function getTimeCCingOthers()
    {
        return $this->container['time_c_cing_others'];
    }

    /**
     * Sets time_c_cing_others
     *
     * @param int $time_c_cing_others time_c_cing_others
     *
     * @return $this
     */
    public function setTimeCCingOthers($time_c_cing_others)
    {
        $this->container['time_c_cing_others'] = $time_c_cing_others;

        return $this;
    }

    /**
     * Gets time_played
     *
     * @return int
     */
    public function getTimePlayed()
    {
        return $this->container['time_played'];
    }

    /**
     * Sets time_played
     *
     * @param int $time_played time_played
     *
     * @return $this
     */
    public function setTimePlayed($time_played)
    {
        $this->container['time_played'] = $time_played;

        return $this;
    }

    /**
     * Gets total_ally_jungle_minions_killed
     *
     * @return int
     */
    public function getTotalAllyJungleMinionsKilled()
    {
        return $this->container['total_ally_jungle_minions_killed'];
    }

    /**
     * Sets total_ally_jungle_minions_killed
     *
     * @param int $total_ally_jungle_minions_killed total_ally_jungle_minions_killed
     *
     * @return $this
     */
    public function setTotalAllyJungleMinionsKilled($total_ally_jungle_minions_killed)
    {
        $this->container['total_ally_jungle_minions_killed'] = $total_ally_jungle_minions_killed;

        return $this;
    }

    /**
     * Gets total_damage_dealt
     *
     * @return int
     */
    public function getTotalDamageDealt()
    {
        return $this->container['total_damage_dealt'];
    }

    /**
     * Sets total_damage_dealt
     *
     * @param int $total_damage_dealt total_damage_dealt
     *
     * @return $this
     */
    public function setTotalDamageDealt($total_damage_dealt)
    {
        $this->container['total_damage_dealt'] = $total_damage_dealt;

        return $this;
    }

    /**
     * Gets total_damage_dealt_to_champions
     *
     * @return int
     */
    public function getTotalDamageDealtToChampions()
    {
        return $this->container['total_damage_dealt_to_champions'];
    }

    /**
     * Sets total_damage_dealt_to_champions
     *
     * @param int $total_damage_dealt_to_champions total_damage_dealt_to_champions
     *
     * @return $this
     */
    public function setTotalDamageDealtToChampions($total_damage_dealt_to_champions)
    {
        $this->container['total_damage_dealt_to_champions'] = $total_damage_dealt_to_champions;

        return $this;
    }

    /**
     * Gets total_damage_shielded_on_teammates
     *
     * @return int
     */
    public function getTotalDamageShieldedOnTeammates()
    {
        return $this->container['total_damage_shielded_on_teammates'];
    }

    /**
     * Sets total_damage_shielded_on_teammates
     *
     * @param int $total_damage_shielded_on_teammates total_damage_shielded_on_teammates
     *
     * @return $this
     */
    public function setTotalDamageShieldedOnTeammates($total_damage_shielded_on_teammates)
    {
        $this->container['total_damage_shielded_on_teammates'] = $total_damage_shielded_on_teammates;

        return $this;
    }

    /**
     * Gets total_damage_taken
     *
     * @return int
     */
    public function getTotalDamageTaken()
    {
        return $this->container['total_damage_taken'];
    }

    /**
     * Sets total_damage_taken
     *
     * @param int $total_damage_taken total_damage_taken
     *
     * @return $this
     */
    public function setTotalDamageTaken($total_damage_taken)
    {
        $this->container['total_damage_taken'] = $total_damage_taken;

        return $this;
    }

    /**
     * Gets total_enemy_jungle_minions_killed
     *
     * @return int
     */
    public function getTotalEnemyJungleMinionsKilled()
    {
        return $this->container['total_enemy_jungle_minions_killed'];
    }

    /**
     * Sets total_enemy_jungle_minions_killed
     *
     * @param int $total_enemy_jungle_minions_killed total_enemy_jungle_minions_killed
     *
     * @return $this
     */
    public function setTotalEnemyJungleMinionsKilled($total_enemy_jungle_minions_killed)
    {
        $this->container['total_enemy_jungle_minions_killed'] = $total_enemy_jungle_minions_killed;

        return $this;
    }

    /**
     * Gets total_heal
     *
     * @return int
     */
    public function getTotalHeal()
    {
        return $this->container['total_heal'];
    }

    /**
     * Sets total_heal
     *
     * @param int $total_heal Whenever positive health is applied (which translates to all heals in the game but not things like regeneration), totalHeal is incremented by the amount of health received. This includes healing enemies, jungle monsters, yourself, etc
     *
     * @return $this
     */
    public function setTotalHeal($total_heal)
    {
        $this->container['total_heal'] = $total_heal;

        return $this;
    }

    /**
     * Gets total_heals_on_teammates
     *
     * @return int
     */
    public function getTotalHealsOnTeammates()
    {
        return $this->container['total_heals_on_teammates'];
    }

    /**
     * Sets total_heals_on_teammates
     *
     * @param int $total_heals_on_teammates Whenever positive health is applied (which translates to all heals in the game but not things like regeneration), totalHealsOnTeammates is incremented by the amount of health received.  This is post modified, so if you heal someone missing 5 health for 100 you will get +5 totalHealsOnTeammates
     *
     * @return $this
     */
    public function setTotalHealsOnTeammates($total_heals_on_teammates)
    {
        $this->container['total_heals_on_teammates'] = $total_heals_on_teammates;

        return $this;
    }

    /**
     * Gets total_minions_killed
     *
     * @return int
     */
    public function getTotalMinionsKilled()
    {
        return $this->container['total_minions_killed'];
    }

    /**
     * Sets total_minions_killed
     *
     * @param int $total_minions_killed totalMillionsKilled = mMinionsKilled, which is only incremented on kills of kTeamMinion, kMeleeLaneMinion, kSuperLaneMinion, kRangedLaneMinion and kSiegeLaneMinion
     *
     * @return $this
     */
    public function setTotalMinionsKilled($total_minions_killed)
    {
        $this->container['total_minions_killed'] = $total_minions_killed;

        return $this;
    }

    /**
     * Gets total_time_cc_dealt
     *
     * @return int
     */
    public function getTotalTimeCcDealt()
    {
        return $this->container['total_time_cc_dealt'];
    }

    /**
     * Sets total_time_cc_dealt
     *
     * @param int $total_time_cc_dealt total_time_cc_dealt
     *
     * @return $this
     */
    public function setTotalTimeCcDealt($total_time_cc_dealt)
    {
        $this->container['total_time_cc_dealt'] = $total_time_cc_dealt;

        return $this;
    }

    /**
     * Gets total_time_spent_dead
     *
     * @return int
     */
    public function getTotalTimeSpentDead()
    {
        return $this->container['total_time_spent_dead'];
    }

    /**
     * Sets total_time_spent_dead
     *
     * @param int $total_time_spent_dead total_time_spent_dead
     *
     * @return $this
     */
    public function setTotalTimeSpentDead($total_time_spent_dead)
    {
        $this->container['total_time_spent_dead'] = $total_time_spent_dead;

        return $this;
    }

    /**
     * Gets total_units_healed
     *
     * @return int
     */
    public function getTotalUnitsHealed()
    {
        return $this->container['total_units_healed'];
    }

    /**
     * Sets total_units_healed
     *
     * @param int $total_units_healed total_units_healed
     *
     * @return $this
     */
    public function setTotalUnitsHealed($total_units_healed)
    {
        $this->container['total_units_healed'] = $total_units_healed;

        return $this;
    }

    /**
     * Gets triple_kills
     *
     * @return int
     */
    public function getTripleKills()
    {
        return $this->container['triple_kills'];
    }

    /**
     * Sets triple_kills
     *
     * @param int $triple_kills triple_kills
     *
     * @return $this
     */
    public function setTripleKills($triple_kills)
    {
        $this->container['triple_kills'] = $triple_kills;

        return $this;
    }

    /**
     * Gets true_damage_dealt
     *
     * @return int
     */
    public function getTrueDamageDealt()
    {
        return $this->container['true_damage_dealt'];
    }

    /**
     * Sets true_damage_dealt
     *
     * @param int $true_damage_dealt true_damage_dealt
     *
     * @return $this
     */
    public function setTrueDamageDealt($true_damage_dealt)
    {
        $this->container['true_damage_dealt'] = $true_damage_dealt;

        return $this;
    }

    /**
     * Gets true_damage_dealt_to_champions
     *
     * @return int
     */
    public function getTrueDamageDealtToChampions()
    {
        return $this->container['true_damage_dealt_to_champions'];
    }

    /**
     * Sets true_damage_dealt_to_champions
     *
     * @param int $true_damage_dealt_to_champions true_damage_dealt_to_champions
     *
     * @return $this
     */
    public function setTrueDamageDealtToChampions($true_damage_dealt_to_champions)
    {
        $this->container['true_damage_dealt_to_champions'] = $true_damage_dealt_to_champions;

        return $this;
    }

    /**
     * Gets true_damage_taken
     *
     * @return int
     */
    public function getTrueDamageTaken()
    {
        return $this->container['true_damage_taken'];
    }

    /**
     * Sets true_damage_taken
     *
     * @param int $true_damage_taken true_damage_taken
     *
     * @return $this
     */
    public function setTrueDamageTaken($true_damage_taken)
    {
        $this->container['true_damage_taken'] = $true_damage_taken;

        return $this;
    }

    /**
     * Gets turret_kills
     *
     * @return int
     */
    public function getTurretKills()
    {
        return $this->container['turret_kills'];
    }

    /**
     * Sets turret_kills
     *
     * @param int $turret_kills turret_kills
     *
     * @return $this
     */
    public function setTurretKills($turret_kills)
    {
        $this->container['turret_kills'] = $turret_kills;

        return $this;
    }

    /**
     * Gets turret_takedowns
     *
     * @return int
     */
    public function getTurretTakedowns()
    {
        return $this->container['turret_takedowns'];
    }

    /**
     * Sets turret_takedowns
     *
     * @param int $turret_takedowns turret_takedowns
     *
     * @return $this
     */
    public function setTurretTakedowns($turret_takedowns)
    {
        $this->container['turret_takedowns'] = $turret_takedowns;

        return $this;
    }

    /**
     * Gets turrets_lost
     *
     * @return int
     */
    public function getTurretsLost()
    {
        return $this->container['turrets_lost'];
    }

    /**
     * Sets turrets_lost
     *
     * @param int $turrets_lost turrets_lost
     *
     * @return $this
     */
    public function setTurretsLost($turrets_lost)
    {
        $this->container['turrets_lost'] = $turrets_lost;

        return $this;
    }

    /**
     * Gets unreal_kills
     *
     * @return int
     */
    public function getUnrealKills()
    {
        return $this->container['unreal_kills'];
    }

    /**
     * Sets unreal_kills
     *
     * @param int $unreal_kills unreal_kills
     *
     * @return $this
     */
    public function setUnrealKills($unreal_kills)
    {
        $this->container['unreal_kills'] = $unreal_kills;

        return $this;
    }

    /**
     * Gets vision_score
     *
     * @return int
     */
    public function getVisionScore()
    {
        return $this->container['vision_score'];
    }

    /**
     * Sets vision_score
     *
     * @param int $vision_score vision_score
     *
     * @return $this
     */
    public function setVisionScore($vision_score)
    {
        $this->container['vision_score'] = $vision_score;

        return $this;
    }

    /**
     * Gets vision_cleared_pings
     *
     * @return int
     */
    public function getVisionClearedPings()
    {
        return $this->container['vision_cleared_pings'];
    }

    /**
     * Sets vision_cleared_pings
     *
     * @param int $vision_cleared_pings vision_cleared_pings
     *
     * @return $this
     */
    public function setVisionClearedPings($vision_cleared_pings)
    {
        $this->container['vision_cleared_pings'] = $vision_cleared_pings;

        return $this;
    }

    /**
     * Gets vision_wards_bought_in_game
     *
     * @return int
     */
    public function getVisionWardsBoughtInGame()
    {
        return $this->container['vision_wards_bought_in_game'];
    }

    /**
     * Sets vision_wards_bought_in_game
     *
     * @param int $vision_wards_bought_in_game vision_wards_bought_in_game
     *
     * @return $this
     */
    public function setVisionWardsBoughtInGame($vision_wards_bought_in_game)
    {
        $this->container['vision_wards_bought_in_game'] = $vision_wards_bought_in_game;

        return $this;
    }

    /**
     * Gets wards_killed
     *
     * @return int
     */
    public function getWardsKilled()
    {
        return $this->container['wards_killed'];
    }

    /**
     * Sets wards_killed
     *
     * @param int $wards_killed wards_killed
     *
     * @return $this
     */
    public function setWardsKilled($wards_killed)
    {
        $this->container['wards_killed'] = $wards_killed;

        return $this;
    }

    /**
     * Gets wards_placed
     *
     * @return int
     */
    public function getWardsPlaced()
    {
        return $this->container['wards_placed'];
    }

    /**
     * Sets wards_placed
     *
     * @param int $wards_placed wards_placed
     *
     * @return $this
     */
    public function setWardsPlaced($wards_placed)
    {
        $this->container['wards_placed'] = $wards_placed;

        return $this;
    }

    /**
     * Gets win
     *
     * @return bool
     */
    public function getWin()
    {
        return $this->container['win'];
    }

    /**
     * Sets win
     *
     * @param bool $win win
     *
     * @return $this
     */
    public function setWin($win)
    {
        $this->container['win'] = $win;

        return $this;
    }

    /**
     * Gets bait_pings
     *
     * @return int
     */
    public function getBaitPings()
    {
        return $this->container['bait_pings'];
    }

    /**
     * Sets bait_pings
     *
     * @param int $bait_pings bait_pings
     *
     * @return $this
     */
    public function setBaitPings($bait_pings)
    {
        $this->container['bait_pings'] = $bait_pings;

        return $this;
    }

    /**
     * Gets danger_pings
     *
     * @return int
     */
    public function getDangerPings()
    {
        return $this->container['danger_pings'];
    }

    /**
     * Sets danger_pings
     *
     * @param int $danger_pings https://github.com/RiotGames/developer-relations/issues/870
     *
     * @return $this
     */
    public function setDangerPings($danger_pings)
    {
        $this->container['danger_pings'] = $danger_pings;

        return $this;
    }

    /**
     * Gets basic_pings
     *
     * @return int
     */
    public function getBasicPings()
    {
        return $this->container['basic_pings'];
    }

    /**
     * Sets basic_pings
     *
     * @param int $basic_pings https://github.com/RiotGames/developer-relations/issues/814
     *
     * @return $this
     */
    public function setBasicPings($basic_pings)
    {
        $this->container['basic_pings'] = $basic_pings;

        return $this;
    }

    /**
     * Gets player_augment5
     *
     * @return int
     */
    public function getPlayerAugment5()
    {
        return $this->container['player_augment5'];
    }

    /**
     * Sets player_augment5
     *
     * @param int $player_augment5 player_augment5
     *
     * @return $this
     */
    public function setPlayerAugment5($player_augment5)
    {
        $this->container['player_augment5'] = $player_augment5;

        return $this;
    }

    /**
     * Gets player_augment6
     *
     * @return int
     */
    public function getPlayerAugment6()
    {
        return $this->container['player_augment6'];
    }

    /**
     * Sets player_augment6
     *
     * @param int $player_augment6 player_augment6
     *
     * @return $this
     */
    public function setPlayerAugment6($player_augment6)
    {
        $this->container['player_augment6'] = $player_augment6;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


