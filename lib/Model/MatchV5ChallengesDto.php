<?php
/**
 * MatchV5ChallengesDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Riot API
 *
 * OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - Routes Table: [`routesTable.json`](../routesTable.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. ***
 *
 * OpenAPI spec version: b7cd9f901117fa03f7c4e5f9c0a954dac569f75a
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * MatchV5ChallengesDto Class Doc Comment
 *
 * @category Class
 * @description Challenges DTO
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MatchV5ChallengesDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'match-v5.ChallengesDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        '_12_assist_streak_count' => 'int',
        'baron_buff_gold_advantage_over_threshold' => 'double',
        'control_ward_time_coverage_in_river_or_enemy_half' => 'double',
        'earliest_baron' => 'double',
        'earliest_dragon_takedown' => 'double',
        'earliest_elder_dragon' => 'double',
        'early_laning_phase_gold_exp_advantage' => 'double',
        'faster_support_quest_completion' => 'double',
        'fastest_legendary' => 'double',
        'had_afk_teammate' => 'double',
        'highest_champion_damage' => 'double',
        'highest_crowd_control_score' => 'double',
        'highest_ward_kills' => 'double',
        'jungler_kills_early_jungle' => 'double',
        'kills_on_laners_early_jungle_as_jungler' => 'double',
        'laning_phase_gold_exp_advantage' => 'double',
        'legendary_count' => 'double',
        'max_cs_advantage_on_lane_opponent' => 'double',
        'max_level_lead_lane_opponent' => 'double',
        'most_wards_destroyed_one_sweeper' => 'double',
        'mythic_item_used' => 'double',
        'played_champ_select_position' => 'double',
        'solo_turrets_lategame' => 'double',
        'takedowns_first25_minutes' => 'double',
        'teleport_takedowns' => 'double',
        'third_inhibitor_destroyed_time' => 'double',
        'three_wards_one_sweeper_count' => 'double',
        'vision_score_advantage_lane_opponent' => 'double',
        'infernal_scale_pickup' => 'double',
        'fist_bump_participation' => 'int',
        'void_monster_kill' => 'int',
        'ability_uses' => 'int',
        'aces_before15_minutes' => 'int',
        'allied_jungle_monster_kills' => 'double',
        'baron_takedowns' => 'int',
        'blast_cone_opposite_opponent_count' => 'int',
        'bounty_gold' => 'int',
        'buffs_stolen' => 'int',
        'complete_support_quest_in_time' => 'int',
        'control_wards_placed' => 'int',
        'damage_per_minute' => 'double',
        'damage_taken_on_team_percentage' => 'double',
        'danced_with_rift_herald' => 'int',
        'deaths_by_enemy_champs' => 'int',
        'dodge_skill_shots_small_window' => 'int',
        'double_aces' => 'int',
        'dragon_takedowns' => 'int',
        'legendary_item_used' => 'int[]',
        'effective_heal_and_shielding' => 'float',
        'elder_dragon_kills_with_opposing_soul' => 'int',
        'elder_dragon_multikills' => 'int',
        'enemy_champion_immobilizations' => 'int',
        'enemy_jungle_monster_kills' => 'double',
        'epic_monster_kills_near_enemy_jungler' => 'int',
        'epic_monster_kills_within30_seconds_of_spawn' => 'int',
        'epic_monster_steals' => 'int',
        'epic_monster_stolen_without_smite' => 'int',
        'first_turret_killed' => 'double',
        'first_turret_killed_time' => 'float',
        'flawless_aces' => 'int',
        'full_team_takedown' => 'int',
        'game_length' => 'double',
        'get_takedowns_in_all_lanes_early_jungle_as_laner' => 'int',
        'gold_per_minute' => 'double',
        'had_open_nexus' => 'int',
        'immobilize_and_kill_with_ally' => 'int',
        'initial_buff_count' => 'int',
        'initial_crab_count' => 'int',
        'jungle_cs_before10_minutes' => 'double',
        'jungler_takedowns_near_damaged_epic_monster' => 'int',
        'kda' => 'double',
        'kill_after_hidden_with_ally' => 'int',
        'killed_champ_took_full_team_damage_survived' => 'int',
        'killing_sprees' => 'int',
        'kill_participation' => 'double',
        'kills_near_enemy_turret' => 'int',
        'kills_on_other_lanes_early_jungle_as_laner' => 'int',
        'kills_on_recently_healed_by_aram_pack' => 'int',
        'kills_under_own_turret' => 'int',
        'kills_with_help_from_epic_monster' => 'int',
        'knock_enemy_into_team_and_kill' => 'int',
        'k_turrets_destroyed_before_plates_fall' => 'int',
        'land_skill_shots_early_game' => 'int',
        'lane_minions_first10_minutes' => 'int',
        'lost_an_inhibitor' => 'int',
        'max_kill_deficit' => 'int',
        'mejais_full_stack_in_time' => 'int',
        'more_enemy_jungle_than_opponent' => 'double',
        'multi_kill_one_spell' => 'int',
        'multikills' => 'int',
        'multikills_after_aggressive_flash' => 'int',
        'multi_turret_rift_herald_count' => 'int',
        'outer_turret_executes_before10_minutes' => 'int',
        'outnumbered_kills' => 'int',
        'outnumbered_nexus_kill' => 'int',
        'perfect_dragon_souls_taken' => 'int',
        'perfect_game' => 'int',
        'pick_kill_with_ally' => 'int',
        'poro_explosions' => 'int',
        'quick_cleanse' => 'int',
        'quick_first_turret' => 'int',
        'quick_solo_kills' => 'int',
        'rift_herald_takedowns' => 'int',
        'save_ally_from_death' => 'int',
        'scuttle_crab_kills' => 'int',
        'shortest_time_to_ace_from_first_takedown' => 'float',
        'skillshots_dodged' => 'int',
        'skillshots_hit' => 'int',
        'snowballs_hit' => 'int',
        'solo_baron_kills' => 'int',
        'swarm_defeat_aatrox' => 'int',
        'swarm_defeat_briar' => 'int',
        'swarm_defeat_mini_bosses' => 'int',
        'swarm_evolve_weapon' => 'int',
        'swarm_have3_passives' => 'int',
        'swarm_kill_enemy' => 'int',
        'swarm_pickup_gold' => 'int',
        'swarm_reach_level50' => 'int',
        'swarm_survive15_min' => 'int',
        'swarm_win_with5_evolved_weapons' => 'int',
        'solo_kills' => 'int',
        'stealth_wards_placed' => 'int',
        'survived_single_digit_hp_count' => 'int',
        'survived_three_immobilizes_in_fight' => 'int',
        'takedown_on_first_turret' => 'int',
        'takedowns' => 'int',
        'takedowns_after_gaining_level_advantage' => 'int',
        'takedowns_before_jungle_minion_spawn' => 'int',
        'takedowns_first_x_minutes' => 'int',
        'takedowns_in_alcove' => 'int',
        'takedowns_in_enemy_fountain' => 'int',
        'team_baron_kills' => 'int',
        'team_damage_percentage' => 'double',
        'team_elder_dragon_kills' => 'int',
        'team_rift_herald_kills' => 'int',
        'took_large_damage_survived' => 'int',
        'turret_plates_taken' => 'int',
        'turrets_taken_with_rift_herald' => 'int',
        'turret_takedowns' => 'int',
        'twenty_minions_in3_seconds_count' => 'int',
        'two_wards_one_sweeper_count' => 'int',
        'unseen_recalls' => 'int',
        'vision_score_per_minute' => 'double',
        'wards_guarded' => 'int',
        'ward_takedowns' => 'int',
        'ward_takedowns_before20_m' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        '_12_assist_streak_count' => 'int32',
        'baron_buff_gold_advantage_over_threshold' => 'double',
        'control_ward_time_coverage_in_river_or_enemy_half' => 'double',
        'earliest_baron' => 'double',
        'earliest_dragon_takedown' => 'double',
        'earliest_elder_dragon' => 'double',
        'early_laning_phase_gold_exp_advantage' => 'double',
        'faster_support_quest_completion' => 'double',
        'fastest_legendary' => 'double',
        'had_afk_teammate' => 'double',
        'highest_champion_damage' => 'double',
        'highest_crowd_control_score' => 'double',
        'highest_ward_kills' => 'double',
        'jungler_kills_early_jungle' => 'double',
        'kills_on_laners_early_jungle_as_jungler' => 'double',
        'laning_phase_gold_exp_advantage' => 'double',
        'legendary_count' => 'double',
        'max_cs_advantage_on_lane_opponent' => 'double',
        'max_level_lead_lane_opponent' => 'double',
        'most_wards_destroyed_one_sweeper' => 'double',
        'mythic_item_used' => 'double',
        'played_champ_select_position' => 'double',
        'solo_turrets_lategame' => 'double',
        'takedowns_first25_minutes' => 'double',
        'teleport_takedowns' => 'double',
        'third_inhibitor_destroyed_time' => 'double',
        'three_wards_one_sweeper_count' => 'double',
        'vision_score_advantage_lane_opponent' => 'double',
        'infernal_scale_pickup' => 'double',
        'fist_bump_participation' => 'int32',
        'void_monster_kill' => 'int32',
        'ability_uses' => 'int32',
        'aces_before15_minutes' => 'int32',
        'allied_jungle_monster_kills' => 'double',
        'baron_takedowns' => 'int32',
        'blast_cone_opposite_opponent_count' => 'int32',
        'bounty_gold' => 'int32',
        'buffs_stolen' => 'int32',
        'complete_support_quest_in_time' => 'int32',
        'control_wards_placed' => 'int32',
        'damage_per_minute' => 'double',
        'damage_taken_on_team_percentage' => 'double',
        'danced_with_rift_herald' => 'int32',
        'deaths_by_enemy_champs' => 'int32',
        'dodge_skill_shots_small_window' => 'int32',
        'double_aces' => 'int32',
        'dragon_takedowns' => 'int32',
        'legendary_item_used' => 'int32',
        'effective_heal_and_shielding' => 'float',
        'elder_dragon_kills_with_opposing_soul' => 'int32',
        'elder_dragon_multikills' => 'int32',
        'enemy_champion_immobilizations' => 'int32',
        'enemy_jungle_monster_kills' => 'double',
        'epic_monster_kills_near_enemy_jungler' => 'int32',
        'epic_monster_kills_within30_seconds_of_spawn' => 'int32',
        'epic_monster_steals' => 'int32',
        'epic_monster_stolen_without_smite' => 'int32',
        'first_turret_killed' => 'double',
        'first_turret_killed_time' => 'float',
        'flawless_aces' => 'int32',
        'full_team_takedown' => 'int32',
        'game_length' => 'double',
        'get_takedowns_in_all_lanes_early_jungle_as_laner' => 'int32',
        'gold_per_minute' => 'double',
        'had_open_nexus' => 'int32',
        'immobilize_and_kill_with_ally' => 'int32',
        'initial_buff_count' => 'int32',
        'initial_crab_count' => 'int32',
        'jungle_cs_before10_minutes' => 'double',
        'jungler_takedowns_near_damaged_epic_monster' => 'int32',
        'kda' => 'double',
        'kill_after_hidden_with_ally' => 'int32',
        'killed_champ_took_full_team_damage_survived' => 'int32',
        'killing_sprees' => 'int32',
        'kill_participation' => 'double',
        'kills_near_enemy_turret' => 'int32',
        'kills_on_other_lanes_early_jungle_as_laner' => 'int32',
        'kills_on_recently_healed_by_aram_pack' => 'int32',
        'kills_under_own_turret' => 'int32',
        'kills_with_help_from_epic_monster' => 'int32',
        'knock_enemy_into_team_and_kill' => 'int32',
        'k_turrets_destroyed_before_plates_fall' => 'int32',
        'land_skill_shots_early_game' => 'int32',
        'lane_minions_first10_minutes' => 'int32',
        'lost_an_inhibitor' => 'int32',
        'max_kill_deficit' => 'int32',
        'mejais_full_stack_in_time' => 'int32',
        'more_enemy_jungle_than_opponent' => 'double',
        'multi_kill_one_spell' => 'int32',
        'multikills' => 'int32',
        'multikills_after_aggressive_flash' => 'int32',
        'multi_turret_rift_herald_count' => 'int32',
        'outer_turret_executes_before10_minutes' => 'int32',
        'outnumbered_kills' => 'int32',
        'outnumbered_nexus_kill' => 'int32',
        'perfect_dragon_souls_taken' => 'int32',
        'perfect_game' => 'int32',
        'pick_kill_with_ally' => 'int32',
        'poro_explosions' => 'int32',
        'quick_cleanse' => 'int32',
        'quick_first_turret' => 'int32',
        'quick_solo_kills' => 'int32',
        'rift_herald_takedowns' => 'int32',
        'save_ally_from_death' => 'int32',
        'scuttle_crab_kills' => 'int32',
        'shortest_time_to_ace_from_first_takedown' => 'float',
        'skillshots_dodged' => 'int32',
        'skillshots_hit' => 'int32',
        'snowballs_hit' => 'int32',
        'solo_baron_kills' => 'int32',
        'swarm_defeat_aatrox' => 'int32',
        'swarm_defeat_briar' => 'int32',
        'swarm_defeat_mini_bosses' => 'int32',
        'swarm_evolve_weapon' => 'int32',
        'swarm_have3_passives' => 'int32',
        'swarm_kill_enemy' => 'int32',
        'swarm_pickup_gold' => 'int32',
        'swarm_reach_level50' => 'int32',
        'swarm_survive15_min' => 'int32',
        'swarm_win_with5_evolved_weapons' => 'int32',
        'solo_kills' => 'int32',
        'stealth_wards_placed' => 'int32',
        'survived_single_digit_hp_count' => 'int32',
        'survived_three_immobilizes_in_fight' => 'int32',
        'takedown_on_first_turret' => 'int32',
        'takedowns' => 'int32',
        'takedowns_after_gaining_level_advantage' => 'int32',
        'takedowns_before_jungle_minion_spawn' => 'int32',
        'takedowns_first_x_minutes' => 'int32',
        'takedowns_in_alcove' => 'int32',
        'takedowns_in_enemy_fountain' => 'int32',
        'team_baron_kills' => 'int32',
        'team_damage_percentage' => 'double',
        'team_elder_dragon_kills' => 'int32',
        'team_rift_herald_kills' => 'int32',
        'took_large_damage_survived' => 'int32',
        'turret_plates_taken' => 'int32',
        'turrets_taken_with_rift_herald' => 'int32',
        'turret_takedowns' => 'int32',
        'twenty_minions_in3_seconds_count' => 'int32',
        'two_wards_one_sweeper_count' => 'int32',
        'unseen_recalls' => 'int32',
        'vision_score_per_minute' => 'double',
        'wards_guarded' => 'int32',
        'ward_takedowns' => 'int32',
        'ward_takedowns_before20_m' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        '_12_assist_streak_count' => '12AssistStreakCount',
        'baron_buff_gold_advantage_over_threshold' => 'baronBuffGoldAdvantageOverThreshold',
        'control_ward_time_coverage_in_river_or_enemy_half' => 'controlWardTimeCoverageInRiverOrEnemyHalf',
        'earliest_baron' => 'earliestBaron',
        'earliest_dragon_takedown' => 'earliestDragonTakedown',
        'earliest_elder_dragon' => 'earliestElderDragon',
        'early_laning_phase_gold_exp_advantage' => 'earlyLaningPhaseGoldExpAdvantage',
        'faster_support_quest_completion' => 'fasterSupportQuestCompletion',
        'fastest_legendary' => 'fastestLegendary',
        'had_afk_teammate' => 'hadAfkTeammate',
        'highest_champion_damage' => 'highestChampionDamage',
        'highest_crowd_control_score' => 'highestCrowdControlScore',
        'highest_ward_kills' => 'highestWardKills',
        'jungler_kills_early_jungle' => 'junglerKillsEarlyJungle',
        'kills_on_laners_early_jungle_as_jungler' => 'killsOnLanersEarlyJungleAsJungler',
        'laning_phase_gold_exp_advantage' => 'laningPhaseGoldExpAdvantage',
        'legendary_count' => 'legendaryCount',
        'max_cs_advantage_on_lane_opponent' => 'maxCsAdvantageOnLaneOpponent',
        'max_level_lead_lane_opponent' => 'maxLevelLeadLaneOpponent',
        'most_wards_destroyed_one_sweeper' => 'mostWardsDestroyedOneSweeper',
        'mythic_item_used' => 'mythicItemUsed',
        'played_champ_select_position' => 'playedChampSelectPosition',
        'solo_turrets_lategame' => 'soloTurretsLategame',
        'takedowns_first25_minutes' => 'takedownsFirst25Minutes',
        'teleport_takedowns' => 'teleportTakedowns',
        'third_inhibitor_destroyed_time' => 'thirdInhibitorDestroyedTime',
        'three_wards_one_sweeper_count' => 'threeWardsOneSweeperCount',
        'vision_score_advantage_lane_opponent' => 'visionScoreAdvantageLaneOpponent',
        'infernal_scale_pickup' => 'InfernalScalePickup',
        'fist_bump_participation' => 'fistBumpParticipation',
        'void_monster_kill' => 'voidMonsterKill',
        'ability_uses' => 'abilityUses',
        'aces_before15_minutes' => 'acesBefore15Minutes',
        'allied_jungle_monster_kills' => 'alliedJungleMonsterKills',
        'baron_takedowns' => 'baronTakedowns',
        'blast_cone_opposite_opponent_count' => 'blastConeOppositeOpponentCount',
        'bounty_gold' => 'bountyGold',
        'buffs_stolen' => 'buffsStolen',
        'complete_support_quest_in_time' => 'completeSupportQuestInTime',
        'control_wards_placed' => 'controlWardsPlaced',
        'damage_per_minute' => 'damagePerMinute',
        'damage_taken_on_team_percentage' => 'damageTakenOnTeamPercentage',
        'danced_with_rift_herald' => 'dancedWithRiftHerald',
        'deaths_by_enemy_champs' => 'deathsByEnemyChamps',
        'dodge_skill_shots_small_window' => 'dodgeSkillShotsSmallWindow',
        'double_aces' => 'doubleAces',
        'dragon_takedowns' => 'dragonTakedowns',
        'legendary_item_used' => 'legendaryItemUsed',
        'effective_heal_and_shielding' => 'effectiveHealAndShielding',
        'elder_dragon_kills_with_opposing_soul' => 'elderDragonKillsWithOpposingSoul',
        'elder_dragon_multikills' => 'elderDragonMultikills',
        'enemy_champion_immobilizations' => 'enemyChampionImmobilizations',
        'enemy_jungle_monster_kills' => 'enemyJungleMonsterKills',
        'epic_monster_kills_near_enemy_jungler' => 'epicMonsterKillsNearEnemyJungler',
        'epic_monster_kills_within30_seconds_of_spawn' => 'epicMonsterKillsWithin30SecondsOfSpawn',
        'epic_monster_steals' => 'epicMonsterSteals',
        'epic_monster_stolen_without_smite' => 'epicMonsterStolenWithoutSmite',
        'first_turret_killed' => 'firstTurretKilled',
        'first_turret_killed_time' => 'firstTurretKilledTime',
        'flawless_aces' => 'flawlessAces',
        'full_team_takedown' => 'fullTeamTakedown',
        'game_length' => 'gameLength',
        'get_takedowns_in_all_lanes_early_jungle_as_laner' => 'getTakedownsInAllLanesEarlyJungleAsLaner',
        'gold_per_minute' => 'goldPerMinute',
        'had_open_nexus' => 'hadOpenNexus',
        'immobilize_and_kill_with_ally' => 'immobilizeAndKillWithAlly',
        'initial_buff_count' => 'initialBuffCount',
        'initial_crab_count' => 'initialCrabCount',
        'jungle_cs_before10_minutes' => 'jungleCsBefore10Minutes',
        'jungler_takedowns_near_damaged_epic_monster' => 'junglerTakedownsNearDamagedEpicMonster',
        'kda' => 'kda',
        'kill_after_hidden_with_ally' => 'killAfterHiddenWithAlly',
        'killed_champ_took_full_team_damage_survived' => 'killedChampTookFullTeamDamageSurvived',
        'killing_sprees' => 'killingSprees',
        'kill_participation' => 'killParticipation',
        'kills_near_enemy_turret' => 'killsNearEnemyTurret',
        'kills_on_other_lanes_early_jungle_as_laner' => 'killsOnOtherLanesEarlyJungleAsLaner',
        'kills_on_recently_healed_by_aram_pack' => 'killsOnRecentlyHealedByAramPack',
        'kills_under_own_turret' => 'killsUnderOwnTurret',
        'kills_with_help_from_epic_monster' => 'killsWithHelpFromEpicMonster',
        'knock_enemy_into_team_and_kill' => 'knockEnemyIntoTeamAndKill',
        'k_turrets_destroyed_before_plates_fall' => 'kTurretsDestroyedBeforePlatesFall',
        'land_skill_shots_early_game' => 'landSkillShotsEarlyGame',
        'lane_minions_first10_minutes' => 'laneMinionsFirst10Minutes',
        'lost_an_inhibitor' => 'lostAnInhibitor',
        'max_kill_deficit' => 'maxKillDeficit',
        'mejais_full_stack_in_time' => 'mejaisFullStackInTime',
        'more_enemy_jungle_than_opponent' => 'moreEnemyJungleThanOpponent',
        'multi_kill_one_spell' => 'multiKillOneSpell',
        'multikills' => 'multikills',
        'multikills_after_aggressive_flash' => 'multikillsAfterAggressiveFlash',
        'multi_turret_rift_herald_count' => 'multiTurretRiftHeraldCount',
        'outer_turret_executes_before10_minutes' => 'outerTurretExecutesBefore10Minutes',
        'outnumbered_kills' => 'outnumberedKills',
        'outnumbered_nexus_kill' => 'outnumberedNexusKill',
        'perfect_dragon_souls_taken' => 'perfectDragonSoulsTaken',
        'perfect_game' => 'perfectGame',
        'pick_kill_with_ally' => 'pickKillWithAlly',
        'poro_explosions' => 'poroExplosions',
        'quick_cleanse' => 'quickCleanse',
        'quick_first_turret' => 'quickFirstTurret',
        'quick_solo_kills' => 'quickSoloKills',
        'rift_herald_takedowns' => 'riftHeraldTakedowns',
        'save_ally_from_death' => 'saveAllyFromDeath',
        'scuttle_crab_kills' => 'scuttleCrabKills',
        'shortest_time_to_ace_from_first_takedown' => 'shortestTimeToAceFromFirstTakedown',
        'skillshots_dodged' => 'skillshotsDodged',
        'skillshots_hit' => 'skillshotsHit',
        'snowballs_hit' => 'snowballsHit',
        'solo_baron_kills' => 'soloBaronKills',
        'swarm_defeat_aatrox' => 'SWARM_DefeatAatrox',
        'swarm_defeat_briar' => 'SWARM_DefeatBriar',
        'swarm_defeat_mini_bosses' => 'SWARM_DefeatMiniBosses',
        'swarm_evolve_weapon' => 'SWARM_EvolveWeapon',
        'swarm_have3_passives' => 'SWARM_Have3Passives',
        'swarm_kill_enemy' => 'SWARM_KillEnemy',
        'swarm_pickup_gold' => 'SWARM_PickupGold',
        'swarm_reach_level50' => 'SWARM_ReachLevel50',
        'swarm_survive15_min' => 'SWARM_Survive15Min',
        'swarm_win_with5_evolved_weapons' => 'SWARM_WinWith5EvolvedWeapons',
        'solo_kills' => 'soloKills',
        'stealth_wards_placed' => 'stealthWardsPlaced',
        'survived_single_digit_hp_count' => 'survivedSingleDigitHpCount',
        'survived_three_immobilizes_in_fight' => 'survivedThreeImmobilizesInFight',
        'takedown_on_first_turret' => 'takedownOnFirstTurret',
        'takedowns' => 'takedowns',
        'takedowns_after_gaining_level_advantage' => 'takedownsAfterGainingLevelAdvantage',
        'takedowns_before_jungle_minion_spawn' => 'takedownsBeforeJungleMinionSpawn',
        'takedowns_first_x_minutes' => 'takedownsFirstXMinutes',
        'takedowns_in_alcove' => 'takedownsInAlcove',
        'takedowns_in_enemy_fountain' => 'takedownsInEnemyFountain',
        'team_baron_kills' => 'teamBaronKills',
        'team_damage_percentage' => 'teamDamagePercentage',
        'team_elder_dragon_kills' => 'teamElderDragonKills',
        'team_rift_herald_kills' => 'teamRiftHeraldKills',
        'took_large_damage_survived' => 'tookLargeDamageSurvived',
        'turret_plates_taken' => 'turretPlatesTaken',
        'turrets_taken_with_rift_herald' => 'turretsTakenWithRiftHerald',
        'turret_takedowns' => 'turretTakedowns',
        'twenty_minions_in3_seconds_count' => 'twentyMinionsIn3SecondsCount',
        'two_wards_one_sweeper_count' => 'twoWardsOneSweeperCount',
        'unseen_recalls' => 'unseenRecalls',
        'vision_score_per_minute' => 'visionScorePerMinute',
        'wards_guarded' => 'wardsGuarded',
        'ward_takedowns' => 'wardTakedowns',
        'ward_takedowns_before20_m' => 'wardTakedownsBefore20M'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        '_12_assist_streak_count' => 'set12AssistStreakCount',
        'baron_buff_gold_advantage_over_threshold' => 'setBaronBuffGoldAdvantageOverThreshold',
        'control_ward_time_coverage_in_river_or_enemy_half' => 'setControlWardTimeCoverageInRiverOrEnemyHalf',
        'earliest_baron' => 'setEarliestBaron',
        'earliest_dragon_takedown' => 'setEarliestDragonTakedown',
        'earliest_elder_dragon' => 'setEarliestElderDragon',
        'early_laning_phase_gold_exp_advantage' => 'setEarlyLaningPhaseGoldExpAdvantage',
        'faster_support_quest_completion' => 'setFasterSupportQuestCompletion',
        'fastest_legendary' => 'setFastestLegendary',
        'had_afk_teammate' => 'setHadAfkTeammate',
        'highest_champion_damage' => 'setHighestChampionDamage',
        'highest_crowd_control_score' => 'setHighestCrowdControlScore',
        'highest_ward_kills' => 'setHighestWardKills',
        'jungler_kills_early_jungle' => 'setJunglerKillsEarlyJungle',
        'kills_on_laners_early_jungle_as_jungler' => 'setKillsOnLanersEarlyJungleAsJungler',
        'laning_phase_gold_exp_advantage' => 'setLaningPhaseGoldExpAdvantage',
        'legendary_count' => 'setLegendaryCount',
        'max_cs_advantage_on_lane_opponent' => 'setMaxCsAdvantageOnLaneOpponent',
        'max_level_lead_lane_opponent' => 'setMaxLevelLeadLaneOpponent',
        'most_wards_destroyed_one_sweeper' => 'setMostWardsDestroyedOneSweeper',
        'mythic_item_used' => 'setMythicItemUsed',
        'played_champ_select_position' => 'setPlayedChampSelectPosition',
        'solo_turrets_lategame' => 'setSoloTurretsLategame',
        'takedowns_first25_minutes' => 'setTakedownsFirst25Minutes',
        'teleport_takedowns' => 'setTeleportTakedowns',
        'third_inhibitor_destroyed_time' => 'setThirdInhibitorDestroyedTime',
        'three_wards_one_sweeper_count' => 'setThreeWardsOneSweeperCount',
        'vision_score_advantage_lane_opponent' => 'setVisionScoreAdvantageLaneOpponent',
        'infernal_scale_pickup' => 'setInfernalScalePickup',
        'fist_bump_participation' => 'setFistBumpParticipation',
        'void_monster_kill' => 'setVoidMonsterKill',
        'ability_uses' => 'setAbilityUses',
        'aces_before15_minutes' => 'setAcesBefore15Minutes',
        'allied_jungle_monster_kills' => 'setAlliedJungleMonsterKills',
        'baron_takedowns' => 'setBaronTakedowns',
        'blast_cone_opposite_opponent_count' => 'setBlastConeOppositeOpponentCount',
        'bounty_gold' => 'setBountyGold',
        'buffs_stolen' => 'setBuffsStolen',
        'complete_support_quest_in_time' => 'setCompleteSupportQuestInTime',
        'control_wards_placed' => 'setControlWardsPlaced',
        'damage_per_minute' => 'setDamagePerMinute',
        'damage_taken_on_team_percentage' => 'setDamageTakenOnTeamPercentage',
        'danced_with_rift_herald' => 'setDancedWithRiftHerald',
        'deaths_by_enemy_champs' => 'setDeathsByEnemyChamps',
        'dodge_skill_shots_small_window' => 'setDodgeSkillShotsSmallWindow',
        'double_aces' => 'setDoubleAces',
        'dragon_takedowns' => 'setDragonTakedowns',
        'legendary_item_used' => 'setLegendaryItemUsed',
        'effective_heal_and_shielding' => 'setEffectiveHealAndShielding',
        'elder_dragon_kills_with_opposing_soul' => 'setElderDragonKillsWithOpposingSoul',
        'elder_dragon_multikills' => 'setElderDragonMultikills',
        'enemy_champion_immobilizations' => 'setEnemyChampionImmobilizations',
        'enemy_jungle_monster_kills' => 'setEnemyJungleMonsterKills',
        'epic_monster_kills_near_enemy_jungler' => 'setEpicMonsterKillsNearEnemyJungler',
        'epic_monster_kills_within30_seconds_of_spawn' => 'setEpicMonsterKillsWithin30SecondsOfSpawn',
        'epic_monster_steals' => 'setEpicMonsterSteals',
        'epic_monster_stolen_without_smite' => 'setEpicMonsterStolenWithoutSmite',
        'first_turret_killed' => 'setFirstTurretKilled',
        'first_turret_killed_time' => 'setFirstTurretKilledTime',
        'flawless_aces' => 'setFlawlessAces',
        'full_team_takedown' => 'setFullTeamTakedown',
        'game_length' => 'setGameLength',
        'get_takedowns_in_all_lanes_early_jungle_as_laner' => 'setGetTakedownsInAllLanesEarlyJungleAsLaner',
        'gold_per_minute' => 'setGoldPerMinute',
        'had_open_nexus' => 'setHadOpenNexus',
        'immobilize_and_kill_with_ally' => 'setImmobilizeAndKillWithAlly',
        'initial_buff_count' => 'setInitialBuffCount',
        'initial_crab_count' => 'setInitialCrabCount',
        'jungle_cs_before10_minutes' => 'setJungleCsBefore10Minutes',
        'jungler_takedowns_near_damaged_epic_monster' => 'setJunglerTakedownsNearDamagedEpicMonster',
        'kda' => 'setKda',
        'kill_after_hidden_with_ally' => 'setKillAfterHiddenWithAlly',
        'killed_champ_took_full_team_damage_survived' => 'setKilledChampTookFullTeamDamageSurvived',
        'killing_sprees' => 'setKillingSprees',
        'kill_participation' => 'setKillParticipation',
        'kills_near_enemy_turret' => 'setKillsNearEnemyTurret',
        'kills_on_other_lanes_early_jungle_as_laner' => 'setKillsOnOtherLanesEarlyJungleAsLaner',
        'kills_on_recently_healed_by_aram_pack' => 'setKillsOnRecentlyHealedByAramPack',
        'kills_under_own_turret' => 'setKillsUnderOwnTurret',
        'kills_with_help_from_epic_monster' => 'setKillsWithHelpFromEpicMonster',
        'knock_enemy_into_team_and_kill' => 'setKnockEnemyIntoTeamAndKill',
        'k_turrets_destroyed_before_plates_fall' => 'setKTurretsDestroyedBeforePlatesFall',
        'land_skill_shots_early_game' => 'setLandSkillShotsEarlyGame',
        'lane_minions_first10_minutes' => 'setLaneMinionsFirst10Minutes',
        'lost_an_inhibitor' => 'setLostAnInhibitor',
        'max_kill_deficit' => 'setMaxKillDeficit',
        'mejais_full_stack_in_time' => 'setMejaisFullStackInTime',
        'more_enemy_jungle_than_opponent' => 'setMoreEnemyJungleThanOpponent',
        'multi_kill_one_spell' => 'setMultiKillOneSpell',
        'multikills' => 'setMultikills',
        'multikills_after_aggressive_flash' => 'setMultikillsAfterAggressiveFlash',
        'multi_turret_rift_herald_count' => 'setMultiTurretRiftHeraldCount',
        'outer_turret_executes_before10_minutes' => 'setOuterTurretExecutesBefore10Minutes',
        'outnumbered_kills' => 'setOutnumberedKills',
        'outnumbered_nexus_kill' => 'setOutnumberedNexusKill',
        'perfect_dragon_souls_taken' => 'setPerfectDragonSoulsTaken',
        'perfect_game' => 'setPerfectGame',
        'pick_kill_with_ally' => 'setPickKillWithAlly',
        'poro_explosions' => 'setPoroExplosions',
        'quick_cleanse' => 'setQuickCleanse',
        'quick_first_turret' => 'setQuickFirstTurret',
        'quick_solo_kills' => 'setQuickSoloKills',
        'rift_herald_takedowns' => 'setRiftHeraldTakedowns',
        'save_ally_from_death' => 'setSaveAllyFromDeath',
        'scuttle_crab_kills' => 'setScuttleCrabKills',
        'shortest_time_to_ace_from_first_takedown' => 'setShortestTimeToAceFromFirstTakedown',
        'skillshots_dodged' => 'setSkillshotsDodged',
        'skillshots_hit' => 'setSkillshotsHit',
        'snowballs_hit' => 'setSnowballsHit',
        'solo_baron_kills' => 'setSoloBaronKills',
        'swarm_defeat_aatrox' => 'setSwarmDefeatAatrox',
        'swarm_defeat_briar' => 'setSwarmDefeatBriar',
        'swarm_defeat_mini_bosses' => 'setSwarmDefeatMiniBosses',
        'swarm_evolve_weapon' => 'setSwarmEvolveWeapon',
        'swarm_have3_passives' => 'setSwarmHave3Passives',
        'swarm_kill_enemy' => 'setSwarmKillEnemy',
        'swarm_pickup_gold' => 'setSwarmPickupGold',
        'swarm_reach_level50' => 'setSwarmReachLevel50',
        'swarm_survive15_min' => 'setSwarmSurvive15Min',
        'swarm_win_with5_evolved_weapons' => 'setSwarmWinWith5EvolvedWeapons',
        'solo_kills' => 'setSoloKills',
        'stealth_wards_placed' => 'setStealthWardsPlaced',
        'survived_single_digit_hp_count' => 'setSurvivedSingleDigitHpCount',
        'survived_three_immobilizes_in_fight' => 'setSurvivedThreeImmobilizesInFight',
        'takedown_on_first_turret' => 'setTakedownOnFirstTurret',
        'takedowns' => 'setTakedowns',
        'takedowns_after_gaining_level_advantage' => 'setTakedownsAfterGainingLevelAdvantage',
        'takedowns_before_jungle_minion_spawn' => 'setTakedownsBeforeJungleMinionSpawn',
        'takedowns_first_x_minutes' => 'setTakedownsFirstXMinutes',
        'takedowns_in_alcove' => 'setTakedownsInAlcove',
        'takedowns_in_enemy_fountain' => 'setTakedownsInEnemyFountain',
        'team_baron_kills' => 'setTeamBaronKills',
        'team_damage_percentage' => 'setTeamDamagePercentage',
        'team_elder_dragon_kills' => 'setTeamElderDragonKills',
        'team_rift_herald_kills' => 'setTeamRiftHeraldKills',
        'took_large_damage_survived' => 'setTookLargeDamageSurvived',
        'turret_plates_taken' => 'setTurretPlatesTaken',
        'turrets_taken_with_rift_herald' => 'setTurretsTakenWithRiftHerald',
        'turret_takedowns' => 'setTurretTakedowns',
        'twenty_minions_in3_seconds_count' => 'setTwentyMinionsIn3SecondsCount',
        'two_wards_one_sweeper_count' => 'setTwoWardsOneSweeperCount',
        'unseen_recalls' => 'setUnseenRecalls',
        'vision_score_per_minute' => 'setVisionScorePerMinute',
        'wards_guarded' => 'setWardsGuarded',
        'ward_takedowns' => 'setWardTakedowns',
        'ward_takedowns_before20_m' => 'setWardTakedownsBefore20M'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        '_12_assist_streak_count' => 'get12AssistStreakCount',
        'baron_buff_gold_advantage_over_threshold' => 'getBaronBuffGoldAdvantageOverThreshold',
        'control_ward_time_coverage_in_river_or_enemy_half' => 'getControlWardTimeCoverageInRiverOrEnemyHalf',
        'earliest_baron' => 'getEarliestBaron',
        'earliest_dragon_takedown' => 'getEarliestDragonTakedown',
        'earliest_elder_dragon' => 'getEarliestElderDragon',
        'early_laning_phase_gold_exp_advantage' => 'getEarlyLaningPhaseGoldExpAdvantage',
        'faster_support_quest_completion' => 'getFasterSupportQuestCompletion',
        'fastest_legendary' => 'getFastestLegendary',
        'had_afk_teammate' => 'getHadAfkTeammate',
        'highest_champion_damage' => 'getHighestChampionDamage',
        'highest_crowd_control_score' => 'getHighestCrowdControlScore',
        'highest_ward_kills' => 'getHighestWardKills',
        'jungler_kills_early_jungle' => 'getJunglerKillsEarlyJungle',
        'kills_on_laners_early_jungle_as_jungler' => 'getKillsOnLanersEarlyJungleAsJungler',
        'laning_phase_gold_exp_advantage' => 'getLaningPhaseGoldExpAdvantage',
        'legendary_count' => 'getLegendaryCount',
        'max_cs_advantage_on_lane_opponent' => 'getMaxCsAdvantageOnLaneOpponent',
        'max_level_lead_lane_opponent' => 'getMaxLevelLeadLaneOpponent',
        'most_wards_destroyed_one_sweeper' => 'getMostWardsDestroyedOneSweeper',
        'mythic_item_used' => 'getMythicItemUsed',
        'played_champ_select_position' => 'getPlayedChampSelectPosition',
        'solo_turrets_lategame' => 'getSoloTurretsLategame',
        'takedowns_first25_minutes' => 'getTakedownsFirst25Minutes',
        'teleport_takedowns' => 'getTeleportTakedowns',
        'third_inhibitor_destroyed_time' => 'getThirdInhibitorDestroyedTime',
        'three_wards_one_sweeper_count' => 'getThreeWardsOneSweeperCount',
        'vision_score_advantage_lane_opponent' => 'getVisionScoreAdvantageLaneOpponent',
        'infernal_scale_pickup' => 'getInfernalScalePickup',
        'fist_bump_participation' => 'getFistBumpParticipation',
        'void_monster_kill' => 'getVoidMonsterKill',
        'ability_uses' => 'getAbilityUses',
        'aces_before15_minutes' => 'getAcesBefore15Minutes',
        'allied_jungle_monster_kills' => 'getAlliedJungleMonsterKills',
        'baron_takedowns' => 'getBaronTakedowns',
        'blast_cone_opposite_opponent_count' => 'getBlastConeOppositeOpponentCount',
        'bounty_gold' => 'getBountyGold',
        'buffs_stolen' => 'getBuffsStolen',
        'complete_support_quest_in_time' => 'getCompleteSupportQuestInTime',
        'control_wards_placed' => 'getControlWardsPlaced',
        'damage_per_minute' => 'getDamagePerMinute',
        'damage_taken_on_team_percentage' => 'getDamageTakenOnTeamPercentage',
        'danced_with_rift_herald' => 'getDancedWithRiftHerald',
        'deaths_by_enemy_champs' => 'getDeathsByEnemyChamps',
        'dodge_skill_shots_small_window' => 'getDodgeSkillShotsSmallWindow',
        'double_aces' => 'getDoubleAces',
        'dragon_takedowns' => 'getDragonTakedowns',
        'legendary_item_used' => 'getLegendaryItemUsed',
        'effective_heal_and_shielding' => 'getEffectiveHealAndShielding',
        'elder_dragon_kills_with_opposing_soul' => 'getElderDragonKillsWithOpposingSoul',
        'elder_dragon_multikills' => 'getElderDragonMultikills',
        'enemy_champion_immobilizations' => 'getEnemyChampionImmobilizations',
        'enemy_jungle_monster_kills' => 'getEnemyJungleMonsterKills',
        'epic_monster_kills_near_enemy_jungler' => 'getEpicMonsterKillsNearEnemyJungler',
        'epic_monster_kills_within30_seconds_of_spawn' => 'getEpicMonsterKillsWithin30SecondsOfSpawn',
        'epic_monster_steals' => 'getEpicMonsterSteals',
        'epic_monster_stolen_without_smite' => 'getEpicMonsterStolenWithoutSmite',
        'first_turret_killed' => 'getFirstTurretKilled',
        'first_turret_killed_time' => 'getFirstTurretKilledTime',
        'flawless_aces' => 'getFlawlessAces',
        'full_team_takedown' => 'getFullTeamTakedown',
        'game_length' => 'getGameLength',
        'get_takedowns_in_all_lanes_early_jungle_as_laner' => 'getGetTakedownsInAllLanesEarlyJungleAsLaner',
        'gold_per_minute' => 'getGoldPerMinute',
        'had_open_nexus' => 'getHadOpenNexus',
        'immobilize_and_kill_with_ally' => 'getImmobilizeAndKillWithAlly',
        'initial_buff_count' => 'getInitialBuffCount',
        'initial_crab_count' => 'getInitialCrabCount',
        'jungle_cs_before10_minutes' => 'getJungleCsBefore10Minutes',
        'jungler_takedowns_near_damaged_epic_monster' => 'getJunglerTakedownsNearDamagedEpicMonster',
        'kda' => 'getKda',
        'kill_after_hidden_with_ally' => 'getKillAfterHiddenWithAlly',
        'killed_champ_took_full_team_damage_survived' => 'getKilledChampTookFullTeamDamageSurvived',
        'killing_sprees' => 'getKillingSprees',
        'kill_participation' => 'getKillParticipation',
        'kills_near_enemy_turret' => 'getKillsNearEnemyTurret',
        'kills_on_other_lanes_early_jungle_as_laner' => 'getKillsOnOtherLanesEarlyJungleAsLaner',
        'kills_on_recently_healed_by_aram_pack' => 'getKillsOnRecentlyHealedByAramPack',
        'kills_under_own_turret' => 'getKillsUnderOwnTurret',
        'kills_with_help_from_epic_monster' => 'getKillsWithHelpFromEpicMonster',
        'knock_enemy_into_team_and_kill' => 'getKnockEnemyIntoTeamAndKill',
        'k_turrets_destroyed_before_plates_fall' => 'getKTurretsDestroyedBeforePlatesFall',
        'land_skill_shots_early_game' => 'getLandSkillShotsEarlyGame',
        'lane_minions_first10_minutes' => 'getLaneMinionsFirst10Minutes',
        'lost_an_inhibitor' => 'getLostAnInhibitor',
        'max_kill_deficit' => 'getMaxKillDeficit',
        'mejais_full_stack_in_time' => 'getMejaisFullStackInTime',
        'more_enemy_jungle_than_opponent' => 'getMoreEnemyJungleThanOpponent',
        'multi_kill_one_spell' => 'getMultiKillOneSpell',
        'multikills' => 'getMultikills',
        'multikills_after_aggressive_flash' => 'getMultikillsAfterAggressiveFlash',
        'multi_turret_rift_herald_count' => 'getMultiTurretRiftHeraldCount',
        'outer_turret_executes_before10_minutes' => 'getOuterTurretExecutesBefore10Minutes',
        'outnumbered_kills' => 'getOutnumberedKills',
        'outnumbered_nexus_kill' => 'getOutnumberedNexusKill',
        'perfect_dragon_souls_taken' => 'getPerfectDragonSoulsTaken',
        'perfect_game' => 'getPerfectGame',
        'pick_kill_with_ally' => 'getPickKillWithAlly',
        'poro_explosions' => 'getPoroExplosions',
        'quick_cleanse' => 'getQuickCleanse',
        'quick_first_turret' => 'getQuickFirstTurret',
        'quick_solo_kills' => 'getQuickSoloKills',
        'rift_herald_takedowns' => 'getRiftHeraldTakedowns',
        'save_ally_from_death' => 'getSaveAllyFromDeath',
        'scuttle_crab_kills' => 'getScuttleCrabKills',
        'shortest_time_to_ace_from_first_takedown' => 'getShortestTimeToAceFromFirstTakedown',
        'skillshots_dodged' => 'getSkillshotsDodged',
        'skillshots_hit' => 'getSkillshotsHit',
        'snowballs_hit' => 'getSnowballsHit',
        'solo_baron_kills' => 'getSoloBaronKills',
        'swarm_defeat_aatrox' => 'getSwarmDefeatAatrox',
        'swarm_defeat_briar' => 'getSwarmDefeatBriar',
        'swarm_defeat_mini_bosses' => 'getSwarmDefeatMiniBosses',
        'swarm_evolve_weapon' => 'getSwarmEvolveWeapon',
        'swarm_have3_passives' => 'getSwarmHave3Passives',
        'swarm_kill_enemy' => 'getSwarmKillEnemy',
        'swarm_pickup_gold' => 'getSwarmPickupGold',
        'swarm_reach_level50' => 'getSwarmReachLevel50',
        'swarm_survive15_min' => 'getSwarmSurvive15Min',
        'swarm_win_with5_evolved_weapons' => 'getSwarmWinWith5EvolvedWeapons',
        'solo_kills' => 'getSoloKills',
        'stealth_wards_placed' => 'getStealthWardsPlaced',
        'survived_single_digit_hp_count' => 'getSurvivedSingleDigitHpCount',
        'survived_three_immobilizes_in_fight' => 'getSurvivedThreeImmobilizesInFight',
        'takedown_on_first_turret' => 'getTakedownOnFirstTurret',
        'takedowns' => 'getTakedowns',
        'takedowns_after_gaining_level_advantage' => 'getTakedownsAfterGainingLevelAdvantage',
        'takedowns_before_jungle_minion_spawn' => 'getTakedownsBeforeJungleMinionSpawn',
        'takedowns_first_x_minutes' => 'getTakedownsFirstXMinutes',
        'takedowns_in_alcove' => 'getTakedownsInAlcove',
        'takedowns_in_enemy_fountain' => 'getTakedownsInEnemyFountain',
        'team_baron_kills' => 'getTeamBaronKills',
        'team_damage_percentage' => 'getTeamDamagePercentage',
        'team_elder_dragon_kills' => 'getTeamElderDragonKills',
        'team_rift_herald_kills' => 'getTeamRiftHeraldKills',
        'took_large_damage_survived' => 'getTookLargeDamageSurvived',
        'turret_plates_taken' => 'getTurretPlatesTaken',
        'turrets_taken_with_rift_herald' => 'getTurretsTakenWithRiftHerald',
        'turret_takedowns' => 'getTurretTakedowns',
        'twenty_minions_in3_seconds_count' => 'getTwentyMinionsIn3SecondsCount',
        'two_wards_one_sweeper_count' => 'getTwoWardsOneSweeperCount',
        'unseen_recalls' => 'getUnseenRecalls',
        'vision_score_per_minute' => 'getVisionScorePerMinute',
        'wards_guarded' => 'getWardsGuarded',
        'ward_takedowns' => 'getWardTakedowns',
        'ward_takedowns_before20_m' => 'getWardTakedownsBefore20M'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['_12_assist_streak_count'] = isset($data['_12_assist_streak_count']) ? $data['_12_assist_streak_count'] : null;
        $this->container['baron_buff_gold_advantage_over_threshold'] = isset($data['baron_buff_gold_advantage_over_threshold']) ? $data['baron_buff_gold_advantage_over_threshold'] : null;
        $this->container['control_ward_time_coverage_in_river_or_enemy_half'] = isset($data['control_ward_time_coverage_in_river_or_enemy_half']) ? $data['control_ward_time_coverage_in_river_or_enemy_half'] : null;
        $this->container['earliest_baron'] = isset($data['earliest_baron']) ? $data['earliest_baron'] : null;
        $this->container['earliest_dragon_takedown'] = isset($data['earliest_dragon_takedown']) ? $data['earliest_dragon_takedown'] : null;
        $this->container['earliest_elder_dragon'] = isset($data['earliest_elder_dragon']) ? $data['earliest_elder_dragon'] : null;
        $this->container['early_laning_phase_gold_exp_advantage'] = isset($data['early_laning_phase_gold_exp_advantage']) ? $data['early_laning_phase_gold_exp_advantage'] : null;
        $this->container['faster_support_quest_completion'] = isset($data['faster_support_quest_completion']) ? $data['faster_support_quest_completion'] : null;
        $this->container['fastest_legendary'] = isset($data['fastest_legendary']) ? $data['fastest_legendary'] : null;
        $this->container['had_afk_teammate'] = isset($data['had_afk_teammate']) ? $data['had_afk_teammate'] : null;
        $this->container['highest_champion_damage'] = isset($data['highest_champion_damage']) ? $data['highest_champion_damage'] : null;
        $this->container['highest_crowd_control_score'] = isset($data['highest_crowd_control_score']) ? $data['highest_crowd_control_score'] : null;
        $this->container['highest_ward_kills'] = isset($data['highest_ward_kills']) ? $data['highest_ward_kills'] : null;
        $this->container['jungler_kills_early_jungle'] = isset($data['jungler_kills_early_jungle']) ? $data['jungler_kills_early_jungle'] : null;
        $this->container['kills_on_laners_early_jungle_as_jungler'] = isset($data['kills_on_laners_early_jungle_as_jungler']) ? $data['kills_on_laners_early_jungle_as_jungler'] : null;
        $this->container['laning_phase_gold_exp_advantage'] = isset($data['laning_phase_gold_exp_advantage']) ? $data['laning_phase_gold_exp_advantage'] : null;
        $this->container['legendary_count'] = isset($data['legendary_count']) ? $data['legendary_count'] : null;
        $this->container['max_cs_advantage_on_lane_opponent'] = isset($data['max_cs_advantage_on_lane_opponent']) ? $data['max_cs_advantage_on_lane_opponent'] : null;
        $this->container['max_level_lead_lane_opponent'] = isset($data['max_level_lead_lane_opponent']) ? $data['max_level_lead_lane_opponent'] : null;
        $this->container['most_wards_destroyed_one_sweeper'] = isset($data['most_wards_destroyed_one_sweeper']) ? $data['most_wards_destroyed_one_sweeper'] : null;
        $this->container['mythic_item_used'] = isset($data['mythic_item_used']) ? $data['mythic_item_used'] : null;
        $this->container['played_champ_select_position'] = isset($data['played_champ_select_position']) ? $data['played_champ_select_position'] : null;
        $this->container['solo_turrets_lategame'] = isset($data['solo_turrets_lategame']) ? $data['solo_turrets_lategame'] : null;
        $this->container['takedowns_first25_minutes'] = isset($data['takedowns_first25_minutes']) ? $data['takedowns_first25_minutes'] : null;
        $this->container['teleport_takedowns'] = isset($data['teleport_takedowns']) ? $data['teleport_takedowns'] : null;
        $this->container['third_inhibitor_destroyed_time'] = isset($data['third_inhibitor_destroyed_time']) ? $data['third_inhibitor_destroyed_time'] : null;
        $this->container['three_wards_one_sweeper_count'] = isset($data['three_wards_one_sweeper_count']) ? $data['three_wards_one_sweeper_count'] : null;
        $this->container['vision_score_advantage_lane_opponent'] = isset($data['vision_score_advantage_lane_opponent']) ? $data['vision_score_advantage_lane_opponent'] : null;
        $this->container['infernal_scale_pickup'] = isset($data['infernal_scale_pickup']) ? $data['infernal_scale_pickup'] : null;
        $this->container['fist_bump_participation'] = isset($data['fist_bump_participation']) ? $data['fist_bump_participation'] : null;
        $this->container['void_monster_kill'] = isset($data['void_monster_kill']) ? $data['void_monster_kill'] : null;
        $this->container['ability_uses'] = isset($data['ability_uses']) ? $data['ability_uses'] : null;
        $this->container['aces_before15_minutes'] = isset($data['aces_before15_minutes']) ? $data['aces_before15_minutes'] : null;
        $this->container['allied_jungle_monster_kills'] = isset($data['allied_jungle_monster_kills']) ? $data['allied_jungle_monster_kills'] : null;
        $this->container['baron_takedowns'] = isset($data['baron_takedowns']) ? $data['baron_takedowns'] : null;
        $this->container['blast_cone_opposite_opponent_count'] = isset($data['blast_cone_opposite_opponent_count']) ? $data['blast_cone_opposite_opponent_count'] : null;
        $this->container['bounty_gold'] = isset($data['bounty_gold']) ? $data['bounty_gold'] : null;
        $this->container['buffs_stolen'] = isset($data['buffs_stolen']) ? $data['buffs_stolen'] : null;
        $this->container['complete_support_quest_in_time'] = isset($data['complete_support_quest_in_time']) ? $data['complete_support_quest_in_time'] : null;
        $this->container['control_wards_placed'] = isset($data['control_wards_placed']) ? $data['control_wards_placed'] : null;
        $this->container['damage_per_minute'] = isset($data['damage_per_minute']) ? $data['damage_per_minute'] : null;
        $this->container['damage_taken_on_team_percentage'] = isset($data['damage_taken_on_team_percentage']) ? $data['damage_taken_on_team_percentage'] : null;
        $this->container['danced_with_rift_herald'] = isset($data['danced_with_rift_herald']) ? $data['danced_with_rift_herald'] : null;
        $this->container['deaths_by_enemy_champs'] = isset($data['deaths_by_enemy_champs']) ? $data['deaths_by_enemy_champs'] : null;
        $this->container['dodge_skill_shots_small_window'] = isset($data['dodge_skill_shots_small_window']) ? $data['dodge_skill_shots_small_window'] : null;
        $this->container['double_aces'] = isset($data['double_aces']) ? $data['double_aces'] : null;
        $this->container['dragon_takedowns'] = isset($data['dragon_takedowns']) ? $data['dragon_takedowns'] : null;
        $this->container['legendary_item_used'] = isset($data['legendary_item_used']) ? $data['legendary_item_used'] : null;
        $this->container['effective_heal_and_shielding'] = isset($data['effective_heal_and_shielding']) ? $data['effective_heal_and_shielding'] : null;
        $this->container['elder_dragon_kills_with_opposing_soul'] = isset($data['elder_dragon_kills_with_opposing_soul']) ? $data['elder_dragon_kills_with_opposing_soul'] : null;
        $this->container['elder_dragon_multikills'] = isset($data['elder_dragon_multikills']) ? $data['elder_dragon_multikills'] : null;
        $this->container['enemy_champion_immobilizations'] = isset($data['enemy_champion_immobilizations']) ? $data['enemy_champion_immobilizations'] : null;
        $this->container['enemy_jungle_monster_kills'] = isset($data['enemy_jungle_monster_kills']) ? $data['enemy_jungle_monster_kills'] : null;
        $this->container['epic_monster_kills_near_enemy_jungler'] = isset($data['epic_monster_kills_near_enemy_jungler']) ? $data['epic_monster_kills_near_enemy_jungler'] : null;
        $this->container['epic_monster_kills_within30_seconds_of_spawn'] = isset($data['epic_monster_kills_within30_seconds_of_spawn']) ? $data['epic_monster_kills_within30_seconds_of_spawn'] : null;
        $this->container['epic_monster_steals'] = isset($data['epic_monster_steals']) ? $data['epic_monster_steals'] : null;
        $this->container['epic_monster_stolen_without_smite'] = isset($data['epic_monster_stolen_without_smite']) ? $data['epic_monster_stolen_without_smite'] : null;
        $this->container['first_turret_killed'] = isset($data['first_turret_killed']) ? $data['first_turret_killed'] : null;
        $this->container['first_turret_killed_time'] = isset($data['first_turret_killed_time']) ? $data['first_turret_killed_time'] : null;
        $this->container['flawless_aces'] = isset($data['flawless_aces']) ? $data['flawless_aces'] : null;
        $this->container['full_team_takedown'] = isset($data['full_team_takedown']) ? $data['full_team_takedown'] : null;
        $this->container['game_length'] = isset($data['game_length']) ? $data['game_length'] : null;
        $this->container['get_takedowns_in_all_lanes_early_jungle_as_laner'] = isset($data['get_takedowns_in_all_lanes_early_jungle_as_laner']) ? $data['get_takedowns_in_all_lanes_early_jungle_as_laner'] : null;
        $this->container['gold_per_minute'] = isset($data['gold_per_minute']) ? $data['gold_per_minute'] : null;
        $this->container['had_open_nexus'] = isset($data['had_open_nexus']) ? $data['had_open_nexus'] : null;
        $this->container['immobilize_and_kill_with_ally'] = isset($data['immobilize_and_kill_with_ally']) ? $data['immobilize_and_kill_with_ally'] : null;
        $this->container['initial_buff_count'] = isset($data['initial_buff_count']) ? $data['initial_buff_count'] : null;
        $this->container['initial_crab_count'] = isset($data['initial_crab_count']) ? $data['initial_crab_count'] : null;
        $this->container['jungle_cs_before10_minutes'] = isset($data['jungle_cs_before10_minutes']) ? $data['jungle_cs_before10_minutes'] : null;
        $this->container['jungler_takedowns_near_damaged_epic_monster'] = isset($data['jungler_takedowns_near_damaged_epic_monster']) ? $data['jungler_takedowns_near_damaged_epic_monster'] : null;
        $this->container['kda'] = isset($data['kda']) ? $data['kda'] : null;
        $this->container['kill_after_hidden_with_ally'] = isset($data['kill_after_hidden_with_ally']) ? $data['kill_after_hidden_with_ally'] : null;
        $this->container['killed_champ_took_full_team_damage_survived'] = isset($data['killed_champ_took_full_team_damage_survived']) ? $data['killed_champ_took_full_team_damage_survived'] : null;
        $this->container['killing_sprees'] = isset($data['killing_sprees']) ? $data['killing_sprees'] : null;
        $this->container['kill_participation'] = isset($data['kill_participation']) ? $data['kill_participation'] : null;
        $this->container['kills_near_enemy_turret'] = isset($data['kills_near_enemy_turret']) ? $data['kills_near_enemy_turret'] : null;
        $this->container['kills_on_other_lanes_early_jungle_as_laner'] = isset($data['kills_on_other_lanes_early_jungle_as_laner']) ? $data['kills_on_other_lanes_early_jungle_as_laner'] : null;
        $this->container['kills_on_recently_healed_by_aram_pack'] = isset($data['kills_on_recently_healed_by_aram_pack']) ? $data['kills_on_recently_healed_by_aram_pack'] : null;
        $this->container['kills_under_own_turret'] = isset($data['kills_under_own_turret']) ? $data['kills_under_own_turret'] : null;
        $this->container['kills_with_help_from_epic_monster'] = isset($data['kills_with_help_from_epic_monster']) ? $data['kills_with_help_from_epic_monster'] : null;
        $this->container['knock_enemy_into_team_and_kill'] = isset($data['knock_enemy_into_team_and_kill']) ? $data['knock_enemy_into_team_and_kill'] : null;
        $this->container['k_turrets_destroyed_before_plates_fall'] = isset($data['k_turrets_destroyed_before_plates_fall']) ? $data['k_turrets_destroyed_before_plates_fall'] : null;
        $this->container['land_skill_shots_early_game'] = isset($data['land_skill_shots_early_game']) ? $data['land_skill_shots_early_game'] : null;
        $this->container['lane_minions_first10_minutes'] = isset($data['lane_minions_first10_minutes']) ? $data['lane_minions_first10_minutes'] : null;
        $this->container['lost_an_inhibitor'] = isset($data['lost_an_inhibitor']) ? $data['lost_an_inhibitor'] : null;
        $this->container['max_kill_deficit'] = isset($data['max_kill_deficit']) ? $data['max_kill_deficit'] : null;
        $this->container['mejais_full_stack_in_time'] = isset($data['mejais_full_stack_in_time']) ? $data['mejais_full_stack_in_time'] : null;
        $this->container['more_enemy_jungle_than_opponent'] = isset($data['more_enemy_jungle_than_opponent']) ? $data['more_enemy_jungle_than_opponent'] : null;
        $this->container['multi_kill_one_spell'] = isset($data['multi_kill_one_spell']) ? $data['multi_kill_one_spell'] : null;
        $this->container['multikills'] = isset($data['multikills']) ? $data['multikills'] : null;
        $this->container['multikills_after_aggressive_flash'] = isset($data['multikills_after_aggressive_flash']) ? $data['multikills_after_aggressive_flash'] : null;
        $this->container['multi_turret_rift_herald_count'] = isset($data['multi_turret_rift_herald_count']) ? $data['multi_turret_rift_herald_count'] : null;
        $this->container['outer_turret_executes_before10_minutes'] = isset($data['outer_turret_executes_before10_minutes']) ? $data['outer_turret_executes_before10_minutes'] : null;
        $this->container['outnumbered_kills'] = isset($data['outnumbered_kills']) ? $data['outnumbered_kills'] : null;
        $this->container['outnumbered_nexus_kill'] = isset($data['outnumbered_nexus_kill']) ? $data['outnumbered_nexus_kill'] : null;
        $this->container['perfect_dragon_souls_taken'] = isset($data['perfect_dragon_souls_taken']) ? $data['perfect_dragon_souls_taken'] : null;
        $this->container['perfect_game'] = isset($data['perfect_game']) ? $data['perfect_game'] : null;
        $this->container['pick_kill_with_ally'] = isset($data['pick_kill_with_ally']) ? $data['pick_kill_with_ally'] : null;
        $this->container['poro_explosions'] = isset($data['poro_explosions']) ? $data['poro_explosions'] : null;
        $this->container['quick_cleanse'] = isset($data['quick_cleanse']) ? $data['quick_cleanse'] : null;
        $this->container['quick_first_turret'] = isset($data['quick_first_turret']) ? $data['quick_first_turret'] : null;
        $this->container['quick_solo_kills'] = isset($data['quick_solo_kills']) ? $data['quick_solo_kills'] : null;
        $this->container['rift_herald_takedowns'] = isset($data['rift_herald_takedowns']) ? $data['rift_herald_takedowns'] : null;
        $this->container['save_ally_from_death'] = isset($data['save_ally_from_death']) ? $data['save_ally_from_death'] : null;
        $this->container['scuttle_crab_kills'] = isset($data['scuttle_crab_kills']) ? $data['scuttle_crab_kills'] : null;
        $this->container['shortest_time_to_ace_from_first_takedown'] = isset($data['shortest_time_to_ace_from_first_takedown']) ? $data['shortest_time_to_ace_from_first_takedown'] : null;
        $this->container['skillshots_dodged'] = isset($data['skillshots_dodged']) ? $data['skillshots_dodged'] : null;
        $this->container['skillshots_hit'] = isset($data['skillshots_hit']) ? $data['skillshots_hit'] : null;
        $this->container['snowballs_hit'] = isset($data['snowballs_hit']) ? $data['snowballs_hit'] : null;
        $this->container['solo_baron_kills'] = isset($data['solo_baron_kills']) ? $data['solo_baron_kills'] : null;
        $this->container['swarm_defeat_aatrox'] = isset($data['swarm_defeat_aatrox']) ? $data['swarm_defeat_aatrox'] : null;
        $this->container['swarm_defeat_briar'] = isset($data['swarm_defeat_briar']) ? $data['swarm_defeat_briar'] : null;
        $this->container['swarm_defeat_mini_bosses'] = isset($data['swarm_defeat_mini_bosses']) ? $data['swarm_defeat_mini_bosses'] : null;
        $this->container['swarm_evolve_weapon'] = isset($data['swarm_evolve_weapon']) ? $data['swarm_evolve_weapon'] : null;
        $this->container['swarm_have3_passives'] = isset($data['swarm_have3_passives']) ? $data['swarm_have3_passives'] : null;
        $this->container['swarm_kill_enemy'] = isset($data['swarm_kill_enemy']) ? $data['swarm_kill_enemy'] : null;
        $this->container['swarm_pickup_gold'] = isset($data['swarm_pickup_gold']) ? $data['swarm_pickup_gold'] : null;
        $this->container['swarm_reach_level50'] = isset($data['swarm_reach_level50']) ? $data['swarm_reach_level50'] : null;
        $this->container['swarm_survive15_min'] = isset($data['swarm_survive15_min']) ? $data['swarm_survive15_min'] : null;
        $this->container['swarm_win_with5_evolved_weapons'] = isset($data['swarm_win_with5_evolved_weapons']) ? $data['swarm_win_with5_evolved_weapons'] : null;
        $this->container['solo_kills'] = isset($data['solo_kills']) ? $data['solo_kills'] : null;
        $this->container['stealth_wards_placed'] = isset($data['stealth_wards_placed']) ? $data['stealth_wards_placed'] : null;
        $this->container['survived_single_digit_hp_count'] = isset($data['survived_single_digit_hp_count']) ? $data['survived_single_digit_hp_count'] : null;
        $this->container['survived_three_immobilizes_in_fight'] = isset($data['survived_three_immobilizes_in_fight']) ? $data['survived_three_immobilizes_in_fight'] : null;
        $this->container['takedown_on_first_turret'] = isset($data['takedown_on_first_turret']) ? $data['takedown_on_first_turret'] : null;
        $this->container['takedowns'] = isset($data['takedowns']) ? $data['takedowns'] : null;
        $this->container['takedowns_after_gaining_level_advantage'] = isset($data['takedowns_after_gaining_level_advantage']) ? $data['takedowns_after_gaining_level_advantage'] : null;
        $this->container['takedowns_before_jungle_minion_spawn'] = isset($data['takedowns_before_jungle_minion_spawn']) ? $data['takedowns_before_jungle_minion_spawn'] : null;
        $this->container['takedowns_first_x_minutes'] = isset($data['takedowns_first_x_minutes']) ? $data['takedowns_first_x_minutes'] : null;
        $this->container['takedowns_in_alcove'] = isset($data['takedowns_in_alcove']) ? $data['takedowns_in_alcove'] : null;
        $this->container['takedowns_in_enemy_fountain'] = isset($data['takedowns_in_enemy_fountain']) ? $data['takedowns_in_enemy_fountain'] : null;
        $this->container['team_baron_kills'] = isset($data['team_baron_kills']) ? $data['team_baron_kills'] : null;
        $this->container['team_damage_percentage'] = isset($data['team_damage_percentage']) ? $data['team_damage_percentage'] : null;
        $this->container['team_elder_dragon_kills'] = isset($data['team_elder_dragon_kills']) ? $data['team_elder_dragon_kills'] : null;
        $this->container['team_rift_herald_kills'] = isset($data['team_rift_herald_kills']) ? $data['team_rift_herald_kills'] : null;
        $this->container['took_large_damage_survived'] = isset($data['took_large_damage_survived']) ? $data['took_large_damage_survived'] : null;
        $this->container['turret_plates_taken'] = isset($data['turret_plates_taken']) ? $data['turret_plates_taken'] : null;
        $this->container['turrets_taken_with_rift_herald'] = isset($data['turrets_taken_with_rift_herald']) ? $data['turrets_taken_with_rift_herald'] : null;
        $this->container['turret_takedowns'] = isset($data['turret_takedowns']) ? $data['turret_takedowns'] : null;
        $this->container['twenty_minions_in3_seconds_count'] = isset($data['twenty_minions_in3_seconds_count']) ? $data['twenty_minions_in3_seconds_count'] : null;
        $this->container['two_wards_one_sweeper_count'] = isset($data['two_wards_one_sweeper_count']) ? $data['two_wards_one_sweeper_count'] : null;
        $this->container['unseen_recalls'] = isset($data['unseen_recalls']) ? $data['unseen_recalls'] : null;
        $this->container['vision_score_per_minute'] = isset($data['vision_score_per_minute']) ? $data['vision_score_per_minute'] : null;
        $this->container['wards_guarded'] = isset($data['wards_guarded']) ? $data['wards_guarded'] : null;
        $this->container['ward_takedowns'] = isset($data['ward_takedowns']) ? $data['ward_takedowns'] : null;
        $this->container['ward_takedowns_before20_m'] = isset($data['ward_takedowns_before20_m']) ? $data['ward_takedowns_before20_m'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets _12_assist_streak_count
     *
     * @return int
     */
    public function get12AssistStreakCount()
    {
        return $this->container['_12_assist_streak_count'];
    }

    /**
     * Sets _12_assist_streak_count
     *
     * @param int $_12_assist_streak_count _12_assist_streak_count
     *
     * @return $this
     */
    public function set12AssistStreakCount($_12_assist_streak_count)
    {
        $this->container['_12_assist_streak_count'] = $_12_assist_streak_count;

        return $this;
    }

    /**
     * Gets baron_buff_gold_advantage_over_threshold
     *
     * @return double
     */
    public function getBaronBuffGoldAdvantageOverThreshold()
    {
        return $this->container['baron_buff_gold_advantage_over_threshold'];
    }

    /**
     * Sets baron_buff_gold_advantage_over_threshold
     *
     * @param double $baron_buff_gold_advantage_over_threshold baron_buff_gold_advantage_over_threshold
     *
     * @return $this
     */
    public function setBaronBuffGoldAdvantageOverThreshold($baron_buff_gold_advantage_over_threshold)
    {
        $this->container['baron_buff_gold_advantage_over_threshold'] = $baron_buff_gold_advantage_over_threshold;

        return $this;
    }

    /**
     * Gets control_ward_time_coverage_in_river_or_enemy_half
     *
     * @return double
     */
    public function getControlWardTimeCoverageInRiverOrEnemyHalf()
    {
        return $this->container['control_ward_time_coverage_in_river_or_enemy_half'];
    }

    /**
     * Sets control_ward_time_coverage_in_river_or_enemy_half
     *
     * @param double $control_ward_time_coverage_in_river_or_enemy_half control_ward_time_coverage_in_river_or_enemy_half
     *
     * @return $this
     */
    public function setControlWardTimeCoverageInRiverOrEnemyHalf($control_ward_time_coverage_in_river_or_enemy_half)
    {
        $this->container['control_ward_time_coverage_in_river_or_enemy_half'] = $control_ward_time_coverage_in_river_or_enemy_half;

        return $this;
    }

    /**
     * Gets earliest_baron
     *
     * @return double
     */
    public function getEarliestBaron()
    {
        return $this->container['earliest_baron'];
    }

    /**
     * Sets earliest_baron
     *
     * @param double $earliest_baron earliest_baron
     *
     * @return $this
     */
    public function setEarliestBaron($earliest_baron)
    {
        $this->container['earliest_baron'] = $earliest_baron;

        return $this;
    }

    /**
     * Gets earliest_dragon_takedown
     *
     * @return double
     */
    public function getEarliestDragonTakedown()
    {
        return $this->container['earliest_dragon_takedown'];
    }

    /**
     * Sets earliest_dragon_takedown
     *
     * @param double $earliest_dragon_takedown earliest_dragon_takedown
     *
     * @return $this
     */
    public function setEarliestDragonTakedown($earliest_dragon_takedown)
    {
        $this->container['earliest_dragon_takedown'] = $earliest_dragon_takedown;

        return $this;
    }

    /**
     * Gets earliest_elder_dragon
     *
     * @return double
     */
    public function getEarliestElderDragon()
    {
        return $this->container['earliest_elder_dragon'];
    }

    /**
     * Sets earliest_elder_dragon
     *
     * @param double $earliest_elder_dragon earliest_elder_dragon
     *
     * @return $this
     */
    public function setEarliestElderDragon($earliest_elder_dragon)
    {
        $this->container['earliest_elder_dragon'] = $earliest_elder_dragon;

        return $this;
    }

    /**
     * Gets early_laning_phase_gold_exp_advantage
     *
     * @return double
     */
    public function getEarlyLaningPhaseGoldExpAdvantage()
    {
        return $this->container['early_laning_phase_gold_exp_advantage'];
    }

    /**
     * Sets early_laning_phase_gold_exp_advantage
     *
     * @param double $early_laning_phase_gold_exp_advantage early_laning_phase_gold_exp_advantage
     *
     * @return $this
     */
    public function setEarlyLaningPhaseGoldExpAdvantage($early_laning_phase_gold_exp_advantage)
    {
        $this->container['early_laning_phase_gold_exp_advantage'] = $early_laning_phase_gold_exp_advantage;

        return $this;
    }

    /**
     * Gets faster_support_quest_completion
     *
     * @return double
     */
    public function getFasterSupportQuestCompletion()
    {
        return $this->container['faster_support_quest_completion'];
    }

    /**
     * Sets faster_support_quest_completion
     *
     * @param double $faster_support_quest_completion faster_support_quest_completion
     *
     * @return $this
     */
    public function setFasterSupportQuestCompletion($faster_support_quest_completion)
    {
        $this->container['faster_support_quest_completion'] = $faster_support_quest_completion;

        return $this;
    }

    /**
     * Gets fastest_legendary
     *
     * @return double
     */
    public function getFastestLegendary()
    {
        return $this->container['fastest_legendary'];
    }

    /**
     * Sets fastest_legendary
     *
     * @param double $fastest_legendary fastest_legendary
     *
     * @return $this
     */
    public function setFastestLegendary($fastest_legendary)
    {
        $this->container['fastest_legendary'] = $fastest_legendary;

        return $this;
    }

    /**
     * Gets had_afk_teammate
     *
     * @return double
     */
    public function getHadAfkTeammate()
    {
        return $this->container['had_afk_teammate'];
    }

    /**
     * Sets had_afk_teammate
     *
     * @param double $had_afk_teammate had_afk_teammate
     *
     * @return $this
     */
    public function setHadAfkTeammate($had_afk_teammate)
    {
        $this->container['had_afk_teammate'] = $had_afk_teammate;

        return $this;
    }

    /**
     * Gets highest_champion_damage
     *
     * @return double
     */
    public function getHighestChampionDamage()
    {
        return $this->container['highest_champion_damage'];
    }

    /**
     * Sets highest_champion_damage
     *
     * @param double $highest_champion_damage highest_champion_damage
     *
     * @return $this
     */
    public function setHighestChampionDamage($highest_champion_damage)
    {
        $this->container['highest_champion_damage'] = $highest_champion_damage;

        return $this;
    }

    /**
     * Gets highest_crowd_control_score
     *
     * @return double
     */
    public function getHighestCrowdControlScore()
    {
        return $this->container['highest_crowd_control_score'];
    }

    /**
     * Sets highest_crowd_control_score
     *
     * @param double $highest_crowd_control_score highest_crowd_control_score
     *
     * @return $this
     */
    public function setHighestCrowdControlScore($highest_crowd_control_score)
    {
        $this->container['highest_crowd_control_score'] = $highest_crowd_control_score;

        return $this;
    }

    /**
     * Gets highest_ward_kills
     *
     * @return double
     */
    public function getHighestWardKills()
    {
        return $this->container['highest_ward_kills'];
    }

    /**
     * Sets highest_ward_kills
     *
     * @param double $highest_ward_kills highest_ward_kills
     *
     * @return $this
     */
    public function setHighestWardKills($highest_ward_kills)
    {
        $this->container['highest_ward_kills'] = $highest_ward_kills;

        return $this;
    }

    /**
     * Gets jungler_kills_early_jungle
     *
     * @return double
     */
    public function getJunglerKillsEarlyJungle()
    {
        return $this->container['jungler_kills_early_jungle'];
    }

    /**
     * Sets jungler_kills_early_jungle
     *
     * @param double $jungler_kills_early_jungle jungler_kills_early_jungle
     *
     * @return $this
     */
    public function setJunglerKillsEarlyJungle($jungler_kills_early_jungle)
    {
        $this->container['jungler_kills_early_jungle'] = $jungler_kills_early_jungle;

        return $this;
    }

    /**
     * Gets kills_on_laners_early_jungle_as_jungler
     *
     * @return double
     */
    public function getKillsOnLanersEarlyJungleAsJungler()
    {
        return $this->container['kills_on_laners_early_jungle_as_jungler'];
    }

    /**
     * Sets kills_on_laners_early_jungle_as_jungler
     *
     * @param double $kills_on_laners_early_jungle_as_jungler kills_on_laners_early_jungle_as_jungler
     *
     * @return $this
     */
    public function setKillsOnLanersEarlyJungleAsJungler($kills_on_laners_early_jungle_as_jungler)
    {
        $this->container['kills_on_laners_early_jungle_as_jungler'] = $kills_on_laners_early_jungle_as_jungler;

        return $this;
    }

    /**
     * Gets laning_phase_gold_exp_advantage
     *
     * @return double
     */
    public function getLaningPhaseGoldExpAdvantage()
    {
        return $this->container['laning_phase_gold_exp_advantage'];
    }

    /**
     * Sets laning_phase_gold_exp_advantage
     *
     * @param double $laning_phase_gold_exp_advantage laning_phase_gold_exp_advantage
     *
     * @return $this
     */
    public function setLaningPhaseGoldExpAdvantage($laning_phase_gold_exp_advantage)
    {
        $this->container['laning_phase_gold_exp_advantage'] = $laning_phase_gold_exp_advantage;

        return $this;
    }

    /**
     * Gets legendary_count
     *
     * @return double
     */
    public function getLegendaryCount()
    {
        return $this->container['legendary_count'];
    }

    /**
     * Sets legendary_count
     *
     * @param double $legendary_count legendary_count
     *
     * @return $this
     */
    public function setLegendaryCount($legendary_count)
    {
        $this->container['legendary_count'] = $legendary_count;

        return $this;
    }

    /**
     * Gets max_cs_advantage_on_lane_opponent
     *
     * @return double
     */
    public function getMaxCsAdvantageOnLaneOpponent()
    {
        return $this->container['max_cs_advantage_on_lane_opponent'];
    }

    /**
     * Sets max_cs_advantage_on_lane_opponent
     *
     * @param double $max_cs_advantage_on_lane_opponent max_cs_advantage_on_lane_opponent
     *
     * @return $this
     */
    public function setMaxCsAdvantageOnLaneOpponent($max_cs_advantage_on_lane_opponent)
    {
        $this->container['max_cs_advantage_on_lane_opponent'] = $max_cs_advantage_on_lane_opponent;

        return $this;
    }

    /**
     * Gets max_level_lead_lane_opponent
     *
     * @return double
     */
    public function getMaxLevelLeadLaneOpponent()
    {
        return $this->container['max_level_lead_lane_opponent'];
    }

    /**
     * Sets max_level_lead_lane_opponent
     *
     * @param double $max_level_lead_lane_opponent max_level_lead_lane_opponent
     *
     * @return $this
     */
    public function setMaxLevelLeadLaneOpponent($max_level_lead_lane_opponent)
    {
        $this->container['max_level_lead_lane_opponent'] = $max_level_lead_lane_opponent;

        return $this;
    }

    /**
     * Gets most_wards_destroyed_one_sweeper
     *
     * @return double
     */
    public function getMostWardsDestroyedOneSweeper()
    {
        return $this->container['most_wards_destroyed_one_sweeper'];
    }

    /**
     * Sets most_wards_destroyed_one_sweeper
     *
     * @param double $most_wards_destroyed_one_sweeper most_wards_destroyed_one_sweeper
     *
     * @return $this
     */
    public function setMostWardsDestroyedOneSweeper($most_wards_destroyed_one_sweeper)
    {
        $this->container['most_wards_destroyed_one_sweeper'] = $most_wards_destroyed_one_sweeper;

        return $this;
    }

    /**
     * Gets mythic_item_used
     *
     * @return double
     */
    public function getMythicItemUsed()
    {
        return $this->container['mythic_item_used'];
    }

    /**
     * Sets mythic_item_used
     *
     * @param double $mythic_item_used mythic_item_used
     *
     * @return $this
     */
    public function setMythicItemUsed($mythic_item_used)
    {
        $this->container['mythic_item_used'] = $mythic_item_used;

        return $this;
    }

    /**
     * Gets played_champ_select_position
     *
     * @return double
     */
    public function getPlayedChampSelectPosition()
    {
        return $this->container['played_champ_select_position'];
    }

    /**
     * Sets played_champ_select_position
     *
     * @param double $played_champ_select_position played_champ_select_position
     *
     * @return $this
     */
    public function setPlayedChampSelectPosition($played_champ_select_position)
    {
        $this->container['played_champ_select_position'] = $played_champ_select_position;

        return $this;
    }

    /**
     * Gets solo_turrets_lategame
     *
     * @return double
     */
    public function getSoloTurretsLategame()
    {
        return $this->container['solo_turrets_lategame'];
    }

    /**
     * Sets solo_turrets_lategame
     *
     * @param double $solo_turrets_lategame solo_turrets_lategame
     *
     * @return $this
     */
    public function setSoloTurretsLategame($solo_turrets_lategame)
    {
        $this->container['solo_turrets_lategame'] = $solo_turrets_lategame;

        return $this;
    }

    /**
     * Gets takedowns_first25_minutes
     *
     * @return double
     */
    public function getTakedownsFirst25Minutes()
    {
        return $this->container['takedowns_first25_minutes'];
    }

    /**
     * Sets takedowns_first25_minutes
     *
     * @param double $takedowns_first25_minutes takedowns_first25_minutes
     *
     * @return $this
     */
    public function setTakedownsFirst25Minutes($takedowns_first25_minutes)
    {
        $this->container['takedowns_first25_minutes'] = $takedowns_first25_minutes;

        return $this;
    }

    /**
     * Gets teleport_takedowns
     *
     * @return double
     */
    public function getTeleportTakedowns()
    {
        return $this->container['teleport_takedowns'];
    }

    /**
     * Sets teleport_takedowns
     *
     * @param double $teleport_takedowns teleport_takedowns
     *
     * @return $this
     */
    public function setTeleportTakedowns($teleport_takedowns)
    {
        $this->container['teleport_takedowns'] = $teleport_takedowns;

        return $this;
    }

    /**
     * Gets third_inhibitor_destroyed_time
     *
     * @return double
     */
    public function getThirdInhibitorDestroyedTime()
    {
        return $this->container['third_inhibitor_destroyed_time'];
    }

    /**
     * Sets third_inhibitor_destroyed_time
     *
     * @param double $third_inhibitor_destroyed_time third_inhibitor_destroyed_time
     *
     * @return $this
     */
    public function setThirdInhibitorDestroyedTime($third_inhibitor_destroyed_time)
    {
        $this->container['third_inhibitor_destroyed_time'] = $third_inhibitor_destroyed_time;

        return $this;
    }

    /**
     * Gets three_wards_one_sweeper_count
     *
     * @return double
     */
    public function getThreeWardsOneSweeperCount()
    {
        return $this->container['three_wards_one_sweeper_count'];
    }

    /**
     * Sets three_wards_one_sweeper_count
     *
     * @param double $three_wards_one_sweeper_count three_wards_one_sweeper_count
     *
     * @return $this
     */
    public function setThreeWardsOneSweeperCount($three_wards_one_sweeper_count)
    {
        $this->container['three_wards_one_sweeper_count'] = $three_wards_one_sweeper_count;

        return $this;
    }

    /**
     * Gets vision_score_advantage_lane_opponent
     *
     * @return double
     */
    public function getVisionScoreAdvantageLaneOpponent()
    {
        return $this->container['vision_score_advantage_lane_opponent'];
    }

    /**
     * Sets vision_score_advantage_lane_opponent
     *
     * @param double $vision_score_advantage_lane_opponent vision_score_advantage_lane_opponent
     *
     * @return $this
     */
    public function setVisionScoreAdvantageLaneOpponent($vision_score_advantage_lane_opponent)
    {
        $this->container['vision_score_advantage_lane_opponent'] = $vision_score_advantage_lane_opponent;

        return $this;
    }

    /**
     * Gets infernal_scale_pickup
     *
     * @return double
     */
    public function getInfernalScalePickup()
    {
        return $this->container['infernal_scale_pickup'];
    }

    /**
     * Sets infernal_scale_pickup
     *
     * @param double $infernal_scale_pickup infernal_scale_pickup
     *
     * @return $this
     */
    public function setInfernalScalePickup($infernal_scale_pickup)
    {
        $this->container['infernal_scale_pickup'] = $infernal_scale_pickup;

        return $this;
    }

    /**
     * Gets fist_bump_participation
     *
     * @return int
     */
    public function getFistBumpParticipation()
    {
        return $this->container['fist_bump_participation'];
    }

    /**
     * Sets fist_bump_participation
     *
     * @param int $fist_bump_participation fist_bump_participation
     *
     * @return $this
     */
    public function setFistBumpParticipation($fist_bump_participation)
    {
        $this->container['fist_bump_participation'] = $fist_bump_participation;

        return $this;
    }

    /**
     * Gets void_monster_kill
     *
     * @return int
     */
    public function getVoidMonsterKill()
    {
        return $this->container['void_monster_kill'];
    }

    /**
     * Sets void_monster_kill
     *
     * @param int $void_monster_kill void_monster_kill
     *
     * @return $this
     */
    public function setVoidMonsterKill($void_monster_kill)
    {
        $this->container['void_monster_kill'] = $void_monster_kill;

        return $this;
    }

    /**
     * Gets ability_uses
     *
     * @return int
     */
    public function getAbilityUses()
    {
        return $this->container['ability_uses'];
    }

    /**
     * Sets ability_uses
     *
     * @param int $ability_uses ability_uses
     *
     * @return $this
     */
    public function setAbilityUses($ability_uses)
    {
        $this->container['ability_uses'] = $ability_uses;

        return $this;
    }

    /**
     * Gets aces_before15_minutes
     *
     * @return int
     */
    public function getAcesBefore15Minutes()
    {
        return $this->container['aces_before15_minutes'];
    }

    /**
     * Sets aces_before15_minutes
     *
     * @param int $aces_before15_minutes aces_before15_minutes
     *
     * @return $this
     */
    public function setAcesBefore15Minutes($aces_before15_minutes)
    {
        $this->container['aces_before15_minutes'] = $aces_before15_minutes;

        return $this;
    }

    /**
     * Gets allied_jungle_monster_kills
     *
     * @return double
     */
    public function getAlliedJungleMonsterKills()
    {
        return $this->container['allied_jungle_monster_kills'];
    }

    /**
     * Sets allied_jungle_monster_kills
     *
     * @param double $allied_jungle_monster_kills allied_jungle_monster_kills
     *
     * @return $this
     */
    public function setAlliedJungleMonsterKills($allied_jungle_monster_kills)
    {
        $this->container['allied_jungle_monster_kills'] = $allied_jungle_monster_kills;

        return $this;
    }

    /**
     * Gets baron_takedowns
     *
     * @return int
     */
    public function getBaronTakedowns()
    {
        return $this->container['baron_takedowns'];
    }

    /**
     * Sets baron_takedowns
     *
     * @param int $baron_takedowns baron_takedowns
     *
     * @return $this
     */
    public function setBaronTakedowns($baron_takedowns)
    {
        $this->container['baron_takedowns'] = $baron_takedowns;

        return $this;
    }

    /**
     * Gets blast_cone_opposite_opponent_count
     *
     * @return int
     */
    public function getBlastConeOppositeOpponentCount()
    {
        return $this->container['blast_cone_opposite_opponent_count'];
    }

    /**
     * Sets blast_cone_opposite_opponent_count
     *
     * @param int $blast_cone_opposite_opponent_count blast_cone_opposite_opponent_count
     *
     * @return $this
     */
    public function setBlastConeOppositeOpponentCount($blast_cone_opposite_opponent_count)
    {
        $this->container['blast_cone_opposite_opponent_count'] = $blast_cone_opposite_opponent_count;

        return $this;
    }

    /**
     * Gets bounty_gold
     *
     * @return int
     */
    public function getBountyGold()
    {
        return $this->container['bounty_gold'];
    }

    /**
     * Sets bounty_gold
     *
     * @param int $bounty_gold bounty_gold
     *
     * @return $this
     */
    public function setBountyGold($bounty_gold)
    {
        $this->container['bounty_gold'] = $bounty_gold;

        return $this;
    }

    /**
     * Gets buffs_stolen
     *
     * @return int
     */
    public function getBuffsStolen()
    {
        return $this->container['buffs_stolen'];
    }

    /**
     * Sets buffs_stolen
     *
     * @param int $buffs_stolen buffs_stolen
     *
     * @return $this
     */
    public function setBuffsStolen($buffs_stolen)
    {
        $this->container['buffs_stolen'] = $buffs_stolen;

        return $this;
    }

    /**
     * Gets complete_support_quest_in_time
     *
     * @return int
     */
    public function getCompleteSupportQuestInTime()
    {
        return $this->container['complete_support_quest_in_time'];
    }

    /**
     * Sets complete_support_quest_in_time
     *
     * @param int $complete_support_quest_in_time complete_support_quest_in_time
     *
     * @return $this
     */
    public function setCompleteSupportQuestInTime($complete_support_quest_in_time)
    {
        $this->container['complete_support_quest_in_time'] = $complete_support_quest_in_time;

        return $this;
    }

    /**
     * Gets control_wards_placed
     *
     * @return int
     */
    public function getControlWardsPlaced()
    {
        return $this->container['control_wards_placed'];
    }

    /**
     * Sets control_wards_placed
     *
     * @param int $control_wards_placed control_wards_placed
     *
     * @return $this
     */
    public function setControlWardsPlaced($control_wards_placed)
    {
        $this->container['control_wards_placed'] = $control_wards_placed;

        return $this;
    }

    /**
     * Gets damage_per_minute
     *
     * @return double
     */
    public function getDamagePerMinute()
    {
        return $this->container['damage_per_minute'];
    }

    /**
     * Sets damage_per_minute
     *
     * @param double $damage_per_minute damage_per_minute
     *
     * @return $this
     */
    public function setDamagePerMinute($damage_per_minute)
    {
        $this->container['damage_per_minute'] = $damage_per_minute;

        return $this;
    }

    /**
     * Gets damage_taken_on_team_percentage
     *
     * @return double
     */
    public function getDamageTakenOnTeamPercentage()
    {
        return $this->container['damage_taken_on_team_percentage'];
    }

    /**
     * Sets damage_taken_on_team_percentage
     *
     * @param double $damage_taken_on_team_percentage damage_taken_on_team_percentage
     *
     * @return $this
     */
    public function setDamageTakenOnTeamPercentage($damage_taken_on_team_percentage)
    {
        $this->container['damage_taken_on_team_percentage'] = $damage_taken_on_team_percentage;

        return $this;
    }

    /**
     * Gets danced_with_rift_herald
     *
     * @return int
     */
    public function getDancedWithRiftHerald()
    {
        return $this->container['danced_with_rift_herald'];
    }

    /**
     * Sets danced_with_rift_herald
     *
     * @param int $danced_with_rift_herald danced_with_rift_herald
     *
     * @return $this
     */
    public function setDancedWithRiftHerald($danced_with_rift_herald)
    {
        $this->container['danced_with_rift_herald'] = $danced_with_rift_herald;

        return $this;
    }

    /**
     * Gets deaths_by_enemy_champs
     *
     * @return int
     */
    public function getDeathsByEnemyChamps()
    {
        return $this->container['deaths_by_enemy_champs'];
    }

    /**
     * Sets deaths_by_enemy_champs
     *
     * @param int $deaths_by_enemy_champs deaths_by_enemy_champs
     *
     * @return $this
     */
    public function setDeathsByEnemyChamps($deaths_by_enemy_champs)
    {
        $this->container['deaths_by_enemy_champs'] = $deaths_by_enemy_champs;

        return $this;
    }

    /**
     * Gets dodge_skill_shots_small_window
     *
     * @return int
     */
    public function getDodgeSkillShotsSmallWindow()
    {
        return $this->container['dodge_skill_shots_small_window'];
    }

    /**
     * Sets dodge_skill_shots_small_window
     *
     * @param int $dodge_skill_shots_small_window dodge_skill_shots_small_window
     *
     * @return $this
     */
    public function setDodgeSkillShotsSmallWindow($dodge_skill_shots_small_window)
    {
        $this->container['dodge_skill_shots_small_window'] = $dodge_skill_shots_small_window;

        return $this;
    }

    /**
     * Gets double_aces
     *
     * @return int
     */
    public function getDoubleAces()
    {
        return $this->container['double_aces'];
    }

    /**
     * Sets double_aces
     *
     * @param int $double_aces double_aces
     *
     * @return $this
     */
    public function setDoubleAces($double_aces)
    {
        $this->container['double_aces'] = $double_aces;

        return $this;
    }

    /**
     * Gets dragon_takedowns
     *
     * @return int
     */
    public function getDragonTakedowns()
    {
        return $this->container['dragon_takedowns'];
    }

    /**
     * Sets dragon_takedowns
     *
     * @param int $dragon_takedowns dragon_takedowns
     *
     * @return $this
     */
    public function setDragonTakedowns($dragon_takedowns)
    {
        $this->container['dragon_takedowns'] = $dragon_takedowns;

        return $this;
    }

    /**
     * Gets legendary_item_used
     *
     * @return int[]
     */
    public function getLegendaryItemUsed()
    {
        return $this->container['legendary_item_used'];
    }

    /**
     * Sets legendary_item_used
     *
     * @param int[] $legendary_item_used legendary_item_used
     *
     * @return $this
     */
    public function setLegendaryItemUsed($legendary_item_used)
    {
        $this->container['legendary_item_used'] = $legendary_item_used;

        return $this;
    }

    /**
     * Gets effective_heal_and_shielding
     *
     * @return float
     */
    public function getEffectiveHealAndShielding()
    {
        return $this->container['effective_heal_and_shielding'];
    }

    /**
     * Sets effective_heal_and_shielding
     *
     * @param float $effective_heal_and_shielding effective_heal_and_shielding
     *
     * @return $this
     */
    public function setEffectiveHealAndShielding($effective_heal_and_shielding)
    {
        $this->container['effective_heal_and_shielding'] = $effective_heal_and_shielding;

        return $this;
    }

    /**
     * Gets elder_dragon_kills_with_opposing_soul
     *
     * @return int
     */
    public function getElderDragonKillsWithOpposingSoul()
    {
        return $this->container['elder_dragon_kills_with_opposing_soul'];
    }

    /**
     * Sets elder_dragon_kills_with_opposing_soul
     *
     * @param int $elder_dragon_kills_with_opposing_soul elder_dragon_kills_with_opposing_soul
     *
     * @return $this
     */
    public function setElderDragonKillsWithOpposingSoul($elder_dragon_kills_with_opposing_soul)
    {
        $this->container['elder_dragon_kills_with_opposing_soul'] = $elder_dragon_kills_with_opposing_soul;

        return $this;
    }

    /**
     * Gets elder_dragon_multikills
     *
     * @return int
     */
    public function getElderDragonMultikills()
    {
        return $this->container['elder_dragon_multikills'];
    }

    /**
     * Sets elder_dragon_multikills
     *
     * @param int $elder_dragon_multikills elder_dragon_multikills
     *
     * @return $this
     */
    public function setElderDragonMultikills($elder_dragon_multikills)
    {
        $this->container['elder_dragon_multikills'] = $elder_dragon_multikills;

        return $this;
    }

    /**
     * Gets enemy_champion_immobilizations
     *
     * @return int
     */
    public function getEnemyChampionImmobilizations()
    {
        return $this->container['enemy_champion_immobilizations'];
    }

    /**
     * Sets enemy_champion_immobilizations
     *
     * @param int $enemy_champion_immobilizations enemy_champion_immobilizations
     *
     * @return $this
     */
    public function setEnemyChampionImmobilizations($enemy_champion_immobilizations)
    {
        $this->container['enemy_champion_immobilizations'] = $enemy_champion_immobilizations;

        return $this;
    }

    /**
     * Gets enemy_jungle_monster_kills
     *
     * @return double
     */
    public function getEnemyJungleMonsterKills()
    {
        return $this->container['enemy_jungle_monster_kills'];
    }

    /**
     * Sets enemy_jungle_monster_kills
     *
     * @param double $enemy_jungle_monster_kills enemy_jungle_monster_kills
     *
     * @return $this
     */
    public function setEnemyJungleMonsterKills($enemy_jungle_monster_kills)
    {
        $this->container['enemy_jungle_monster_kills'] = $enemy_jungle_monster_kills;

        return $this;
    }

    /**
     * Gets epic_monster_kills_near_enemy_jungler
     *
     * @return int
     */
    public function getEpicMonsterKillsNearEnemyJungler()
    {
        return $this->container['epic_monster_kills_near_enemy_jungler'];
    }

    /**
     * Sets epic_monster_kills_near_enemy_jungler
     *
     * @param int $epic_monster_kills_near_enemy_jungler epic_monster_kills_near_enemy_jungler
     *
     * @return $this
     */
    public function setEpicMonsterKillsNearEnemyJungler($epic_monster_kills_near_enemy_jungler)
    {
        $this->container['epic_monster_kills_near_enemy_jungler'] = $epic_monster_kills_near_enemy_jungler;

        return $this;
    }

    /**
     * Gets epic_monster_kills_within30_seconds_of_spawn
     *
     * @return int
     */
    public function getEpicMonsterKillsWithin30SecondsOfSpawn()
    {
        return $this->container['epic_monster_kills_within30_seconds_of_spawn'];
    }

    /**
     * Sets epic_monster_kills_within30_seconds_of_spawn
     *
     * @param int $epic_monster_kills_within30_seconds_of_spawn epic_monster_kills_within30_seconds_of_spawn
     *
     * @return $this
     */
    public function setEpicMonsterKillsWithin30SecondsOfSpawn($epic_monster_kills_within30_seconds_of_spawn)
    {
        $this->container['epic_monster_kills_within30_seconds_of_spawn'] = $epic_monster_kills_within30_seconds_of_spawn;

        return $this;
    }

    /**
     * Gets epic_monster_steals
     *
     * @return int
     */
    public function getEpicMonsterSteals()
    {
        return $this->container['epic_monster_steals'];
    }

    /**
     * Sets epic_monster_steals
     *
     * @param int $epic_monster_steals epic_monster_steals
     *
     * @return $this
     */
    public function setEpicMonsterSteals($epic_monster_steals)
    {
        $this->container['epic_monster_steals'] = $epic_monster_steals;

        return $this;
    }

    /**
     * Gets epic_monster_stolen_without_smite
     *
     * @return int
     */
    public function getEpicMonsterStolenWithoutSmite()
    {
        return $this->container['epic_monster_stolen_without_smite'];
    }

    /**
     * Sets epic_monster_stolen_without_smite
     *
     * @param int $epic_monster_stolen_without_smite epic_monster_stolen_without_smite
     *
     * @return $this
     */
    public function setEpicMonsterStolenWithoutSmite($epic_monster_stolen_without_smite)
    {
        $this->container['epic_monster_stolen_without_smite'] = $epic_monster_stolen_without_smite;

        return $this;
    }

    /**
     * Gets first_turret_killed
     *
     * @return double
     */
    public function getFirstTurretKilled()
    {
        return $this->container['first_turret_killed'];
    }

    /**
     * Sets first_turret_killed
     *
     * @param double $first_turret_killed first_turret_killed
     *
     * @return $this
     */
    public function setFirstTurretKilled($first_turret_killed)
    {
        $this->container['first_turret_killed'] = $first_turret_killed;

        return $this;
    }

    /**
     * Gets first_turret_killed_time
     *
     * @return float
     */
    public function getFirstTurretKilledTime()
    {
        return $this->container['first_turret_killed_time'];
    }

    /**
     * Sets first_turret_killed_time
     *
     * @param float $first_turret_killed_time first_turret_killed_time
     *
     * @return $this
     */
    public function setFirstTurretKilledTime($first_turret_killed_time)
    {
        $this->container['first_turret_killed_time'] = $first_turret_killed_time;

        return $this;
    }

    /**
     * Gets flawless_aces
     *
     * @return int
     */
    public function getFlawlessAces()
    {
        return $this->container['flawless_aces'];
    }

    /**
     * Sets flawless_aces
     *
     * @param int $flawless_aces flawless_aces
     *
     * @return $this
     */
    public function setFlawlessAces($flawless_aces)
    {
        $this->container['flawless_aces'] = $flawless_aces;

        return $this;
    }

    /**
     * Gets full_team_takedown
     *
     * @return int
     */
    public function getFullTeamTakedown()
    {
        return $this->container['full_team_takedown'];
    }

    /**
     * Sets full_team_takedown
     *
     * @param int $full_team_takedown full_team_takedown
     *
     * @return $this
     */
    public function setFullTeamTakedown($full_team_takedown)
    {
        $this->container['full_team_takedown'] = $full_team_takedown;

        return $this;
    }

    /**
     * Gets game_length
     *
     * @return double
     */
    public function getGameLength()
    {
        return $this->container['game_length'];
    }

    /**
     * Sets game_length
     *
     * @param double $game_length game_length
     *
     * @return $this
     */
    public function setGameLength($game_length)
    {
        $this->container['game_length'] = $game_length;

        return $this;
    }

    /**
     * Gets get_takedowns_in_all_lanes_early_jungle_as_laner
     *
     * @return int
     */
    public function getGetTakedownsInAllLanesEarlyJungleAsLaner()
    {
        return $this->container['get_takedowns_in_all_lanes_early_jungle_as_laner'];
    }

    /**
     * Sets get_takedowns_in_all_lanes_early_jungle_as_laner
     *
     * @param int $get_takedowns_in_all_lanes_early_jungle_as_laner get_takedowns_in_all_lanes_early_jungle_as_laner
     *
     * @return $this
     */
    public function setGetTakedownsInAllLanesEarlyJungleAsLaner($get_takedowns_in_all_lanes_early_jungle_as_laner)
    {
        $this->container['get_takedowns_in_all_lanes_early_jungle_as_laner'] = $get_takedowns_in_all_lanes_early_jungle_as_laner;

        return $this;
    }

    /**
     * Gets gold_per_minute
     *
     * @return double
     */
    public function getGoldPerMinute()
    {
        return $this->container['gold_per_minute'];
    }

    /**
     * Sets gold_per_minute
     *
     * @param double $gold_per_minute gold_per_minute
     *
     * @return $this
     */
    public function setGoldPerMinute($gold_per_minute)
    {
        $this->container['gold_per_minute'] = $gold_per_minute;

        return $this;
    }

    /**
     * Gets had_open_nexus
     *
     * @return int
     */
    public function getHadOpenNexus()
    {
        return $this->container['had_open_nexus'];
    }

    /**
     * Sets had_open_nexus
     *
     * @param int $had_open_nexus had_open_nexus
     *
     * @return $this
     */
    public function setHadOpenNexus($had_open_nexus)
    {
        $this->container['had_open_nexus'] = $had_open_nexus;

        return $this;
    }

    /**
     * Gets immobilize_and_kill_with_ally
     *
     * @return int
     */
    public function getImmobilizeAndKillWithAlly()
    {
        return $this->container['immobilize_and_kill_with_ally'];
    }

    /**
     * Sets immobilize_and_kill_with_ally
     *
     * @param int $immobilize_and_kill_with_ally immobilize_and_kill_with_ally
     *
     * @return $this
     */
    public function setImmobilizeAndKillWithAlly($immobilize_and_kill_with_ally)
    {
        $this->container['immobilize_and_kill_with_ally'] = $immobilize_and_kill_with_ally;

        return $this;
    }

    /**
     * Gets initial_buff_count
     *
     * @return int
     */
    public function getInitialBuffCount()
    {
        return $this->container['initial_buff_count'];
    }

    /**
     * Sets initial_buff_count
     *
     * @param int $initial_buff_count initial_buff_count
     *
     * @return $this
     */
    public function setInitialBuffCount($initial_buff_count)
    {
        $this->container['initial_buff_count'] = $initial_buff_count;

        return $this;
    }

    /**
     * Gets initial_crab_count
     *
     * @return int
     */
    public function getInitialCrabCount()
    {
        return $this->container['initial_crab_count'];
    }

    /**
     * Sets initial_crab_count
     *
     * @param int $initial_crab_count initial_crab_count
     *
     * @return $this
     */
    public function setInitialCrabCount($initial_crab_count)
    {
        $this->container['initial_crab_count'] = $initial_crab_count;

        return $this;
    }

    /**
     * Gets jungle_cs_before10_minutes
     *
     * @return double
     */
    public function getJungleCsBefore10Minutes()
    {
        return $this->container['jungle_cs_before10_minutes'];
    }

    /**
     * Sets jungle_cs_before10_minutes
     *
     * @param double $jungle_cs_before10_minutes jungle_cs_before10_minutes
     *
     * @return $this
     */
    public function setJungleCsBefore10Minutes($jungle_cs_before10_minutes)
    {
        $this->container['jungle_cs_before10_minutes'] = $jungle_cs_before10_minutes;

        return $this;
    }

    /**
     * Gets jungler_takedowns_near_damaged_epic_monster
     *
     * @return int
     */
    public function getJunglerTakedownsNearDamagedEpicMonster()
    {
        return $this->container['jungler_takedowns_near_damaged_epic_monster'];
    }

    /**
     * Sets jungler_takedowns_near_damaged_epic_monster
     *
     * @param int $jungler_takedowns_near_damaged_epic_monster jungler_takedowns_near_damaged_epic_monster
     *
     * @return $this
     */
    public function setJunglerTakedownsNearDamagedEpicMonster($jungler_takedowns_near_damaged_epic_monster)
    {
        $this->container['jungler_takedowns_near_damaged_epic_monster'] = $jungler_takedowns_near_damaged_epic_monster;

        return $this;
    }

    /**
     * Gets kda
     *
     * @return double
     */
    public function getKda()
    {
        return $this->container['kda'];
    }

    /**
     * Sets kda
     *
     * @param double $kda kda
     *
     * @return $this
     */
    public function setKda($kda)
    {
        $this->container['kda'] = $kda;

        return $this;
    }

    /**
     * Gets kill_after_hidden_with_ally
     *
     * @return int
     */
    public function getKillAfterHiddenWithAlly()
    {
        return $this->container['kill_after_hidden_with_ally'];
    }

    /**
     * Sets kill_after_hidden_with_ally
     *
     * @param int $kill_after_hidden_with_ally kill_after_hidden_with_ally
     *
     * @return $this
     */
    public function setKillAfterHiddenWithAlly($kill_after_hidden_with_ally)
    {
        $this->container['kill_after_hidden_with_ally'] = $kill_after_hidden_with_ally;

        return $this;
    }

    /**
     * Gets killed_champ_took_full_team_damage_survived
     *
     * @return int
     */
    public function getKilledChampTookFullTeamDamageSurvived()
    {
        return $this->container['killed_champ_took_full_team_damage_survived'];
    }

    /**
     * Sets killed_champ_took_full_team_damage_survived
     *
     * @param int $killed_champ_took_full_team_damage_survived killed_champ_took_full_team_damage_survived
     *
     * @return $this
     */
    public function setKilledChampTookFullTeamDamageSurvived($killed_champ_took_full_team_damage_survived)
    {
        $this->container['killed_champ_took_full_team_damage_survived'] = $killed_champ_took_full_team_damage_survived;

        return $this;
    }

    /**
     * Gets killing_sprees
     *
     * @return int
     */
    public function getKillingSprees()
    {
        return $this->container['killing_sprees'];
    }

    /**
     * Sets killing_sprees
     *
     * @param int $killing_sprees killing_sprees
     *
     * @return $this
     */
    public function setKillingSprees($killing_sprees)
    {
        $this->container['killing_sprees'] = $killing_sprees;

        return $this;
    }

    /**
     * Gets kill_participation
     *
     * @return double
     */
    public function getKillParticipation()
    {
        return $this->container['kill_participation'];
    }

    /**
     * Sets kill_participation
     *
     * @param double $kill_participation kill_participation
     *
     * @return $this
     */
    public function setKillParticipation($kill_participation)
    {
        $this->container['kill_participation'] = $kill_participation;

        return $this;
    }

    /**
     * Gets kills_near_enemy_turret
     *
     * @return int
     */
    public function getKillsNearEnemyTurret()
    {
        return $this->container['kills_near_enemy_turret'];
    }

    /**
     * Sets kills_near_enemy_turret
     *
     * @param int $kills_near_enemy_turret kills_near_enemy_turret
     *
     * @return $this
     */
    public function setKillsNearEnemyTurret($kills_near_enemy_turret)
    {
        $this->container['kills_near_enemy_turret'] = $kills_near_enemy_turret;

        return $this;
    }

    /**
     * Gets kills_on_other_lanes_early_jungle_as_laner
     *
     * @return int
     */
    public function getKillsOnOtherLanesEarlyJungleAsLaner()
    {
        return $this->container['kills_on_other_lanes_early_jungle_as_laner'];
    }

    /**
     * Sets kills_on_other_lanes_early_jungle_as_laner
     *
     * @param int $kills_on_other_lanes_early_jungle_as_laner kills_on_other_lanes_early_jungle_as_laner
     *
     * @return $this
     */
    public function setKillsOnOtherLanesEarlyJungleAsLaner($kills_on_other_lanes_early_jungle_as_laner)
    {
        $this->container['kills_on_other_lanes_early_jungle_as_laner'] = $kills_on_other_lanes_early_jungle_as_laner;

        return $this;
    }

    /**
     * Gets kills_on_recently_healed_by_aram_pack
     *
     * @return int
     */
    public function getKillsOnRecentlyHealedByAramPack()
    {
        return $this->container['kills_on_recently_healed_by_aram_pack'];
    }

    /**
     * Sets kills_on_recently_healed_by_aram_pack
     *
     * @param int $kills_on_recently_healed_by_aram_pack kills_on_recently_healed_by_aram_pack
     *
     * @return $this
     */
    public function setKillsOnRecentlyHealedByAramPack($kills_on_recently_healed_by_aram_pack)
    {
        $this->container['kills_on_recently_healed_by_aram_pack'] = $kills_on_recently_healed_by_aram_pack;

        return $this;
    }

    /**
     * Gets kills_under_own_turret
     *
     * @return int
     */
    public function getKillsUnderOwnTurret()
    {
        return $this->container['kills_under_own_turret'];
    }

    /**
     * Sets kills_under_own_turret
     *
     * @param int $kills_under_own_turret kills_under_own_turret
     *
     * @return $this
     */
    public function setKillsUnderOwnTurret($kills_under_own_turret)
    {
        $this->container['kills_under_own_turret'] = $kills_under_own_turret;

        return $this;
    }

    /**
     * Gets kills_with_help_from_epic_monster
     *
     * @return int
     */
    public function getKillsWithHelpFromEpicMonster()
    {
        return $this->container['kills_with_help_from_epic_monster'];
    }

    /**
     * Sets kills_with_help_from_epic_monster
     *
     * @param int $kills_with_help_from_epic_monster kills_with_help_from_epic_monster
     *
     * @return $this
     */
    public function setKillsWithHelpFromEpicMonster($kills_with_help_from_epic_monster)
    {
        $this->container['kills_with_help_from_epic_monster'] = $kills_with_help_from_epic_monster;

        return $this;
    }

    /**
     * Gets knock_enemy_into_team_and_kill
     *
     * @return int
     */
    public function getKnockEnemyIntoTeamAndKill()
    {
        return $this->container['knock_enemy_into_team_and_kill'];
    }

    /**
     * Sets knock_enemy_into_team_and_kill
     *
     * @param int $knock_enemy_into_team_and_kill knock_enemy_into_team_and_kill
     *
     * @return $this
     */
    public function setKnockEnemyIntoTeamAndKill($knock_enemy_into_team_and_kill)
    {
        $this->container['knock_enemy_into_team_and_kill'] = $knock_enemy_into_team_and_kill;

        return $this;
    }

    /**
     * Gets k_turrets_destroyed_before_plates_fall
     *
     * @return int
     */
    public function getKTurretsDestroyedBeforePlatesFall()
    {
        return $this->container['k_turrets_destroyed_before_plates_fall'];
    }

    /**
     * Sets k_turrets_destroyed_before_plates_fall
     *
     * @param int $k_turrets_destroyed_before_plates_fall k_turrets_destroyed_before_plates_fall
     *
     * @return $this
     */
    public function setKTurretsDestroyedBeforePlatesFall($k_turrets_destroyed_before_plates_fall)
    {
        $this->container['k_turrets_destroyed_before_plates_fall'] = $k_turrets_destroyed_before_plates_fall;

        return $this;
    }

    /**
     * Gets land_skill_shots_early_game
     *
     * @return int
     */
    public function getLandSkillShotsEarlyGame()
    {
        return $this->container['land_skill_shots_early_game'];
    }

    /**
     * Sets land_skill_shots_early_game
     *
     * @param int $land_skill_shots_early_game land_skill_shots_early_game
     *
     * @return $this
     */
    public function setLandSkillShotsEarlyGame($land_skill_shots_early_game)
    {
        $this->container['land_skill_shots_early_game'] = $land_skill_shots_early_game;

        return $this;
    }

    /**
     * Gets lane_minions_first10_minutes
     *
     * @return int
     */
    public function getLaneMinionsFirst10Minutes()
    {
        return $this->container['lane_minions_first10_minutes'];
    }

    /**
     * Sets lane_minions_first10_minutes
     *
     * @param int $lane_minions_first10_minutes lane_minions_first10_minutes
     *
     * @return $this
     */
    public function setLaneMinionsFirst10Minutes($lane_minions_first10_minutes)
    {
        $this->container['lane_minions_first10_minutes'] = $lane_minions_first10_minutes;

        return $this;
    }

    /**
     * Gets lost_an_inhibitor
     *
     * @return int
     */
    public function getLostAnInhibitor()
    {
        return $this->container['lost_an_inhibitor'];
    }

    /**
     * Sets lost_an_inhibitor
     *
     * @param int $lost_an_inhibitor lost_an_inhibitor
     *
     * @return $this
     */
    public function setLostAnInhibitor($lost_an_inhibitor)
    {
        $this->container['lost_an_inhibitor'] = $lost_an_inhibitor;

        return $this;
    }

    /**
     * Gets max_kill_deficit
     *
     * @return int
     */
    public function getMaxKillDeficit()
    {
        return $this->container['max_kill_deficit'];
    }

    /**
     * Sets max_kill_deficit
     *
     * @param int $max_kill_deficit max_kill_deficit
     *
     * @return $this
     */
    public function setMaxKillDeficit($max_kill_deficit)
    {
        $this->container['max_kill_deficit'] = $max_kill_deficit;

        return $this;
    }

    /**
     * Gets mejais_full_stack_in_time
     *
     * @return int
     */
    public function getMejaisFullStackInTime()
    {
        return $this->container['mejais_full_stack_in_time'];
    }

    /**
     * Sets mejais_full_stack_in_time
     *
     * @param int $mejais_full_stack_in_time mejais_full_stack_in_time
     *
     * @return $this
     */
    public function setMejaisFullStackInTime($mejais_full_stack_in_time)
    {
        $this->container['mejais_full_stack_in_time'] = $mejais_full_stack_in_time;

        return $this;
    }

    /**
     * Gets more_enemy_jungle_than_opponent
     *
     * @return double
     */
    public function getMoreEnemyJungleThanOpponent()
    {
        return $this->container['more_enemy_jungle_than_opponent'];
    }

    /**
     * Sets more_enemy_jungle_than_opponent
     *
     * @param double $more_enemy_jungle_than_opponent more_enemy_jungle_than_opponent
     *
     * @return $this
     */
    public function setMoreEnemyJungleThanOpponent($more_enemy_jungle_than_opponent)
    {
        $this->container['more_enemy_jungle_than_opponent'] = $more_enemy_jungle_than_opponent;

        return $this;
    }

    /**
     * Gets multi_kill_one_spell
     *
     * @return int
     */
    public function getMultiKillOneSpell()
    {
        return $this->container['multi_kill_one_spell'];
    }

    /**
     * Sets multi_kill_one_spell
     *
     * @param int $multi_kill_one_spell This is an offshoot of the OneStone challenge. The code checks if a spell with the same instance ID does the final point of damage to at least 2 Champions. It doesn't matter if they're enemies, but you cannot hurt your friends.
     *
     * @return $this
     */
    public function setMultiKillOneSpell($multi_kill_one_spell)
    {
        $this->container['multi_kill_one_spell'] = $multi_kill_one_spell;

        return $this;
    }

    /**
     * Gets multikills
     *
     * @return int
     */
    public function getMultikills()
    {
        return $this->container['multikills'];
    }

    /**
     * Sets multikills
     *
     * @param int $multikills multikills
     *
     * @return $this
     */
    public function setMultikills($multikills)
    {
        $this->container['multikills'] = $multikills;

        return $this;
    }

    /**
     * Gets multikills_after_aggressive_flash
     *
     * @return int
     */
    public function getMultikillsAfterAggressiveFlash()
    {
        return $this->container['multikills_after_aggressive_flash'];
    }

    /**
     * Sets multikills_after_aggressive_flash
     *
     * @param int $multikills_after_aggressive_flash multikills_after_aggressive_flash
     *
     * @return $this
     */
    public function setMultikillsAfterAggressiveFlash($multikills_after_aggressive_flash)
    {
        $this->container['multikills_after_aggressive_flash'] = $multikills_after_aggressive_flash;

        return $this;
    }

    /**
     * Gets multi_turret_rift_herald_count
     *
     * @return int
     */
    public function getMultiTurretRiftHeraldCount()
    {
        return $this->container['multi_turret_rift_herald_count'];
    }

    /**
     * Sets multi_turret_rift_herald_count
     *
     * @param int $multi_turret_rift_herald_count multi_turret_rift_herald_count
     *
     * @return $this
     */
    public function setMultiTurretRiftHeraldCount($multi_turret_rift_herald_count)
    {
        $this->container['multi_turret_rift_herald_count'] = $multi_turret_rift_herald_count;

        return $this;
    }

    /**
     * Gets outer_turret_executes_before10_minutes
     *
     * @return int
     */
    public function getOuterTurretExecutesBefore10Minutes()
    {
        return $this->container['outer_turret_executes_before10_minutes'];
    }

    /**
     * Sets outer_turret_executes_before10_minutes
     *
     * @param int $outer_turret_executes_before10_minutes outer_turret_executes_before10_minutes
     *
     * @return $this
     */
    public function setOuterTurretExecutesBefore10Minutes($outer_turret_executes_before10_minutes)
    {
        $this->container['outer_turret_executes_before10_minutes'] = $outer_turret_executes_before10_minutes;

        return $this;
    }

    /**
     * Gets outnumbered_kills
     *
     * @return int
     */
    public function getOutnumberedKills()
    {
        return $this->container['outnumbered_kills'];
    }

    /**
     * Sets outnumbered_kills
     *
     * @param int $outnumbered_kills outnumbered_kills
     *
     * @return $this
     */
    public function setOutnumberedKills($outnumbered_kills)
    {
        $this->container['outnumbered_kills'] = $outnumbered_kills;

        return $this;
    }

    /**
     * Gets outnumbered_nexus_kill
     *
     * @return int
     */
    public function getOutnumberedNexusKill()
    {
        return $this->container['outnumbered_nexus_kill'];
    }

    /**
     * Sets outnumbered_nexus_kill
     *
     * @param int $outnumbered_nexus_kill outnumbered_nexus_kill
     *
     * @return $this
     */
    public function setOutnumberedNexusKill($outnumbered_nexus_kill)
    {
        $this->container['outnumbered_nexus_kill'] = $outnumbered_nexus_kill;

        return $this;
    }

    /**
     * Gets perfect_dragon_souls_taken
     *
     * @return int
     */
    public function getPerfectDragonSoulsTaken()
    {
        return $this->container['perfect_dragon_souls_taken'];
    }

    /**
     * Sets perfect_dragon_souls_taken
     *
     * @param int $perfect_dragon_souls_taken perfect_dragon_souls_taken
     *
     * @return $this
     */
    public function setPerfectDragonSoulsTaken($perfect_dragon_souls_taken)
    {
        $this->container['perfect_dragon_souls_taken'] = $perfect_dragon_souls_taken;

        return $this;
    }

    /**
     * Gets perfect_game
     *
     * @return int
     */
    public function getPerfectGame()
    {
        return $this->container['perfect_game'];
    }

    /**
     * Sets perfect_game
     *
     * @param int $perfect_game perfect_game
     *
     * @return $this
     */
    public function setPerfectGame($perfect_game)
    {
        $this->container['perfect_game'] = $perfect_game;

        return $this;
    }

    /**
     * Gets pick_kill_with_ally
     *
     * @return int
     */
    public function getPickKillWithAlly()
    {
        return $this->container['pick_kill_with_ally'];
    }

    /**
     * Sets pick_kill_with_ally
     *
     * @param int $pick_kill_with_ally pick_kill_with_ally
     *
     * @return $this
     */
    public function setPickKillWithAlly($pick_kill_with_ally)
    {
        $this->container['pick_kill_with_ally'] = $pick_kill_with_ally;

        return $this;
    }

    /**
     * Gets poro_explosions
     *
     * @return int
     */
    public function getPoroExplosions()
    {
        return $this->container['poro_explosions'];
    }

    /**
     * Sets poro_explosions
     *
     * @param int $poro_explosions poro_explosions
     *
     * @return $this
     */
    public function setPoroExplosions($poro_explosions)
    {
        $this->container['poro_explosions'] = $poro_explosions;

        return $this;
    }

    /**
     * Gets quick_cleanse
     *
     * @return int
     */
    public function getQuickCleanse()
    {
        return $this->container['quick_cleanse'];
    }

    /**
     * Sets quick_cleanse
     *
     * @param int $quick_cleanse quick_cleanse
     *
     * @return $this
     */
    public function setQuickCleanse($quick_cleanse)
    {
        $this->container['quick_cleanse'] = $quick_cleanse;

        return $this;
    }

    /**
     * Gets quick_first_turret
     *
     * @return int
     */
    public function getQuickFirstTurret()
    {
        return $this->container['quick_first_turret'];
    }

    /**
     * Sets quick_first_turret
     *
     * @param int $quick_first_turret quick_first_turret
     *
     * @return $this
     */
    public function setQuickFirstTurret($quick_first_turret)
    {
        $this->container['quick_first_turret'] = $quick_first_turret;

        return $this;
    }

    /**
     * Gets quick_solo_kills
     *
     * @return int
     */
    public function getQuickSoloKills()
    {
        return $this->container['quick_solo_kills'];
    }

    /**
     * Sets quick_solo_kills
     *
     * @param int $quick_solo_kills quick_solo_kills
     *
     * @return $this
     */
    public function setQuickSoloKills($quick_solo_kills)
    {
        $this->container['quick_solo_kills'] = $quick_solo_kills;

        return $this;
    }

    /**
     * Gets rift_herald_takedowns
     *
     * @return int
     */
    public function getRiftHeraldTakedowns()
    {
        return $this->container['rift_herald_takedowns'];
    }

    /**
     * Sets rift_herald_takedowns
     *
     * @param int $rift_herald_takedowns rift_herald_takedowns
     *
     * @return $this
     */
    public function setRiftHeraldTakedowns($rift_herald_takedowns)
    {
        $this->container['rift_herald_takedowns'] = $rift_herald_takedowns;

        return $this;
    }

    /**
     * Gets save_ally_from_death
     *
     * @return int
     */
    public function getSaveAllyFromDeath()
    {
        return $this->container['save_ally_from_death'];
    }

    /**
     * Sets save_ally_from_death
     *
     * @param int $save_ally_from_death save_ally_from_death
     *
     * @return $this
     */
    public function setSaveAllyFromDeath($save_ally_from_death)
    {
        $this->container['save_ally_from_death'] = $save_ally_from_death;

        return $this;
    }

    /**
     * Gets scuttle_crab_kills
     *
     * @return int
     */
    public function getScuttleCrabKills()
    {
        return $this->container['scuttle_crab_kills'];
    }

    /**
     * Sets scuttle_crab_kills
     *
     * @param int $scuttle_crab_kills scuttle_crab_kills
     *
     * @return $this
     */
    public function setScuttleCrabKills($scuttle_crab_kills)
    {
        $this->container['scuttle_crab_kills'] = $scuttle_crab_kills;

        return $this;
    }

    /**
     * Gets shortest_time_to_ace_from_first_takedown
     *
     * @return float
     */
    public function getShortestTimeToAceFromFirstTakedown()
    {
        return $this->container['shortest_time_to_ace_from_first_takedown'];
    }

    /**
     * Sets shortest_time_to_ace_from_first_takedown
     *
     * @param float $shortest_time_to_ace_from_first_takedown shortest_time_to_ace_from_first_takedown
     *
     * @return $this
     */
    public function setShortestTimeToAceFromFirstTakedown($shortest_time_to_ace_from_first_takedown)
    {
        $this->container['shortest_time_to_ace_from_first_takedown'] = $shortest_time_to_ace_from_first_takedown;

        return $this;
    }

    /**
     * Gets skillshots_dodged
     *
     * @return int
     */
    public function getSkillshotsDodged()
    {
        return $this->container['skillshots_dodged'];
    }

    /**
     * Sets skillshots_dodged
     *
     * @param int $skillshots_dodged skillshots_dodged
     *
     * @return $this
     */
    public function setSkillshotsDodged($skillshots_dodged)
    {
        $this->container['skillshots_dodged'] = $skillshots_dodged;

        return $this;
    }

    /**
     * Gets skillshots_hit
     *
     * @return int
     */
    public function getSkillshotsHit()
    {
        return $this->container['skillshots_hit'];
    }

    /**
     * Sets skillshots_hit
     *
     * @param int $skillshots_hit skillshots_hit
     *
     * @return $this
     */
    public function setSkillshotsHit($skillshots_hit)
    {
        $this->container['skillshots_hit'] = $skillshots_hit;

        return $this;
    }

    /**
     * Gets snowballs_hit
     *
     * @return int
     */
    public function getSnowballsHit()
    {
        return $this->container['snowballs_hit'];
    }

    /**
     * Sets snowballs_hit
     *
     * @param int $snowballs_hit snowballs_hit
     *
     * @return $this
     */
    public function setSnowballsHit($snowballs_hit)
    {
        $this->container['snowballs_hit'] = $snowballs_hit;

        return $this;
    }

    /**
     * Gets solo_baron_kills
     *
     * @return int
     */
    public function getSoloBaronKills()
    {
        return $this->container['solo_baron_kills'];
    }

    /**
     * Sets solo_baron_kills
     *
     * @param int $solo_baron_kills solo_baron_kills
     *
     * @return $this
     */
    public function setSoloBaronKills($solo_baron_kills)
    {
        $this->container['solo_baron_kills'] = $solo_baron_kills;

        return $this;
    }

    /**
     * Gets swarm_defeat_aatrox
     *
     * @return int
     */
    public function getSwarmDefeatAatrox()
    {
        return $this->container['swarm_defeat_aatrox'];
    }

    /**
     * Sets swarm_defeat_aatrox
     *
     * @param int $swarm_defeat_aatrox swarm_defeat_aatrox
     *
     * @return $this
     */
    public function setSwarmDefeatAatrox($swarm_defeat_aatrox)
    {
        $this->container['swarm_defeat_aatrox'] = $swarm_defeat_aatrox;

        return $this;
    }

    /**
     * Gets swarm_defeat_briar
     *
     * @return int
     */
    public function getSwarmDefeatBriar()
    {
        return $this->container['swarm_defeat_briar'];
    }

    /**
     * Sets swarm_defeat_briar
     *
     * @param int $swarm_defeat_briar swarm_defeat_briar
     *
     * @return $this
     */
    public function setSwarmDefeatBriar($swarm_defeat_briar)
    {
        $this->container['swarm_defeat_briar'] = $swarm_defeat_briar;

        return $this;
    }

    /**
     * Gets swarm_defeat_mini_bosses
     *
     * @return int
     */
    public function getSwarmDefeatMiniBosses()
    {
        return $this->container['swarm_defeat_mini_bosses'];
    }

    /**
     * Sets swarm_defeat_mini_bosses
     *
     * @param int $swarm_defeat_mini_bosses swarm_defeat_mini_bosses
     *
     * @return $this
     */
    public function setSwarmDefeatMiniBosses($swarm_defeat_mini_bosses)
    {
        $this->container['swarm_defeat_mini_bosses'] = $swarm_defeat_mini_bosses;

        return $this;
    }

    /**
     * Gets swarm_evolve_weapon
     *
     * @return int
     */
    public function getSwarmEvolveWeapon()
    {
        return $this->container['swarm_evolve_weapon'];
    }

    /**
     * Sets swarm_evolve_weapon
     *
     * @param int $swarm_evolve_weapon swarm_evolve_weapon
     *
     * @return $this
     */
    public function setSwarmEvolveWeapon($swarm_evolve_weapon)
    {
        $this->container['swarm_evolve_weapon'] = $swarm_evolve_weapon;

        return $this;
    }

    /**
     * Gets swarm_have3_passives
     *
     * @return int
     */
    public function getSwarmHave3Passives()
    {
        return $this->container['swarm_have3_passives'];
    }

    /**
     * Sets swarm_have3_passives
     *
     * @param int $swarm_have3_passives swarm_have3_passives
     *
     * @return $this
     */
    public function setSwarmHave3Passives($swarm_have3_passives)
    {
        $this->container['swarm_have3_passives'] = $swarm_have3_passives;

        return $this;
    }

    /**
     * Gets swarm_kill_enemy
     *
     * @return int
     */
    public function getSwarmKillEnemy()
    {
        return $this->container['swarm_kill_enemy'];
    }

    /**
     * Sets swarm_kill_enemy
     *
     * @param int $swarm_kill_enemy swarm_kill_enemy
     *
     * @return $this
     */
    public function setSwarmKillEnemy($swarm_kill_enemy)
    {
        $this->container['swarm_kill_enemy'] = $swarm_kill_enemy;

        return $this;
    }

    /**
     * Gets swarm_pickup_gold
     *
     * @return int
     */
    public function getSwarmPickupGold()
    {
        return $this->container['swarm_pickup_gold'];
    }

    /**
     * Sets swarm_pickup_gold
     *
     * @param int $swarm_pickup_gold swarm_pickup_gold
     *
     * @return $this
     */
    public function setSwarmPickupGold($swarm_pickup_gold)
    {
        $this->container['swarm_pickup_gold'] = $swarm_pickup_gold;

        return $this;
    }

    /**
     * Gets swarm_reach_level50
     *
     * @return int
     */
    public function getSwarmReachLevel50()
    {
        return $this->container['swarm_reach_level50'];
    }

    /**
     * Sets swarm_reach_level50
     *
     * @param int $swarm_reach_level50 swarm_reach_level50
     *
     * @return $this
     */
    public function setSwarmReachLevel50($swarm_reach_level50)
    {
        $this->container['swarm_reach_level50'] = $swarm_reach_level50;

        return $this;
    }

    /**
     * Gets swarm_survive15_min
     *
     * @return int
     */
    public function getSwarmSurvive15Min()
    {
        return $this->container['swarm_survive15_min'];
    }

    /**
     * Sets swarm_survive15_min
     *
     * @param int $swarm_survive15_min swarm_survive15_min
     *
     * @return $this
     */
    public function setSwarmSurvive15Min($swarm_survive15_min)
    {
        $this->container['swarm_survive15_min'] = $swarm_survive15_min;

        return $this;
    }

    /**
     * Gets swarm_win_with5_evolved_weapons
     *
     * @return int
     */
    public function getSwarmWinWith5EvolvedWeapons()
    {
        return $this->container['swarm_win_with5_evolved_weapons'];
    }

    /**
     * Sets swarm_win_with5_evolved_weapons
     *
     * @param int $swarm_win_with5_evolved_weapons swarm_win_with5_evolved_weapons
     *
     * @return $this
     */
    public function setSwarmWinWith5EvolvedWeapons($swarm_win_with5_evolved_weapons)
    {
        $this->container['swarm_win_with5_evolved_weapons'] = $swarm_win_with5_evolved_weapons;

        return $this;
    }

    /**
     * Gets solo_kills
     *
     * @return int
     */
    public function getSoloKills()
    {
        return $this->container['solo_kills'];
    }

    /**
     * Sets solo_kills
     *
     * @param int $solo_kills solo_kills
     *
     * @return $this
     */
    public function setSoloKills($solo_kills)
    {
        $this->container['solo_kills'] = $solo_kills;

        return $this;
    }

    /**
     * Gets stealth_wards_placed
     *
     * @return int
     */
    public function getStealthWardsPlaced()
    {
        return $this->container['stealth_wards_placed'];
    }

    /**
     * Sets stealth_wards_placed
     *
     * @param int $stealth_wards_placed stealth_wards_placed
     *
     * @return $this
     */
    public function setStealthWardsPlaced($stealth_wards_placed)
    {
        $this->container['stealth_wards_placed'] = $stealth_wards_placed;

        return $this;
    }

    /**
     * Gets survived_single_digit_hp_count
     *
     * @return int
     */
    public function getSurvivedSingleDigitHpCount()
    {
        return $this->container['survived_single_digit_hp_count'];
    }

    /**
     * Sets survived_single_digit_hp_count
     *
     * @param int $survived_single_digit_hp_count survived_single_digit_hp_count
     *
     * @return $this
     */
    public function setSurvivedSingleDigitHpCount($survived_single_digit_hp_count)
    {
        $this->container['survived_single_digit_hp_count'] = $survived_single_digit_hp_count;

        return $this;
    }

    /**
     * Gets survived_three_immobilizes_in_fight
     *
     * @return int
     */
    public function getSurvivedThreeImmobilizesInFight()
    {
        return $this->container['survived_three_immobilizes_in_fight'];
    }

    /**
     * Sets survived_three_immobilizes_in_fight
     *
     * @param int $survived_three_immobilizes_in_fight survived_three_immobilizes_in_fight
     *
     * @return $this
     */
    public function setSurvivedThreeImmobilizesInFight($survived_three_immobilizes_in_fight)
    {
        $this->container['survived_three_immobilizes_in_fight'] = $survived_three_immobilizes_in_fight;

        return $this;
    }

    /**
     * Gets takedown_on_first_turret
     *
     * @return int
     */
    public function getTakedownOnFirstTurret()
    {
        return $this->container['takedown_on_first_turret'];
    }

    /**
     * Sets takedown_on_first_turret
     *
     * @param int $takedown_on_first_turret takedown_on_first_turret
     *
     * @return $this
     */
    public function setTakedownOnFirstTurret($takedown_on_first_turret)
    {
        $this->container['takedown_on_first_turret'] = $takedown_on_first_turret;

        return $this;
    }

    /**
     * Gets takedowns
     *
     * @return int
     */
    public function getTakedowns()
    {
        return $this->container['takedowns'];
    }

    /**
     * Sets takedowns
     *
     * @param int $takedowns takedowns
     *
     * @return $this
     */
    public function setTakedowns($takedowns)
    {
        $this->container['takedowns'] = $takedowns;

        return $this;
    }

    /**
     * Gets takedowns_after_gaining_level_advantage
     *
     * @return int
     */
    public function getTakedownsAfterGainingLevelAdvantage()
    {
        return $this->container['takedowns_after_gaining_level_advantage'];
    }

    /**
     * Sets takedowns_after_gaining_level_advantage
     *
     * @param int $takedowns_after_gaining_level_advantage takedowns_after_gaining_level_advantage
     *
     * @return $this
     */
    public function setTakedownsAfterGainingLevelAdvantage($takedowns_after_gaining_level_advantage)
    {
        $this->container['takedowns_after_gaining_level_advantage'] = $takedowns_after_gaining_level_advantage;

        return $this;
    }

    /**
     * Gets takedowns_before_jungle_minion_spawn
     *
     * @return int
     */
    public function getTakedownsBeforeJungleMinionSpawn()
    {
        return $this->container['takedowns_before_jungle_minion_spawn'];
    }

    /**
     * Sets takedowns_before_jungle_minion_spawn
     *
     * @param int $takedowns_before_jungle_minion_spawn takedowns_before_jungle_minion_spawn
     *
     * @return $this
     */
    public function setTakedownsBeforeJungleMinionSpawn($takedowns_before_jungle_minion_spawn)
    {
        $this->container['takedowns_before_jungle_minion_spawn'] = $takedowns_before_jungle_minion_spawn;

        return $this;
    }

    /**
     * Gets takedowns_first_x_minutes
     *
     * @return int
     */
    public function getTakedownsFirstXMinutes()
    {
        return $this->container['takedowns_first_x_minutes'];
    }

    /**
     * Sets takedowns_first_x_minutes
     *
     * @param int $takedowns_first_x_minutes takedowns_first_x_minutes
     *
     * @return $this
     */
    public function setTakedownsFirstXMinutes($takedowns_first_x_minutes)
    {
        $this->container['takedowns_first_x_minutes'] = $takedowns_first_x_minutes;

        return $this;
    }

    /**
     * Gets takedowns_in_alcove
     *
     * @return int
     */
    public function getTakedownsInAlcove()
    {
        return $this->container['takedowns_in_alcove'];
    }

    /**
     * Sets takedowns_in_alcove
     *
     * @param int $takedowns_in_alcove takedowns_in_alcove
     *
     * @return $this
     */
    public function setTakedownsInAlcove($takedowns_in_alcove)
    {
        $this->container['takedowns_in_alcove'] = $takedowns_in_alcove;

        return $this;
    }

    /**
     * Gets takedowns_in_enemy_fountain
     *
     * @return int
     */
    public function getTakedownsInEnemyFountain()
    {
        return $this->container['takedowns_in_enemy_fountain'];
    }

    /**
     * Sets takedowns_in_enemy_fountain
     *
     * @param int $takedowns_in_enemy_fountain takedowns_in_enemy_fountain
     *
     * @return $this
     */
    public function setTakedownsInEnemyFountain($takedowns_in_enemy_fountain)
    {
        $this->container['takedowns_in_enemy_fountain'] = $takedowns_in_enemy_fountain;

        return $this;
    }

    /**
     * Gets team_baron_kills
     *
     * @return int
     */
    public function getTeamBaronKills()
    {
        return $this->container['team_baron_kills'];
    }

    /**
     * Sets team_baron_kills
     *
     * @param int $team_baron_kills team_baron_kills
     *
     * @return $this
     */
    public function setTeamBaronKills($team_baron_kills)
    {
        $this->container['team_baron_kills'] = $team_baron_kills;

        return $this;
    }

    /**
     * Gets team_damage_percentage
     *
     * @return double
     */
    public function getTeamDamagePercentage()
    {
        return $this->container['team_damage_percentage'];
    }

    /**
     * Sets team_damage_percentage
     *
     * @param double $team_damage_percentage team_damage_percentage
     *
     * @return $this
     */
    public function setTeamDamagePercentage($team_damage_percentage)
    {
        $this->container['team_damage_percentage'] = $team_damage_percentage;

        return $this;
    }

    /**
     * Gets team_elder_dragon_kills
     *
     * @return int
     */
    public function getTeamElderDragonKills()
    {
        return $this->container['team_elder_dragon_kills'];
    }

    /**
     * Sets team_elder_dragon_kills
     *
     * @param int $team_elder_dragon_kills team_elder_dragon_kills
     *
     * @return $this
     */
    public function setTeamElderDragonKills($team_elder_dragon_kills)
    {
        $this->container['team_elder_dragon_kills'] = $team_elder_dragon_kills;

        return $this;
    }

    /**
     * Gets team_rift_herald_kills
     *
     * @return int
     */
    public function getTeamRiftHeraldKills()
    {
        return $this->container['team_rift_herald_kills'];
    }

    /**
     * Sets team_rift_herald_kills
     *
     * @param int $team_rift_herald_kills team_rift_herald_kills
     *
     * @return $this
     */
    public function setTeamRiftHeraldKills($team_rift_herald_kills)
    {
        $this->container['team_rift_herald_kills'] = $team_rift_herald_kills;

        return $this;
    }

    /**
     * Gets took_large_damage_survived
     *
     * @return int
     */
    public function getTookLargeDamageSurvived()
    {
        return $this->container['took_large_damage_survived'];
    }

    /**
     * Sets took_large_damage_survived
     *
     * @param int $took_large_damage_survived took_large_damage_survived
     *
     * @return $this
     */
    public function setTookLargeDamageSurvived($took_large_damage_survived)
    {
        $this->container['took_large_damage_survived'] = $took_large_damage_survived;

        return $this;
    }

    /**
     * Gets turret_plates_taken
     *
     * @return int
     */
    public function getTurretPlatesTaken()
    {
        return $this->container['turret_plates_taken'];
    }

    /**
     * Sets turret_plates_taken
     *
     * @param int $turret_plates_taken turret_plates_taken
     *
     * @return $this
     */
    public function setTurretPlatesTaken($turret_plates_taken)
    {
        $this->container['turret_plates_taken'] = $turret_plates_taken;

        return $this;
    }

    /**
     * Gets turrets_taken_with_rift_herald
     *
     * @return int
     */
    public function getTurretsTakenWithRiftHerald()
    {
        return $this->container['turrets_taken_with_rift_herald'];
    }

    /**
     * Sets turrets_taken_with_rift_herald
     *
     * @param int $turrets_taken_with_rift_herald Any player who damages a tower that is destroyed within 30 seconds of a Rift Herald charge will receive credit. A player who does not damage the tower will not receive credit.
     *
     * @return $this
     */
    public function setTurretsTakenWithRiftHerald($turrets_taken_with_rift_herald)
    {
        $this->container['turrets_taken_with_rift_herald'] = $turrets_taken_with_rift_herald;

        return $this;
    }

    /**
     * Gets turret_takedowns
     *
     * @return int
     */
    public function getTurretTakedowns()
    {
        return $this->container['turret_takedowns'];
    }

    /**
     * Sets turret_takedowns
     *
     * @param int $turret_takedowns turret_takedowns
     *
     * @return $this
     */
    public function setTurretTakedowns($turret_takedowns)
    {
        $this->container['turret_takedowns'] = $turret_takedowns;

        return $this;
    }

    /**
     * Gets twenty_minions_in3_seconds_count
     *
     * @return int
     */
    public function getTwentyMinionsIn3SecondsCount()
    {
        return $this->container['twenty_minions_in3_seconds_count'];
    }

    /**
     * Sets twenty_minions_in3_seconds_count
     *
     * @param int $twenty_minions_in3_seconds_count twenty_minions_in3_seconds_count
     *
     * @return $this
     */
    public function setTwentyMinionsIn3SecondsCount($twenty_minions_in3_seconds_count)
    {
        $this->container['twenty_minions_in3_seconds_count'] = $twenty_minions_in3_seconds_count;

        return $this;
    }

    /**
     * Gets two_wards_one_sweeper_count
     *
     * @return int
     */
    public function getTwoWardsOneSweeperCount()
    {
        return $this->container['two_wards_one_sweeper_count'];
    }

    /**
     * Sets two_wards_one_sweeper_count
     *
     * @param int $two_wards_one_sweeper_count two_wards_one_sweeper_count
     *
     * @return $this
     */
    public function setTwoWardsOneSweeperCount($two_wards_one_sweeper_count)
    {
        $this->container['two_wards_one_sweeper_count'] = $two_wards_one_sweeper_count;

        return $this;
    }

    /**
     * Gets unseen_recalls
     *
     * @return int
     */
    public function getUnseenRecalls()
    {
        return $this->container['unseen_recalls'];
    }

    /**
     * Sets unseen_recalls
     *
     * @param int $unseen_recalls unseen_recalls
     *
     * @return $this
     */
    public function setUnseenRecalls($unseen_recalls)
    {
        $this->container['unseen_recalls'] = $unseen_recalls;

        return $this;
    }

    /**
     * Gets vision_score_per_minute
     *
     * @return double
     */
    public function getVisionScorePerMinute()
    {
        return $this->container['vision_score_per_minute'];
    }

    /**
     * Sets vision_score_per_minute
     *
     * @param double $vision_score_per_minute vision_score_per_minute
     *
     * @return $this
     */
    public function setVisionScorePerMinute($vision_score_per_minute)
    {
        $this->container['vision_score_per_minute'] = $vision_score_per_minute;

        return $this;
    }

    /**
     * Gets wards_guarded
     *
     * @return int
     */
    public function getWardsGuarded()
    {
        return $this->container['wards_guarded'];
    }

    /**
     * Sets wards_guarded
     *
     * @param int $wards_guarded wards_guarded
     *
     * @return $this
     */
    public function setWardsGuarded($wards_guarded)
    {
        $this->container['wards_guarded'] = $wards_guarded;

        return $this;
    }

    /**
     * Gets ward_takedowns
     *
     * @return int
     */
    public function getWardTakedowns()
    {
        return $this->container['ward_takedowns'];
    }

    /**
     * Sets ward_takedowns
     *
     * @param int $ward_takedowns ward_takedowns
     *
     * @return $this
     */
    public function setWardTakedowns($ward_takedowns)
    {
        $this->container['ward_takedowns'] = $ward_takedowns;

        return $this;
    }

    /**
     * Gets ward_takedowns_before20_m
     *
     * @return int
     */
    public function getWardTakedownsBefore20M()
    {
        return $this->container['ward_takedowns_before20_m'];
    }

    /**
     * Sets ward_takedowns_before20_m
     *
     * @param int $ward_takedowns_before20_m ward_takedowns_before20_m
     *
     * @return $this
     */
    public function setWardTakedownsBefore20M($ward_takedowns_before20_m)
    {
        $this->container['ward_takedowns_before20_m'] = $ward_takedowns_before20_m;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


